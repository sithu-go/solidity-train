{
	"id": "327c7b292b4d557c71954e7716e8d1f9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StrangeUSDT.sol": {
				"content": "pragma solidity 0.4.17;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n    /**\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n      * account.\n      */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n      * @dev Throws if called by any account other than the owner.\n      */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n    uint public _totalSupply;\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address who) public constant returns (uint);\n    function transfer(address to, uint value) public;\n    event Transfer(address indexed from, address indexed to, uint value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint);\n    function transferFrom(address from, address to, uint value) public;\n    function approve(address spender, uint value) public;\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is Ownable, ERC20Basic {\n    using SafeMath for uint;\n\n    mapping(address => uint) public balances;\n\n    // additional variables for use if transaction fees ever became necessary\n    uint public basisPointsRate = 0;\n    uint public maximumFee = 0;\n\n    /**\n    * @dev Fix for the ERC20 short address attack.\n    */\n    modifier onlyPayloadSize(uint size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(msg.sender, owner, fee);\n        }\n        Transfer(msg.sender, _to, sendAmount);\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n\n    mapping (address => mapping (address => uint)) public allowed;\n\n    uint public constant MAX_UINT = 2**256 - 1;\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\n        var _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        if (_allowance < MAX_UINT) {\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(_from, owner, fee);\n        }\n        Transfer(_from, _to, sendAmount);\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    /**\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint specifying the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n\ncontract BlackList is Ownable, BasicToken {\n\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\n    function getBlackListStatus(address _maker) external constant returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function getOwner() external constant returns (address) {\n        return owner;\n    }\n\n    mapping (address => bool) public isBlackListed;\n    \n    function addBlackList (address _evilUser) public onlyOwner {\n        isBlackListed[_evilUser] = true;\n        AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList (address _clearedUser) public onlyOwner {\n        isBlackListed[_clearedUser] = false;\n        RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n        require(isBlackListed[_blackListedUser]);\n        uint dirtyFunds = balanceOf(_blackListedUser);\n        balances[_blackListedUser] = 0;\n        _totalSupply -= dirtyFunds;\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n\n    event AddedBlackList(address _user);\n\n    event RemovedBlackList(address _user);\n\n}\n\ncontract UpgradedStandardToken is StandardToken{\n    // those methods are called by the legacy contract\n    // and they must ensure msg.sender to be the contract address\n    function transferByLegacy(address from, address to, uint value) public;\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\n    function approveByLegacy(address from, address spender, uint value) public;\n}\n\ncontract TetherToken is Pausable, StandardToken, BlackList {\n\n    string public name;\n    string public symbol;\n    uint public decimals;\n    address public upgradedAddress;\n    bool public deprecated;\n\n    //  The contract can be initialized with a number of tokens\n    //  All the tokens are deposited to the owner address\n    //\n    // @param _balance Initial supply of the contract\n    // @param _name Token Name\n    // @param _symbol Token symbol\n    // @param _decimals Token decimals\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\n        _totalSupply = _initialSupply;\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        balances[owner] = _initialSupply;\n        deprecated = false;\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transfer(address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[msg.sender]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n        } else {\n            return super.transfer(_to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[_from]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function balanceOf(address who) public constant returns (uint) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // deprecate current contract in favour of a new one\n    function deprecate(address _upgradedAddress) public onlyOwner {\n        deprecated = true;\n        upgradedAddress = _upgradedAddress;\n        Deprecate(_upgradedAddress);\n    }\n\n    // deprecate current contract if favour of a new one\n    function totalSupply() public constant returns (uint) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).totalSupply();\n        } else {\n            return _totalSupply;\n        }\n    }\n\n    // Issue a new amount of tokens\n    // these tokens are deposited into the owner address\n    //\n    // @param _amount Number of tokens to be issued\n    function issue(uint amount) public onlyOwner {\n        require(_totalSupply + amount > _totalSupply);\n        require(balances[owner] + amount > balances[owner]);\n\n        balances[owner] += amount;\n        _totalSupply += amount;\n        Issue(amount);\n    }\n\n    // Redeem tokens.\n    // These tokens are withdrawn from the owner address\n    // if the balance must be enough to cover the redeem\n    // or the call will fail.\n    // @param _amount Number of tokens to be issued\n    function redeem(uint amount) public onlyOwner {\n        require(_totalSupply >= amount);\n        require(balances[owner] >= amount);\n\n        _totalSupply -= amount;\n        balances[owner] -= amount;\n        Redeem(amount);\n    }\n\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\n        require(newBasisPoints < 20);\n        require(newMaxFee < 50);\n\n        basisPointsRate = newBasisPoints;\n        maximumFee = newMaxFee.mul(10**decimals);\n\n        Params(basisPointsRate, maximumFee);\n    }\n\n    // Called when new token are issued\n    event Issue(uint amount);\n\n    // Called when tokens are redeemed\n    event Redeem(uint amount);\n\n    // Called when contract is deprecated\n    event Deprecate(address newAddress);\n\n    // Called if contract ever adds fees\n    event Params(uint feeBasisPoints, uint maxFee);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/StrangeUSDT.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Basic token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"BlackList": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"removeBlackList(address)": "e4997dc5",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				},
				"ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20 interface"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"ERC20Basic": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {},
						"title": "ERC20Basic"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_totalSupply()": "3eaaf86b",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "    /* \"contracts/StrangeUSDT.sol\":1097:1820  contract Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/StrangeUSDT.sol\":1274:1335  function Ownable() public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n    /* \"contracts/StrangeUSDT.sol\":1318:1328  msg.sender */\n  caller\n    /* \"contracts/StrangeUSDT.sol\":1310:1315  owner */\n  0x0\n  dup1\n    /* \"contracts/StrangeUSDT.sol\":1310:1328  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":1097:1820  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StrangeUSDT.sol\":1097:1820  contract Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x8da5cb5b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_3\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/StrangeUSDT.sol\":1120:1140  address public owner */\n    tag_2:\n      jumpi(tag_4, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_4:\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":1120:1140  address public owner */\n    tag_6:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_9:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/StrangeUSDT.sol\":1766:1767  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":1746:1768  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1746:1754  newOwner */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":1746:1768  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":1742:1811  if (newOwner != address(0)) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":1792:1800  newOwner */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":1784:1789  owner */\n      0x0\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":1784:1800  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":1742:1811  if (newOwner != address(0)) {... */\n    tag_13:\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058205cf94f80358be9aa33a0fd1256cc6db8976575904dba52d413477b531bb5bb6b0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fc8061005e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058205cf94f80358be9aa33a0fd1256cc6db8976575904dba52d413477b531bb5bb6b0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1FC DUP1 PUSH2 0x5E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5c 0xf9 0x4f DUP1 CALLDATALOAD DUP12 0xe9 0xaa CALLER LOG0 REVERT SLT JUMP 0xcc PUSH14 0xB8976575904DBA52D413477B531B 0xb5 0xbb PUSH12 0x2900000000000000000000 ",
							"sourceMap": "1097:723:0:-;;;1274:61;;;;;;;;1318:10;1310:5;;:18;;;;;;;;;;;;;;;;;;1097:723;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638da5cb5b14610048578063f2fde38b1461009d57600080fd5b341561005357600080fd5b61005b6100d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100a857600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506100fb565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561015657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156101cd57806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a723058205cf94f80358be9aa33a0fd1256cc6db8976575904dba52d413477b531bb5bb6b0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x5c 0xf9 0x4f DUP1 CALLDATALOAD DUP12 0xe9 0xaa CALLER LOG0 REVERT SLT JUMP 0xcc PUSH14 0xB8976575904DBA52D413477B531B 0xb5 0xbb PUSH12 0x2900000000000000000000 ",
							"sourceMap": "1097:723:0:-;;;;;;;;;;;;;;;;;;;;;;;1120:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:20;;;;;;;;;;;;;:::o;1670:147::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;1766:1;1746:22;;:8;:22;;;;1742:69;;;1792:8;1784:5;;:16;;;;;;;;;;;;;;;;;;1742:69;1670:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "101600",
								"executionCost": "20408",
								"totalCost": "122008"
							},
							"external": {
								"owner()": "413",
								"transferOwnership(address)": "20755"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1097,
									"end": 1820,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "MSTORE"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "CALLVALUE"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "ISZERO"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "JUMPI"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "DUP1"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "REVERT"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 1274,
									"end": 1335,
									"name": "JUMPDEST"
								},
								{
									"begin": 1318,
									"end": 1328,
									"name": "CALLER"
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "DUP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "EXP"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP2"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SLOAD"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP2"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "MUL"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "NOT"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "AND"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SWAP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP4"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "AND"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "MUL"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "OR"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SWAP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SSTORE"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "POP"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "DUP1"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "CODECOPY"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1820,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058205cf94f80358be9aa33a0fd1256cc6db8976575904dba52d413477b531bb5bb6b0029",
									".code": [
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "MSTORE"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "SWAP1"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "DIV"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "AND"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "EQ"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "JUMPI"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "EQ"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "JUMPI"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "DUP1"
										},
										{
											"begin": 1097,
											"end": 1820,
											"name": "REVERT"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "CALLVALUE"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "ISZERO"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPI"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "REVERT"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "RETURN"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "CALLVALUE"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "ISZERO"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPI"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "REVERT"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "ADD"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP2"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "STOP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DIV"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "AND"
										},
										{
											"begin": 1746,
											"end": 1754,
											"name": "DUP2"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "AND"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "EQ"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "ISZERO"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "ISZERO"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "JUMPI"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "EXP"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP2"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SLOAD"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP2"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MUL"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "NOT"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "AND"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP4"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "AND"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MUL"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "OR"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SSTORE"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/StrangeUSDT.sol\":\"Ownable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StrangeUSDT.sol\":{\"keccak256\":\"0x7a58743de350f7a26433bc6e61660499154a993260c9a01298ce739616a33ac2\",\"urls\":[\"bzzr://d658ac300c1fe728c4aa4a0d50ca6bd59e9c0669675f1e3f06ff0df5d12a4cc2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Pausable": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						},
						"title": "Pausable"
					},
					"evm": {
						"assembly": "    /* \"contracts/StrangeUSDT.sol\":7246:7991  contract Pausable is Ownable {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/StrangeUSDT.sol\":7337:7342  false */\n  0x0\n    /* \"contracts/StrangeUSDT.sol\":7316:7342  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":1318:1328  msg.sender */\n  caller\n    /* \"contracts/StrangeUSDT.sol\":1310:1315  owner */\n  0x0\n  dup1\n    /* \"contracts/StrangeUSDT.sol\":1310:1328  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":7246:7991  contract Pausable is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StrangeUSDT.sol\":7246:7991  contract Pausable is Ownable {... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3f4ba83a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"contracts/StrangeUSDT.sol\":7902:7989  function unpause() onlyOwner whenPaused public {... */\n    tag_2:\n      jumpi(tag_7, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_7:\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":7316:7342  bool public paused = false */\n    tag_3:\n      jumpi(tag_10, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_10:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":7735:7820  function pause() onlyOwner whenNotPaused public {... */\n    tag_4:\n      jumpi(tag_13, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_13:\n      tag_14\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":1120:1140  address public owner */\n    tag_5:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":7902:7989  function unpause() onlyOwner whenPaused public {... */\n    tag_9:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"contracts/StrangeUSDT.sol\":7637:7643  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":7629:7644  require(paused) */\n      iszero\n      iszero\n      tag_25\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_25:\n        /* \"contracts/StrangeUSDT.sol\":7964:7969  false */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":7955:7961  paused */\n      dup1\n      0x14\n        /* \"contracts/StrangeUSDT.sol\":7955:7969  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":7975:7984  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":7902:7989  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":7316:7342  bool public paused = false */\n    tag_12:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":7735:7820  function pause() onlyOwner whenNotPaused public {... */\n    tag_15:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_28\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_28:\n        /* \"contracts/StrangeUSDT.sol\":7485:7491  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":7484:7491  !paused */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":7476:7492  require(!paused) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"contracts/StrangeUSDT.sol\":7798:7802  true */\n      0x1\n        /* \"contracts/StrangeUSDT.sol\":7789:7795  paused */\n      0x0\n      0x14\n        /* \"contracts/StrangeUSDT.sol\":7789:7802  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":7808:7815  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":7735:7820  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":1120:1140  address public owner */\n    tag_18:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_33\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_33:\n        /* \"contracts/StrangeUSDT.sol\":1766:1767  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":1746:1768  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1746:1754  newOwner */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":1746:1768  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":1742:1811  if (newOwner != address(0)) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":1792:1800  newOwner */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":1784:1789  owner */\n      0x0\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":1784:1800  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":1742:1811  if (newOwner != address(0)) {... */\n    tag_35:\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820efa05397b594026c270fab5d803a46fc5d0fea2502c490cc8edd1011e83df21d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104058061006d6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820efa05397b594026c270fab5d803a46fc5d0fea2502c490cc8edd1011e83df21d0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x405 DUP1 PUSH2 0x6D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xef LOG0 MSTORE8 SWAP8 0xb5 SWAP5 MUL PUSH13 0x270FAB5D803A46FC5D0FEA2502 0xc4 SWAP1 0xcc DUP15 0xdd LT GT 0xe8 RETURNDATASIZE CALLCODE 0x1d STOP 0x29 ",
							"sourceMap": "7246:745:0:-;;;7337:5;7316:26;;;;;;;;;;;;;;;;;;;;1318:10;1310:5;;:18;;;;;;;;;;;;;;;;;;7246:745;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633f4ba83a146100695780635c975abb1461007e5780638456cb59146100ab5780638da5cb5b146100c0578063f2fde38b1461011557600080fd5b341561007457600080fd5b61007c61014e565b005b341561008957600080fd5b61009161020c565b604051808215151515815260200191505060405180910390f35b34156100b657600080fd5b6100be61021f565b005b34156100cb57600080fd5b6100d36102df565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012057600080fd5b61014c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610304565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a957600080fd5b600060149054906101000a900460ff1615156101c457600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b600060149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027a57600080fd5b600060149054906101000a900460ff1615151561029657600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561035f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415156103d657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505600a165627a7a72305820efa05397b594026c270fab5d803a46fc5d0fea2502c490cc8edd1011e83df21d0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7C PUSH2 0x14E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x91 PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x21F JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x35F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3D6 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xef LOG0 MSTORE8 SWAP8 0xb5 SWAP5 MUL PUSH13 0x270FAB5D803A46FC5D0FEA2502 0xc4 SWAP1 0xcc DUP15 0xdd LT GT 0xe8 RETURNDATASIZE CALLCODE 0x1d STOP 0x29 ",
							"sourceMap": "7246:745:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7902:87;;;;;;;;;;;;;;7316:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7735:85;;;;;;;;;;;;;;1120:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;7902:87;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;7637:6;;;;;;;;;;;7629:15;;;;;;;;7964:5;7955:6;;:14;;;;;;;;;;;;;;;;;;7975:9;;;;;;;;;;7902:87::o;7316:26::-;;;;;;;;;;;;;:::o;7735:85::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;7485:6;;;;;;;;;;;7484:7;7476:16;;;;;;;;7798:4;7789:6;;:13;;;;;;;;;;;;;;;;;;7808:7;;;;;;;;;;7735:85::o;1120:20::-;;;;;;;;;;;;;:::o;1670:147::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;1766:1;1746:22;;:8;:22;;;;1742:69;;;1792:8;1784:5;;:16;;;;;;;;;;;;;;;;;;1742:69;1670:147;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "205800",
								"executionCost": "40810",
								"totalCost": "246610"
							},
							"external": {
								"owner()": "479",
								"pause()": "21833",
								"paused()": "485",
								"transferOwnership(address)": "20821",
								"unpause()": "21786"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7246,
									"end": 7991,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "MSTORE"
								},
								{
									"begin": 7337,
									"end": 7342,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP1"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "EXP"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP2"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SLOAD"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP2"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "MUL"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "NOT"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "AND"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SWAP1"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP4"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "ISZERO"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "ISZERO"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "MUL"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "OR"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SWAP1"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SSTORE"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "POP"
								},
								{
									"begin": 1318,
									"end": 1328,
									"name": "CALLER"
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "DUP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "EXP"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP2"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SLOAD"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP2"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "MUL"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "NOT"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "AND"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SWAP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP4"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "AND"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "MUL"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "OR"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SWAP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SSTORE"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "POP"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "DUP1"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "CODECOPY"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7246,
									"end": 7991,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820efa05397b594026c270fab5d803a46fc5d0fea2502c490cc8edd1011e83df21d0029",
									".code": [
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "MSTORE"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "SWAP1"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "DIV"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "AND"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "EQ"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "JUMPI"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "EQ"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "JUMPI"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "EQ"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "JUMPI"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "EQ"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "JUMPI"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "EQ"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "JUMPI"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "DUP1"
										},
										{
											"begin": 7246,
											"end": 7991,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "CALLVALUE"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "ISZERO"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMP"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "STOP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "CALLVALUE"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPI"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "REVERT"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "MLOAD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP3"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "MSTORE"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ADD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "POP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "POP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "MLOAD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SUB"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "RETURN"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "CALLVALUE"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "ISZERO"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPI"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "DUP1"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "REVERT"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMP"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "STOP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "CALLVALUE"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "ISZERO"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPI"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "REVERT"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "RETURN"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "CALLVALUE"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "ISZERO"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPI"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "REVERT"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "ADD"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP2"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "STOP"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SWAP1"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SLOAD"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SWAP1"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "EXP"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SWAP1"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "DIV"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "AND"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "JUMPI"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "REVERT"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7961,
											"name": "DUP1"
										},
										{
											"begin": 7955,
											"end": 7961,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "EXP"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SLOAD"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "MUL"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "NOT"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "AND"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "DUP4"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "ISZERO"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "ISZERO"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "MUL"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "OR"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SSTORE"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "POP"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "MLOAD"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "MLOAD"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "DUP1"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "SWAP2"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "SUB"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "SWAP1"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "LOG1"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SLOAD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "EXP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DIV"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "AND"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SLOAD"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "EXP"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "DIV"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "AND"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPI"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "DUP1"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "REVERT"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPDEST"
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "EXP"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "DUP2"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SLOAD"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "DUP2"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "MUL"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "NOT"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "AND"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SWAP1"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "DUP4"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "ISZERO"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "ISZERO"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "MUL"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "OR"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SWAP1"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SSTORE"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "POP"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "MLOAD"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "MLOAD"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "DUP1"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "SWAP2"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "SUB"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "SWAP1"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "LOG1"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DIV"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "AND"
										},
										{
											"begin": 1746,
											"end": 1754,
											"name": "DUP2"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "AND"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "EQ"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "ISZERO"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "ISZERO"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "JUMPI"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "EXP"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP2"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SLOAD"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP2"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MUL"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "NOT"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "AND"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP4"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "AND"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MUL"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "OR"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SSTORE"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Pausable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/StrangeUSDT.sol\":\"Pausable\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StrangeUSDT.sol\":{\"keccak256\":\"0x7a58743de350f7a26433bc6e61660499154a993260c9a01298ce739616a33ac2\",\"urls\":[\"bzzr://d658ac300c1fe728c4aa4a0d50ca6bd59e9c0669675f1e3f06ff0df5d12a4cc2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/StrangeUSDT.sol\":115:905  library SafeMath {... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StrangeUSDT.sol\":115:905  library SafeMath {... */\n      mstore(0x40, 0x60)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820b694ceb6812d077ad38f2eec53c1e029a97fe16012d153d6ed925fe3e5db08d80029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040523415600e57600080fd5b603580601b6000396000f3006060604052600080fd00a165627a7a72305820b694ceb6812d077ad38f2eec53c1e029a97fe16012d153d6ed925fe3e5db08d80029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH1 0xE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x1B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb6 SWAP5 0xce 0xb6 DUP2 0x2d SMOD PUSH27 0xD38F2EEC53C1E029A97FE16012D153D6ED925FE3E5DB08D8002900 ",
							"sourceMap": "115:790:0:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600080fd00a165627a7a72305820b694ceb6812d077ad38f2eec53c1e029a97fe16012d153d6ed925fe3e5db08d80029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb6 SWAP5 0xce 0xb6 DUP2 0x2d SMOD PUSH27 0xD38F2EEC53C1E029A97FE16012D153D6ED925FE3E5DB08D8002900 ",
							"sourceMap": "115:790:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "61",
								"totalCost": "10661"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "MSTORE"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "CALLVALUE"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "ISZERO"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "JUMPI"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "DUP1"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "REVERT"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "JUMPDEST"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "DUP1"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "CODECOPY"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 115,
									"end": 905,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b694ceb6812d077ad38f2eec53c1e029a97fe16012d153d6ed925fe3e5db08d80029",
									".code": [
										{
											"begin": 115,
											"end": 905,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 115,
											"end": 905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 905,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 905,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 905,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/StrangeUSDT.sol\":\"SafeMath\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StrangeUSDT.sol\":{\"keccak256\":\"0x7a58743de350f7a26433bc6e61660499154a993260c9a01298ce739616a33ac2\",\"urls\":[\"bzzr://d658ac300c1fe728c4aa4a0d50ca6bd59e9c0669675f1e3f06ff0df5d12a4cc2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"StandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Standard ERC20 token"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"TetherToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_upgradedAddress",
									"type": "address"
								}
							],
							"name": "deprecate",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "deprecated",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_evilUser",
									"type": "address"
								}
							],
							"name": "addBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "upgradedAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_maker",
									"type": "address"
								}
							],
							"name": "getBlackListStatus",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newBasisPoints",
									"type": "uint256"
								},
								{
									"name": "newMaxFee",
									"type": "uint256"
								}
							],
							"name": "setParams",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "issue",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redeem",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeBlackList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_blackListedUser",
									"type": "address"
								}
							],
							"name": "destroyBlackFunds",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"name": "_name",
									"type": "string"
								},
								{
									"name": "_symbol",
									"type": "string"
								},
								{
									"name": "_decimals",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Issue",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redeem",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "Deprecate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "feeBasisPoints",
									"type": "uint256"
								},
								{
									"indexed": false,
									"name": "maxFee",
									"type": "uint256"
								}
							],
							"name": "Params",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_blackListedUser",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "DestroyedBlackFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedBlackList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Pause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "Unpause",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"pause()": {
								"details": "called by the owner to pause, triggers stopped state"
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							},
							"unpause()": {
								"details": "called by the owner to unpause, returns to normal state"
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/StrangeUSDT.sol\":9660:14441  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  mstore(0x40, 0x60)\n    /* \"contracts/StrangeUSDT.sol\":7337:7342  false */\n  0x0\n    /* \"contracts/StrangeUSDT.sol\":7316:7342  bool public paused = false */\n  dup1\n  exp(0x100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":3003:3004  0 */\n  0x0\n    /* \"contracts/StrangeUSDT.sol\":2973:3004  uint public basisPointsRate = 0 */\n  0x3\n  sstore\n    /* \"contracts/StrangeUSDT.sol\":3035:3036  0 */\n  0x0\n    /* \"contracts/StrangeUSDT.sol\":3010:3036  uint public maximumFee = 0 */\n  0x4\n  sstore\n    /* \"contracts/StrangeUSDT.sol\":10155:10444  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  dup3\n  add\n  swap2\n  swap1\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"contracts/StrangeUSDT.sol\":1318:1328  msg.sender */\n  caller\n    /* \"contracts/StrangeUSDT.sol\":1310:1315  owner */\n  0x0\n  dup1\n    /* \"contracts/StrangeUSDT.sol\":1310:1328  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":10275:10289  _initialSupply */\n  dup4\n    /* \"contracts/StrangeUSDT.sol\":10260:10272  _totalSupply */\n  0x1\n    /* \"contracts/StrangeUSDT.sol\":10260:10289  _totalSupply = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":10306:10311  _name */\n  dup3\n    /* \"contracts/StrangeUSDT.sol\":10299:10303  name */\n  0x7\n    /* \"contracts/StrangeUSDT.sol\":10299:10311  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_6:\n  pop\n    /* \"contracts/StrangeUSDT.sol\":10330:10337  _symbol */\n  dup2\n    /* \"contracts/StrangeUSDT.sol\":10321:10327  symbol */\n  0x8\n    /* \"contracts/StrangeUSDT.sol\":10321:10337  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_7)\ntag_8:\n  pop\n    /* \"contracts/StrangeUSDT.sol\":10358:10367  _decimals */\n  dup1\n    /* \"contracts/StrangeUSDT.sol\":10347:10355  decimals */\n  0x9\n    /* \"contracts/StrangeUSDT.sol\":10347:10367  decimals = _decimals */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":10395:10409  _initialSupply */\n  dup4\n    /* \"contracts/StrangeUSDT.sol\":10377:10385  balances */\n  0x2\n    /* \"contracts/StrangeUSDT.sol\":10377:10392  balances[owner] */\n  0x0\n    /* \"contracts/StrangeUSDT.sol\":10386:10391  owner */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StrangeUSDT.sol\":10377:10392  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/StrangeUSDT.sol\":10377:10409  balances[owner] = _initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":10432:10437  false */\n  0x0\n    /* \"contracts/StrangeUSDT.sol\":10419:10429  deprecated */\n  0xa\n  0x14\n    /* \"contracts/StrangeUSDT.sol\":10419:10437  deprecated = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StrangeUSDT.sol\":10155:10444  function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/StrangeUSDT.sol\":9660:14441  contract TetherToken is Pausable, StandardToken, BlackList {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  jump\t// in(tag_15)\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StrangeUSDT.sol\":9660:14441  contract TetherToken is Pausable, StandardToken, BlackList {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, iszero(calldatasize))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x753c30c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe136b19\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xecb93c0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x26976e3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x35390714\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x59bf1abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c658165\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc0324c77\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcc872b66\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb006a75\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe4997dc5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe5b5019a\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf3bdc228\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/StrangeUSDT.sol\":9726:9744  string public name */\n    tag_2:\n      jumpi(tag_34, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_34:\n      tag_35\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_38:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":12412:12589  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_3:\n      jumpi(tag_41, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_41:\n      tag_42\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_43)\n    tag_42:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":11684:11980  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_4:\n      jumpi(tag_44, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_44:\n      tag_45\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_46)\n    tag_45:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":9838:9860  bool public deprecated */\n    tag_5:\n      jumpi(tag_47, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_47:\n      tag_48\n      jump(tag_49)\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":8437:8579  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_6:\n      jumpi(tag_50, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_50:\n      tag_51\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_52)\n    tag_51:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":12652:12864  function totalSupply() public constant returns (uint) {... */\n    tag_7:\n      jumpi(tag_53, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_53:\n      tag_54\n      jump(tag_55)\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":10927:11282  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_8:\n      jumpi(tag_56, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_56:\n      tag_57\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_58)\n    tag_57:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":9802:9832  address public upgradedAddress */\n    tag_9:\n      jumpi(tag_59, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_59:\n      tag_60\n      jump(tag_61)\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":2848:2888  mapping(address => uint) public balances */\n    tag_10:\n      jumpi(tag_62, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_62:\n      tag_63\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_64)\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":9776:9796  uint public decimals */\n    tag_11:\n      jumpi(tag_65, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_65:\n      tag_66\n      jump(tag_67)\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":3010:3036  uint public maximumFee = 0 */\n    tag_12:\n      jumpi(tag_68, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_68:\n      tag_69\n      jump(tag_70)\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":1975:1999  uint public _totalSupply */\n    tag_13:\n      jumpi(tag_71, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_71:\n      tag_72\n      jump(tag_73)\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":7902:7989  function unpause() onlyOwner whenPaused public {... */\n    tag_14:\n      jumpi(tag_74, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_74:\n      tag_75\n      jump(tag_76)\n    tag_75:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":8161:8283  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_15:\n      jumpi(tag_77, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_77:\n      tag_78\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_79)\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":4584:4645  mapping (address => mapping (address => uint)) public allowed */\n    tag_16:\n      jumpi(tag_80, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_80:\n      tag_81\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_82)\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":7316:7342  bool public paused = false */\n    tag_17:\n      jumpi(tag_83, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_83:\n      tag_84\n      jump(tag_85)\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":11364:11602  function balanceOf(address who) public constant returns (uint) {... */\n    tag_18:\n      jumpi(tag_86, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_86:\n      tag_87\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_88)\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":7735:7820  function pause() onlyOwner whenNotPaused public {... */\n    tag_19:\n      jumpi(tag_89, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_89:\n      tag_90\n      jump(tag_91)\n    tag_90:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":8289:8374  function getOwner() external constant returns (address) {... */\n    tag_20:\n      jumpi(tag_92, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_92:\n      tag_93\n      jump(tag_94)\n    tag_93:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":1120:1140  address public owner */\n    tag_21:\n      jumpi(tag_95, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_95:\n      tag_96\n      jump(tag_97)\n    tag_96:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":9750:9770  string public symbol */\n    tag_22:\n      jumpi(tag_98, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_98:\n      tag_99\n      jump(tag_100)\n    tag_99:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_101:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:29   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:93   */\n      add\n        /* \"--CODEGEN--\":84:89   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:74   */\n      add\n        /* \"--CODEGEN--\":64:70   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:48   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_101)\n    tag_102:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"--CODEGEN--\":3:112   */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_104:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":10526:10845  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_23:\n      jumpi(tag_105, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_105:\n      tag_106\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_107)\n    tag_106:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":13741:14119  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_24:\n      jumpi(tag_108, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_108:\n      tag_109\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_110)\n    tag_109:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":13022:13281  function issue(uint amount) public onlyOwner {... */\n    tag_25:\n      jumpi(tag_111, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_111:\n      tag_112\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_113)\n    tag_112:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":13505:13735  function redeem(uint amount) public onlyOwner {... */\n    tag_26:\n      jumpi(tag_114, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_114:\n      tag_115\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_116)\n    tag_115:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":12062:12349  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_27:\n      jumpi(tag_117, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_117:\n      tag_118\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_119)\n    tag_118:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":2973:3004  uint public basisPointsRate = 0 */\n    tag_28:\n      jumpi(tag_120, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_120:\n      tag_121\n      jump(tag_122)\n    tag_121:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":8380:8426  mapping (address => bool) public isBlackListed */\n    tag_29:\n      jumpi(tag_123, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_123:\n      tag_124\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_125)\n    tag_124:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":8585:8742  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_30:\n      jumpi(tag_126, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_126:\n      tag_127\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_128)\n    tag_127:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":4652:4694  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_31:\n      jumpi(tag_129, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_129:\n      tag_130\n      jump(tag_131)\n    tag_130:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_32:\n      jumpi(tag_132, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_132:\n      tag_133\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_134)\n    tag_133:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":8748:9066  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_33:\n      jumpi(tag_135, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_135:\n      tag_136\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_137)\n    tag_136:\n      stop\n        /* \"contracts/StrangeUSDT.sol\":9726:9744  string public name */\n    tag_36:\n      0x7\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":12412:12589  function deprecate(address _upgradedAddress) public onlyOwner {... */\n    tag_43:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_142\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_142:\n        /* \"contracts/StrangeUSDT.sol\":12497:12501  true */\n      0x1\n        /* \"contracts/StrangeUSDT.sol\":12484:12494  deprecated */\n      0xa\n      0x14\n        /* \"contracts/StrangeUSDT.sol\":12484:12501  deprecated = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":12529:12545  _upgradedAddress */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":12511:12526  upgradedAddress */\n      0xa\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":12511:12545  upgradedAddress = _upgradedAddress */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":12555:12582  Deprecate(_upgradedAddress) */\n      0xcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e\n        /* \"contracts/StrangeUSDT.sol\":12565:12581  _upgradedAddress */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":12555:12582  Deprecate(_upgradedAddress) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":12412:12589  function deprecate(address _upgradedAddress) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":11684:11980  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_46:\n        /* \"contracts/StrangeUSDT.sol\":11755:11761  2 * 32 */\n      0x40\n        /* \"contracts/StrangeUSDT.sol\":3190:3191  4 */\n      0x4\n        /* \"contracts/StrangeUSDT.sol\":3183:3187  size */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":3183:3191  size + 4 */\n      add\n        /* \"contracts/StrangeUSDT.sol\":3165:3173  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/StrangeUSDT.sol\":3165:3180  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3165:3191  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/StrangeUSDT.sol\":3163:3192  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":3155:3193  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_145\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_145:\n        /* \"contracts/StrangeUSDT.sol\":11777:11787  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":11773:11974  if (deprecated) {... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":11832:11847  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":11810:11864  UpgradedStandardToken(upgradedAddress).approveByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaee92d33\n        /* \"contracts/StrangeUSDT.sol\":11865:11875  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":11877:11885  _spender */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":11887:11893  _value */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":11810:11894  UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_148\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_148:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_149\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_149:\n      pop\n      pop\n      pop\n        /* \"contracts/StrangeUSDT.sol\":11803:11894  return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value) */\n      jump(tag_146)\n        /* \"contracts/StrangeUSDT.sol\":11773:11974  if (deprecated) {... */\n    tag_147:\n        /* \"contracts/StrangeUSDT.sol\":11932:11963  super.approve(_spender, _value) */\n      tag_151\n        /* \"contracts/StrangeUSDT.sol\":11946:11954  _spender */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":11956:11962  _value */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":11932:11945  super.approve */\n      tag_152\n        /* \"contracts/StrangeUSDT.sol\":11932:11963  super.approve(_spender, _value) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/StrangeUSDT.sol\":3203:3204  _ */\n    tag_146:\n        /* \"contracts/StrangeUSDT.sol\":11684:11980  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":9838:9860  bool public deprecated */\n    tag_49:\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":8437:8579  function addBlackList (address _evilUser) public onlyOwner {... */\n    tag_52:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_154\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_154:\n        /* \"contracts/StrangeUSDT.sol\":8533:8537  true */\n      0x1\n        /* \"contracts/StrangeUSDT.sol\":8506:8519  isBlackListed */\n      0x6\n        /* \"contracts/StrangeUSDT.sol\":8506:8530  isBlackListed[_evilUser] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8520:8529  _evilUser */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":8506:8530  isBlackListed[_evilUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8506:8537  isBlackListed[_evilUser] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":8547:8572  AddedBlackList(_evilUser) */\n      0x42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc\n        /* \"contracts/StrangeUSDT.sol\":8562:8571  _evilUser */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":8547:8572  AddedBlackList(_evilUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":8437:8579  function addBlackList (address _evilUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":12652:12864  function totalSupply() public constant returns (uint) {... */\n    tag_55:\n        /* \"contracts/StrangeUSDT.sol\":12700:12704  uint */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":12720:12730  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":12716:12858  if (deprecated) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":12767:12782  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":12753:12795  StandardToken(upgradedAddress).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/StrangeUSDT.sol\":12753:12797  StandardToken(upgradedAddress).totalSupply() */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_158\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_158:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_159\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_159:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":12746:12797  return StandardToken(upgradedAddress).totalSupply() */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"contracts/StrangeUSDT.sol\":12716:12858  if (deprecated) {... */\n    tag_157:\n        /* \"contracts/StrangeUSDT.sol\":12835:12847  _totalSupply */\n      sload(0x1)\n        /* \"contracts/StrangeUSDT.sol\":12828:12847  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":12652:12864  function totalSupply() public constant returns (uint) {... */\n    tag_156:\n      swap1\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":10927:11282  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n    tag_58:\n        /* \"contracts/StrangeUSDT.sol\":7485:7491  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":7484:7491  !paused */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":7476:7492  require(!paused) */\n      iszero\n      iszero\n      tag_162\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_162:\n        /* \"contracts/StrangeUSDT.sol\":11030:11043  isBlackListed */\n      0x6\n        /* \"contracts/StrangeUSDT.sol\":11030:11050  isBlackListed[_from] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":11044:11049  _from */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":11030:11050  isBlackListed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":11029:11050  !isBlackListed[_from] */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":11021:11051  require(!isBlackListed[_from]) */\n      iszero\n      iszero\n      tag_164\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_164:\n        /* \"contracts/StrangeUSDT.sol\":11065:11075  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":11061:11276  if (deprecated) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":11120:11135  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":11098:11157  UpgradedStandardToken(upgradedAddress).transferFromByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8b477adb\n        /* \"contracts/StrangeUSDT.sol\":11158:11168  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":11170:11175  _from */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":11177:11180  _to */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":11182:11188  _value */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":11098:11189  UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup6\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_166\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_166:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_167\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_167:\n      pop\n      pop\n      pop\n        /* \"contracts/StrangeUSDT.sol\":11091:11189  return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value) */\n      jump(tag_163)\n        /* \"contracts/StrangeUSDT.sol\":11061:11276  if (deprecated) {... */\n    tag_165:\n        /* \"contracts/StrangeUSDT.sol\":11227:11265  super.transferFrom(_from, _to, _value) */\n      tag_169\n        /* \"contracts/StrangeUSDT.sol\":11246:11251  _from */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":11253:11256  _to */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":11258:11264  _value */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":11227:11245  super.transferFrom */\n      tag_170\n        /* \"contracts/StrangeUSDT.sol\":11227:11265  super.transferFrom(_from, _to, _value) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/StrangeUSDT.sol\":7498:7499  _ */\n    tag_163:\n        /* \"contracts/StrangeUSDT.sol\":10927:11282  function transferFrom(address _from, address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":9802:9832  address public upgradedAddress */\n    tag_61:\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":2848:2888  mapping(address => uint) public balances */\n    tag_64:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":9776:9796  uint public decimals */\n    tag_67:\n      sload(0x9)\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":3010:3036  uint public maximumFee = 0 */\n    tag_70:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":1975:1999  uint public _totalSupply */\n    tag_73:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":7902:7989  function unpause() onlyOwner whenPaused public {... */\n    tag_76:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_172\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_172:\n        /* \"contracts/StrangeUSDT.sol\":7637:7643  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":7629:7644  require(paused) */\n      iszero\n      iszero\n      tag_174\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_174:\n        /* \"contracts/StrangeUSDT.sol\":7964:7969  false */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":7955:7961  paused */\n      dup1\n      0x14\n        /* \"contracts/StrangeUSDT.sol\":7955:7969  paused = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":7975:7984  Unpause() */\n      0x7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b33\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":7902:7989  function unpause() onlyOwner whenPaused public {... */\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":8161:8283  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n    tag_79:\n        /* \"contracts/StrangeUSDT.sol\":8232:8236  bool */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8255:8268  isBlackListed */\n      0x6\n        /* \"contracts/StrangeUSDT.sol\":8255:8276  isBlackListed[_maker] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8269:8275  _maker */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":8255:8276  isBlackListed[_maker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":8248:8276  return isBlackListed[_maker] */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":8161:8283  function getBlackListStatus(address _maker) external constant returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":4584:4645  mapping (address => mapping (address => uint)) public allowed */\n    tag_82:\n      mstore(0x20, 0x5)\n      dup2\n      0x0\n      mstore\n      mstore(0x20, keccak256(0x0, 0x40))\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":7316:7342  bool public paused = false */\n    tag_85:\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":11364:11602  function balanceOf(address who) public constant returns (uint) {... */\n    tag_88:\n        /* \"contracts/StrangeUSDT.sol\":11421:11425  uint */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":11441:11451  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":11437:11596  if (deprecated) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":11496:11511  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":11474:11522  UpgradedStandardToken(upgradedAddress).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/StrangeUSDT.sol\":11523:11526  who */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":11474:11527  UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_179\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_179:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_180\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_180:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":11467:11527  return UpgradedStandardToken(upgradedAddress).balanceOf(who) */\n      swap1\n      pop\n      jump(tag_177)\n        /* \"contracts/StrangeUSDT.sol\":11437:11596  if (deprecated) {... */\n    tag_178:\n        /* \"contracts/StrangeUSDT.sol\":11565:11585  super.balanceOf(who) */\n      tag_182\n        /* \"contracts/StrangeUSDT.sol\":11581:11584  who */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":11565:11580  super.balanceOf */\n      tag_183\n        /* \"contracts/StrangeUSDT.sol\":11565:11585  super.balanceOf(who) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/StrangeUSDT.sol\":11558:11585  return super.balanceOf(who) */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":11364:11602  function balanceOf(address who) public constant returns (uint) {... */\n    tag_177:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":7735:7820  function pause() onlyOwner whenNotPaused public {... */\n    tag_91:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_185\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/StrangeUSDT.sol\":7485:7491  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":7484:7491  !paused */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":7476:7492  require(!paused) */\n      iszero\n      iszero\n      tag_187\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_187:\n        /* \"contracts/StrangeUSDT.sol\":7798:7802  true */\n      0x1\n        /* \"contracts/StrangeUSDT.sol\":7789:7795  paused */\n      0x0\n      0x14\n        /* \"contracts/StrangeUSDT.sol\":7789:7802  paused = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":7808:7815  Pause() */\n      0x6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff625\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":7735:7820  function pause() onlyOwner whenNotPaused public {... */\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":8289:8374  function getOwner() external constant returns (address) {... */\n    tag_94:\n        /* \"contracts/StrangeUSDT.sol\":8336:8343  address */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8362:8367  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":8355:8367  return owner */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":8289:8374  function getOwner() external constant returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":1120:1140  address public owner */\n    tag_97:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":9750:9770  string public symbol */\n    tag_100:\n      0x8\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_190\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_191\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_190)\n    tag_191:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_192:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_192\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":10526:10845  function transfer(address _to, uint _value) public whenNotPaused {... */\n    tag_107:\n        /* \"contracts/StrangeUSDT.sol\":7485:7491  paused */\n      0x0\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":7484:7491  !paused */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":7476:7492  require(!paused) */\n      iszero\n      iszero\n      tag_194\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_194:\n        /* \"contracts/StrangeUSDT.sol\":10610:10623  isBlackListed */\n      0x6\n        /* \"contracts/StrangeUSDT.sol\":10610:10635  isBlackListed[msg.sender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":10624:10634  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":10610:10635  isBlackListed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":10609:10635  !isBlackListed[msg.sender] */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":10601:10636  require(!isBlackListed[msg.sender]) */\n      iszero\n      iszero\n      tag_196\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_196:\n        /* \"contracts/StrangeUSDT.sol\":10650:10660  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":10646:10839  if (deprecated) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":10705:10720  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":10683:10738  UpgradedStandardToken(upgradedAddress).transferByLegacy */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e18980a\n        /* \"contracts/StrangeUSDT.sol\":10739:10749  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":10751:10754  _to */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":10756:10762  _value */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":10683:10763  UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_198\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_198:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_199\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_199:\n      pop\n      pop\n      pop\n        /* \"contracts/StrangeUSDT.sol\":10676:10763  return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value) */\n      jump(tag_195)\n        /* \"contracts/StrangeUSDT.sol\":10646:10839  if (deprecated) {... */\n    tag_197:\n        /* \"contracts/StrangeUSDT.sol\":10801:10828  super.transfer(_to, _value) */\n      tag_201\n        /* \"contracts/StrangeUSDT.sol\":10816:10819  _to */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":10821:10827  _value */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":10801:10815  super.transfer */\n      tag_202\n        /* \"contracts/StrangeUSDT.sol\":10801:10828  super.transfer(_to, _value) */\n      jump\t// in\n    tag_201:\n        /* \"contracts/StrangeUSDT.sol\":7498:7499  _ */\n    tag_195:\n        /* \"contracts/StrangeUSDT.sol\":10526:10845  function transfer(address _to, uint _value) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":13741:14119  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n    tag_110:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_204\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_204:\n        /* \"contracts/StrangeUSDT.sol\":13937:13939  20 */\n      0x14\n        /* \"contracts/StrangeUSDT.sol\":13920:13934  newBasisPoints */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":13920:13939  newBasisPoints < 20 */\n      lt\n        /* \"contracts/StrangeUSDT.sol\":13912:13940  require(newBasisPoints < 20) */\n      iszero\n      iszero\n      tag_206\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_206:\n        /* \"contracts/StrangeUSDT.sol\":13970:13972  50 */\n      0x32\n        /* \"contracts/StrangeUSDT.sol\":13958:13967  newMaxFee */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":13958:13972  newMaxFee < 50 */\n      lt\n        /* \"contracts/StrangeUSDT.sol\":13950:13973  require(newMaxFee < 50) */\n      iszero\n      iszero\n      tag_207\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_207:\n        /* \"contracts/StrangeUSDT.sol\":14002:14016  newBasisPoints */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":13984:13999  basisPointsRate */\n      0x3\n        /* \"contracts/StrangeUSDT.sol\":13984:14016  basisPointsRate = newBasisPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":14039:14066  newMaxFee.mul(10**decimals) */\n      tag_208\n        /* \"contracts/StrangeUSDT.sol\":14057:14065  decimals */\n      sload(0x9)\n        /* \"contracts/StrangeUSDT.sol\":14053:14055  10 */\n      0xa\n        /* \"contracts/StrangeUSDT.sol\":14053:14065  10**decimals */\n      exp\n        /* \"contracts/StrangeUSDT.sol\":14039:14048  newMaxFee */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":14039:14052  newMaxFee.mul */\n      tag_209\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":14039:14066  newMaxFee.mul(10**decimals) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"contracts/StrangeUSDT.sol\":14026:14036  maximumFee */\n      0x4\n        /* \"contracts/StrangeUSDT.sol\":14026:14066  maximumFee = newMaxFee.mul(10**decimals) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":14077:14112  Params(basisPointsRate, maximumFee) */\n      0xb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e\n        /* \"contracts/StrangeUSDT.sol\":14084:14099  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/StrangeUSDT.sol\":14101:14111  maximumFee */\n      sload(0x4)\n        /* \"contracts/StrangeUSDT.sol\":14077:14112  Params(basisPointsRate, maximumFee) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":13741:14119  function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":13022:13281  function issue(uint amount) public onlyOwner {... */\n    tag_113:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_211\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/StrangeUSDT.sol\":13109:13121  _totalSupply */\n      sload(0x1)\n        /* \"contracts/StrangeUSDT.sol\":13100:13106  amount */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":13085:13097  _totalSupply */\n      sload(0x1)\n        /* \"contracts/StrangeUSDT.sol\":13085:13106  _totalSupply + amount */\n      add\n        /* \"contracts/StrangeUSDT.sol\":13085:13121  _totalSupply + amount > _totalSupply */\n      gt\n        /* \"contracts/StrangeUSDT.sol\":13077:13122  require(_totalSupply + amount > _totalSupply) */\n      iszero\n      iszero\n      tag_213\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_213:\n        /* \"contracts/StrangeUSDT.sol\":13167:13175  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":13167:13182  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13176:13181  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":13167:13182  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":13158:13164  amount */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":13140:13148  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":13140:13155  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13149:13154  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":13140:13155  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":13140:13164  balances[owner] + amount */\n      add\n        /* \"contracts/StrangeUSDT.sol\":13140:13182  balances[owner] + amount > balances[owner] */\n      gt\n        /* \"contracts/StrangeUSDT.sol\":13132:13183  require(balances[owner] + amount > balances[owner]) */\n      iszero\n      iszero\n      tag_214\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_214:\n        /* \"contracts/StrangeUSDT.sol\":13213:13219  amount */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":13194:13202  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":13194:13209  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13203:13208  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":13194:13209  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13194:13219  balances[owner] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":13245:13251  amount */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":13229:13241  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13229:13251  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":13261:13274  Issue(amount) */\n      0xcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a\n        /* \"contracts/StrangeUSDT.sol\":13267:13273  amount */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":13261:13274  Issue(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":13022:13281  function issue(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":13505:13735  function redeem(uint amount) public onlyOwner {... */\n    tag_116:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_216\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_216:\n        /* \"contracts/StrangeUSDT.sol\":13585:13591  amount */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":13569:13581  _totalSupply */\n      sload(0x1)\n        /* \"contracts/StrangeUSDT.sol\":13569:13591  _totalSupply >= amount */\n      lt\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":13561:13592  require(_totalSupply >= amount) */\n      iszero\n      iszero\n      tag_218\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/StrangeUSDT.sol\":13629:13635  amount */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":13610:13618  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":13610:13625  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13619:13624  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":13610:13625  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":13610:13635  balances[owner] >= amount */\n      lt\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":13602:13636  require(balances[owner] >= amount) */\n      iszero\n      iszero\n      tag_219\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_219:\n        /* \"contracts/StrangeUSDT.sol\":13663:13669  amount */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":13647:13659  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13647:13669  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":13698:13704  amount */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":13679:13687  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":13679:13694  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13688:13693  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":13679:13694  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":13679:13704  balances[owner] -= amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":13714:13728  Redeem(amount) */\n      0x702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44\n        /* \"contracts/StrangeUSDT.sol\":13721:13727  amount */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":13714:13728  Redeem(amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":13505:13735  function redeem(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":12062:12349  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_119:\n        /* \"contracts/StrangeUSDT.sol\":12140:12154  uint remaining */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":12170:12180  deprecated */\n      0xa\n      0x14\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":12166:12343  if (deprecated) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":12217:12232  upgradedAddress */\n      0xa\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":12203:12243  StandardToken(upgradedAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/StrangeUSDT.sol\":12244:12250  _owner */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":12252:12260  _spender */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":12203:12261  StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      mstore(add(0x20, mload(0x40)), 0x0)\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n      iszero\n      tag_222\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_222:\n      sub(gas, 0x2c6)\n      call\n      iszero\n      iszero\n      tag_223\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_223:\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      mload\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":12196:12261  return StandardToken(upgradedAddress).allowance(_owner, _spender) */\n      swap1\n      pop\n      jump(tag_220)\n        /* \"contracts/StrangeUSDT.sol\":12166:12343  if (deprecated) {... */\n    tag_221:\n        /* \"contracts/StrangeUSDT.sol\":12299:12332  super.allowance(_owner, _spender) */\n      tag_225\n        /* \"contracts/StrangeUSDT.sol\":12315:12321  _owner */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":12323:12331  _spender */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":12299:12314  super.allowance */\n      tag_226\n        /* \"contracts/StrangeUSDT.sol\":12299:12332  super.allowance(_owner, _spender) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/StrangeUSDT.sol\":12292:12332  return super.allowance(_owner, _spender) */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":12062:12349  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_220:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":2973:3004  uint public basisPointsRate = 0 */\n    tag_122:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":8380:8426  mapping (address => bool) public isBlackListed */\n    tag_125:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":8585:8742  function removeBlackList (address _clearedUser) public onlyOwner {... */\n    tag_128:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_228\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_228:\n        /* \"contracts/StrangeUSDT.sol\":8690:8695  false */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8660:8673  isBlackListed */\n      0x6\n        /* \"contracts/StrangeUSDT.sol\":8660:8687  isBlackListed[_clearedUser] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8674:8686  _clearedUser */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":8660:8687  isBlackListed[_clearedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8660:8695  isBlackListed[_clearedUser] = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":8705:8735  RemovedBlackList(_clearedUser) */\n      0xd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c\n        /* \"contracts/StrangeUSDT.sol\":8722:8734  _clearedUser */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":8705:8735  RemovedBlackList(_clearedUser) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":8585:8742  function removeBlackList (address _clearedUser) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":4652:4694  uint public constant MAX_UINT = 2**256 - 1 */\n    tag_131:\n        /* \"contracts/StrangeUSDT.sol\":4684:4694  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/StrangeUSDT.sol\":4652:4694  uint public constant MAX_UINT = 2**256 - 1 */\n      dup2\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_134:\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_231\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/StrangeUSDT.sol\":1766:1767  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":1746:1768  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1746:1754  newOwner */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":1746:1768  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":1742:1811  if (newOwner != address(0)) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":1792:1800  newOwner */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":1784:1789  owner */\n      0x0\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":1784:1800  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":1742:1811  if (newOwner != address(0)) {... */\n    tag_233:\n        /* \"contracts/StrangeUSDT.sol\":1670:1817  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":8748:9066  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n    tag_137:\n        /* \"contracts/StrangeUSDT.sol\":8879:8894  uint dirtyFunds */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":1478:1483  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":1464:1474  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":1464:1483  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StrangeUSDT.sol\":1456:1484  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_235\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_235:\n        /* \"contracts/StrangeUSDT.sol\":8837:8850  isBlackListed */\n      0x6\n        /* \"contracts/StrangeUSDT.sol\":8837:8868  isBlackListed[_blackListedUser] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8851:8867  _blackListedUser */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":8837:8868  isBlackListed[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StrangeUSDT.sol\":8829:8869  require(isBlackListed[_blackListedUser]) */\n      iszero\n      iszero\n      tag_237\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_237:\n        /* \"contracts/StrangeUSDT.sol\":8897:8924  balanceOf(_blackListedUser) */\n      tag_238\n        /* \"contracts/StrangeUSDT.sol\":8907:8923  _blackListedUser */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":8897:8906  balanceOf */\n      tag_88\n        /* \"contracts/StrangeUSDT.sol\":8897:8924  balanceOf(_blackListedUser) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/StrangeUSDT.sol\":8879:8924  uint dirtyFunds = balanceOf(_blackListedUser) */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":8963:8964  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8934:8942  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":8934:8960  balances[_blackListedUser] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8943:8959  _blackListedUser */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":8934:8960  balances[_blackListedUser] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":8934:8964  balances[_blackListedUser] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":8990:9000  dirtyFunds */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":8974:8986  _totalSupply */\n      0x1\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":8974:9000  _totalSupply -= dirtyFunds */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":9010:9059  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      0x61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c6\n        /* \"contracts/StrangeUSDT.sol\":9030:9046  _blackListedUser */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":9048:9058  dirtyFunds */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":9010:9059  DestroyedBlackFunds(_blackListedUser, dirtyFunds) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/StrangeUSDT.sol\":8748:9066  function destroyBlackFunds (address _blackListedUser) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":6096:6659  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_152:\n        /* \"contracts/StrangeUSDT.sol\":6167:6173  2 * 32 */\n      0x40\n        /* \"contracts/StrangeUSDT.sol\":3190:3191  4 */\n      0x4\n        /* \"contracts/StrangeUSDT.sol\":3183:3187  size */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":3183:3191  size + 4 */\n      add\n        /* \"contracts/StrangeUSDT.sol\":3165:3173  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/StrangeUSDT.sol\":3165:3180  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3165:3191  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/StrangeUSDT.sol\":3163:3192  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":3155:3193  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_240\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_240:\n        /* \"contracts/StrangeUSDT.sol\":6511:6512  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":6501:6507  _value */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":6501:6512  _value != 0 */\n      eq\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":6500:6553  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n      dup1\n      iszero\n      tag_242\n      jumpi\n      pop\n        /* \"contracts/StrangeUSDT.sol\":6551:6552  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":6518:6525  allowed */\n      0x5\n        /* \"contracts/StrangeUSDT.sol\":6518:6537  allowed[msg.sender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":6526:6536  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":6518:6537  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":6518:6547  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":6538:6546  _spender */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":6518:6547  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":6518:6552  allowed[msg.sender][_spender] != 0 */\n      eq\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":6500:6553  (_value != 0) && (allowed[msg.sender][_spender] != 0) */\n    tag_242:\n        /* \"contracts/StrangeUSDT.sol\":6498:6554  !((_value != 0) && (allowed[msg.sender][_spender] != 0)) */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":6490:6555  require(!((_value != 0) && (allowed[msg.sender][_spender] != 0))) */\n      iszero\n      iszero\n      tag_243\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_243:\n        /* \"contracts/StrangeUSDT.sol\":6598:6604  _value */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":6566:6573  allowed */\n      0x5\n        /* \"contracts/StrangeUSDT.sol\":6566:6585  allowed[msg.sender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":6574:6584  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":6566:6585  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":6566:6595  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":6586:6594  _spender */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":6566:6595  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":6566:6604  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":6635:6643  _spender */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":6614:6652  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":6623:6633  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":6614:6652  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/StrangeUSDT.sol\":6645:6651  _value */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":6614:6652  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StrangeUSDT.sol\":6096:6659  function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":4976:5856  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n    tag_170:\n        /* \"contracts/StrangeUSDT.sol\":5080:5094  var _allowance */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5289:5297  uint fee */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":5534:5549  uint sendAmount */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5062:5068  3 * 32 */\n      0x60\n        /* \"contracts/StrangeUSDT.sol\":3190:3191  4 */\n      0x4\n        /* \"contracts/StrangeUSDT.sol\":3183:3187  size */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":3183:3191  size + 4 */\n      add\n        /* \"contracts/StrangeUSDT.sol\":3165:3173  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/StrangeUSDT.sol\":3165:3180  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3165:3191  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/StrangeUSDT.sol\":3163:3192  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":3155:3193  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_245\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_245:\n        /* \"contracts/StrangeUSDT.sol\":5097:5104  allowed */\n      0x5\n        /* \"contracts/StrangeUSDT.sol\":5097:5111  allowed[_from] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5105:5110  _from */\n      dup9\n        /* \"contracts/StrangeUSDT.sol\":5097:5111  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":5097:5123  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5112:5122  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":5097:5123  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":5080:5123  var _allowance = allowed[_from][msg.sender] */\n      swap4\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5300:5340  (_value.mul(basisPointsRate)).div(10000) */\n      tag_247\n        /* \"contracts/StrangeUSDT.sol\":5334:5339  10000 */\n      0x2710\n        /* \"contracts/StrangeUSDT.sol\":5301:5328  _value.mul(basisPointsRate) */\n      tag_248\n        /* \"contracts/StrangeUSDT.sol\":5312:5327  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/StrangeUSDT.sol\":5301:5307  _value */\n      dup9\n        /* \"contracts/StrangeUSDT.sol\":5301:5311  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":5301:5328  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/StrangeUSDT.sol\":5300:5333  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":5300:5340  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/StrangeUSDT.sol\":5289:5340  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5360:5370  maximumFee */\n      sload(0x4)\n        /* \"contracts/StrangeUSDT.sol\":5354:5357  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":5354:5370  fee > maximumFee */\n      gt\n        /* \"contracts/StrangeUSDT.sol\":5350:5413  if (fee > maximumFee) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":5392:5402  maximumFee */\n      sload(0x4)\n        /* \"contracts/StrangeUSDT.sol\":5386:5402  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5350:5413  if (fee > maximumFee) {... */\n    tag_250:\n        /* \"contracts/StrangeUSDT.sol\":4684:4694  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/StrangeUSDT.sol\":5426:5436  _allowance */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":5426:5447  _allowance < MAX_UINT */\n      lt\n        /* \"contracts/StrangeUSDT.sol\":5422:5525  if (_allowance < MAX_UINT) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":5492:5514  _allowance.sub(_value) */\n      tag_252\n        /* \"contracts/StrangeUSDT.sol\":5507:5513  _value */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":5492:5502  _allowance */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":5492:5506  _allowance.sub */\n      tag_253\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":5492:5514  _allowance.sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/StrangeUSDT.sol\":5463:5470  allowed */\n      0x5\n        /* \"contracts/StrangeUSDT.sol\":5463:5477  allowed[_from] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5471:5476  _from */\n      dup10\n        /* \"contracts/StrangeUSDT.sol\":5463:5477  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":5463:5489  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5478:5488  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":5463:5489  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":5463:5514  allowed[_from][msg.sender] = _allowance.sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5422:5525  if (_allowance < MAX_UINT) {... */\n    tag_251:\n        /* \"contracts/StrangeUSDT.sol\":5552:5567  _value.sub(fee) */\n      tag_254\n        /* \"contracts/StrangeUSDT.sol\":5563:5566  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":5552:5558  _value */\n      dup7\n        /* \"contracts/StrangeUSDT.sol\":5552:5562  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":5552:5567  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/StrangeUSDT.sol\":5534:5567  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5595:5622  balances[_from].sub(_value) */\n      tag_255\n        /* \"contracts/StrangeUSDT.sol\":5615:5621  _value */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":5595:5603  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":5595:5610  balances[_from] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5604:5609  _from */\n      dup11\n        /* \"contracts/StrangeUSDT.sol\":5595:5610  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":5595:5614  balances[_from].sub */\n      tag_253\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":5595:5622  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/StrangeUSDT.sol\":5577:5585  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":5577:5592  balances[_from] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5586:5591  _from */\n      dup10\n        /* \"contracts/StrangeUSDT.sol\":5577:5592  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":5577:5622  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5648:5677  balances[_to].add(sendAmount) */\n      tag_256\n        /* \"contracts/StrangeUSDT.sol\":5666:5676  sendAmount */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":5648:5656  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":5648:5661  balances[_to] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5657:5660  _to */\n      dup10\n        /* \"contracts/StrangeUSDT.sol\":5648:5661  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":5648:5665  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":5648:5677  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/StrangeUSDT.sol\":5632:5640  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":5632:5645  balances[_to] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5641:5644  _to */\n      dup9\n        /* \"contracts/StrangeUSDT.sol\":5632:5645  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":5632:5677  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5697:5698  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5691:5694  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":5691:5698  fee > 0 */\n      gt\n        /* \"contracts/StrangeUSDT.sol\":5687:5808  if (fee > 0) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":5732:5756  balances[owner].add(fee) */\n      tag_259\n        /* \"contracts/StrangeUSDT.sol\":5752:5755  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":5732:5740  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":5732:5747  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5741:5746  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":5732:5747  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":5732:5751  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":5732:5756  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/StrangeUSDT.sol\":5714:5722  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":5714:5729  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":5723:5728  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":5714:5729  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":5714:5756  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":5786:5791  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":5770:5797  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":5779:5784  _from */\n      dup8\n        /* \"contracts/StrangeUSDT.sol\":5770:5797  Transfer(_from, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StrangeUSDT.sol\":5793:5796  fee */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":5770:5797  Transfer(_from, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StrangeUSDT.sol\":5687:5808  if (fee > 0) {... */\n    tag_258:\n        /* \"contracts/StrangeUSDT.sol\":5833:5836  _to */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":5817:5849  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":5826:5831  _from */\n      dup8\n        /* \"contracts/StrangeUSDT.sol\":5817:5849  Transfer(_from, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StrangeUSDT.sol\":5838:5848  sendAmount */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":5817:5849  Transfer(_from, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StrangeUSDT.sol\":4976:5856  function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":4148:4262  function balanceOf(address _owner) public constant returns (uint balance) {... */\n    tag_183:\n        /* \"contracts/StrangeUSDT.sol\":4208:4220  uint balance */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":4239:4247  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":4239:4255  balances[_owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":4248:4254  _owner */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":4239:4255  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":4232:4255  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":4148:4262  function balanceOf(address _owner) public constant returns (uint balance) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":3377:3937  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n    tag_202:\n        /* \"contracts/StrangeUSDT.sol\":3462:3470  uint fee */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3595:3610  uint sendAmount */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":3444:3450  2 * 32 */\n      0x40\n        /* \"contracts/StrangeUSDT.sol\":3190:3191  4 */\n      0x4\n        /* \"contracts/StrangeUSDT.sol\":3183:3187  size */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":3183:3191  size + 4 */\n      add\n        /* \"contracts/StrangeUSDT.sol\":3165:3173  msg.data */\n      0x0\n      calldatasize\n        /* \"contracts/StrangeUSDT.sol\":3165:3180  msg.data.length */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3165:3191  msg.data.length < size + 4 */\n      lt\n        /* \"contracts/StrangeUSDT.sol\":3163:3192  !(msg.data.length < size + 4) */\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":3155:3193  require(!(msg.data.length < size + 4)) */\n      iszero\n      iszero\n      tag_262\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_262:\n        /* \"contracts/StrangeUSDT.sol\":3473:3513  (_value.mul(basisPointsRate)).div(10000) */\n      tag_264\n        /* \"contracts/StrangeUSDT.sol\":3507:3512  10000 */\n      0x2710\n        /* \"contracts/StrangeUSDT.sol\":3474:3501  _value.mul(basisPointsRate) */\n      tag_265\n        /* \"contracts/StrangeUSDT.sol\":3485:3500  basisPointsRate */\n      sload(0x3)\n        /* \"contracts/StrangeUSDT.sol\":3474:3480  _value */\n      dup8\n        /* \"contracts/StrangeUSDT.sol\":3474:3484  _value.mul */\n      tag_209\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":3474:3501  _value.mul(basisPointsRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/StrangeUSDT.sol\":3473:3506  (_value.mul(basisPointsRate)).div */\n      tag_249\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":3473:3513  (_value.mul(basisPointsRate)).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/StrangeUSDT.sol\":3462:3513  uint fee = (_value.mul(basisPointsRate)).div(10000) */\n      swap3\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3533:3543  maximumFee */\n      sload(0x4)\n        /* \"contracts/StrangeUSDT.sol\":3527:3530  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":3527:3543  fee > maximumFee */\n      gt\n        /* \"contracts/StrangeUSDT.sol\":3523:3586  if (fee > maximumFee) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":3565:3575  maximumFee */\n      sload(0x4)\n        /* \"contracts/StrangeUSDT.sol\":3559:3575  fee = maximumFee */\n      swap3\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3523:3586  if (fee > maximumFee) {... */\n    tag_266:\n        /* \"contracts/StrangeUSDT.sol\":3613:3628  _value.sub(fee) */\n      tag_267\n        /* \"contracts/StrangeUSDT.sol\":3624:3627  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":3613:3619  _value */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":3613:3623  _value.sub */\n      tag_253\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":3613:3628  _value.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/StrangeUSDT.sol\":3595:3628  uint sendAmount = _value.sub(fee) */\n      swap2\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3661:3693  balances[msg.sender].sub(_value) */\n      tag_268\n        /* \"contracts/StrangeUSDT.sol\":3686:3692  _value */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":3661:3669  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":3661:3681  balances[msg.sender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3670:3680  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":3661:3681  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":3661:3685  balances[msg.sender].sub */\n      tag_253\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":3661:3693  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/StrangeUSDT.sol\":3638:3646  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":3638:3658  balances[msg.sender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3647:3657  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":3638:3658  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":3638:3693  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3719:3748  balances[_to].add(sendAmount) */\n      tag_269\n        /* \"contracts/StrangeUSDT.sol\":3737:3747  sendAmount */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":3719:3727  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":3719:3732  balances[_to] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3728:3731  _to */\n      dup9\n        /* \"contracts/StrangeUSDT.sol\":3719:3732  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":3719:3736  balances[_to].add */\n      tag_257\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":3719:3748  balances[_to].add(sendAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/StrangeUSDT.sol\":3703:3711  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":3703:3716  balances[_to] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3712:3715  _to */\n      dup8\n        /* \"contracts/StrangeUSDT.sol\":3703:3716  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":3703:3748  balances[_to] = balances[_to].add(sendAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3768:3769  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3762:3765  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":3762:3769  fee > 0 */\n      gt\n        /* \"contracts/StrangeUSDT.sol\":3758:3884  if (fee > 0) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":3803:3827  balances[owner].add(fee) */\n      tag_271\n        /* \"contracts/StrangeUSDT.sol\":3823:3826  fee */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":3803:3811  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":3803:3818  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3812:3817  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":3803:3818  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":3803:3822  balances[owner].add */\n      tag_257\n      swap1\n        /* \"contracts/StrangeUSDT.sol\":3803:3827  balances[owner].add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/StrangeUSDT.sol\":3785:3793  balances */\n      0x2\n        /* \"contracts/StrangeUSDT.sol\":3785:3800  balances[owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":3794:3799  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":3785:3800  balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":3785:3827  balances[owner] = balances[owner].add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StrangeUSDT.sol\":3862:3867  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":3841:3873  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":3850:3860  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":3841:3873  Transfer(msg.sender, owner, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StrangeUSDT.sol\":3869:3872  fee */\n      dup6\n        /* \"contracts/StrangeUSDT.sol\":3841:3873  Transfer(msg.sender, owner, fee) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StrangeUSDT.sol\":3758:3884  if (fee > 0) {... */\n    tag_270:\n        /* \"contracts/StrangeUSDT.sol\":3914:3917  _to */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":3893:3930  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StrangeUSDT.sol\":3902:3912  msg.sender */\n      caller\n        /* \"contracts/StrangeUSDT.sol\":3893:3930  Transfer(msg.sender, _to, sendAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/StrangeUSDT.sol\":3919:3929  sendAmount */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":3893:3930  Transfer(msg.sender, _to, sendAmount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StrangeUSDT.sol\":3377:3937  function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":138:339  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_209:\n        /* \"contracts/StrangeUSDT.sol\":196:203  uint256 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":269:278  uint256 c */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":224:225  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":219:220  a */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":219:225  a == 0 */\n      eq\n        /* \"contracts/StrangeUSDT.sol\":215:260  if (a == 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/StrangeUSDT.sol\":248:249  0 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":241:249  return 0 */\n      swap2\n      pop\n      jump(tag_272)\n        /* \"contracts/StrangeUSDT.sol\":215:260  if (a == 0) {... */\n    tag_273:\n        /* \"contracts/StrangeUSDT.sol\":285:286  b */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":281:282  a */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":281:286  a * b */\n      mul\n        /* \"contracts/StrangeUSDT.sol\":269:286  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":312:313  b */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":307:308  a */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":303:304  c */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":303:308  c / a */\n      dup2\n      iszero\n      iszero\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      div\n        /* \"contracts/StrangeUSDT.sol\":303:313  c / a == b */\n      eq\n        /* \"contracts/StrangeUSDT.sol\":296:314  assert(c / a == b) */\n      iszero\n      iszero\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n        /* \"contracts/StrangeUSDT.sol\":331:332  c */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":324:332  return c */\n      swap2\n      pop\n        /* \"contracts/StrangeUSDT.sol\":138:339  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_272:\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":6984:7127  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n    tag_226:\n        /* \"contracts/StrangeUSDT.sol\":7062:7076  uint remaining */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":7095:7102  allowed */\n      0x5\n        /* \"contracts/StrangeUSDT.sol\":7095:7110  allowed[_owner] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":7103:7109  _owner */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":7095:7110  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/StrangeUSDT.sol\":7095:7120  allowed[_owner][_spender] */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":7111:7119  _spender */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":7095:7120  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/StrangeUSDT.sol\":7088:7120  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":6984:7127  function allowance(address _owner, address _spender) public constant returns (uint remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":345:628  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_249:\n        /* \"contracts/StrangeUSDT.sol\":403:410  uint256 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":500:509  uint256 c */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":516:517  b */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":512:513  a */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":512:517  a / b */\n      dup2\n      iszero\n      iszero\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      div\n        /* \"contracts/StrangeUSDT.sol\":500:517  uint256 c = a / b */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":620:621  c */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":613:621  return c */\n      swap2\n      pop\n        /* \"contracts/StrangeUSDT.sol\":345:628  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":634:754  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_253:\n        /* \"contracts/StrangeUSDT.sol\":692:699  uint256 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":723:724  a */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":718:719  b */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":718:724  b <= a */\n      gt\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":711:725  assert(b <= a) */\n      iszero\n      iszero\n      tag_280\n      jumpi\n      invalid\n    tag_280:\n        /* \"contracts/StrangeUSDT.sol\":746:747  b */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":742:743  a */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":742:747  a - b */\n      sub\n        /* \"contracts/StrangeUSDT.sol\":735:747  return a - b */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":634:754  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StrangeUSDT.sol\":760:903  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_257:\n        /* \"contracts/StrangeUSDT.sol\":818:825  uint256 */\n      0x0\n        /* \"contracts/StrangeUSDT.sol\":837:846  uint256 c */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":853:854  b */\n      dup3\n        /* \"contracts/StrangeUSDT.sol\":849:850  a */\n      dup5\n        /* \"contracts/StrangeUSDT.sol\":849:854  a + b */\n      add\n        /* \"contracts/StrangeUSDT.sol\":837:854  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/StrangeUSDT.sol\":876:877  a */\n      dup4\n        /* \"contracts/StrangeUSDT.sol\":871:872  c */\n      dup2\n        /* \"contracts/StrangeUSDT.sol\":871:877  c >= a */\n      lt\n      iszero\n        /* \"contracts/StrangeUSDT.sol\":864:878  assert(c >= a) */\n      iszero\n      iszero\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n        /* \"contracts/StrangeUSDT.sol\":895:896  c */\n      dup1\n        /* \"contracts/StrangeUSDT.sol\":888:896  return c */\n      swap2\n      pop\n        /* \"contracts/StrangeUSDT.sol\":760:903  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820d9df695011a05d0740bd1025c633bbfbf9d397011bb1405449b9e6b8b64b78960029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "606060405260008060146101000a81548160ff0219169083151502179055506000600355600060045534156200003457600080fd5b60405162002d7a38038062002d7a83398101604052808051906020019091908051820191906020018051820191906020018051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836001819055508260079080519060200190620000cf9291906200017a565b508160089080519060200190620000e89291906200017a565b508060098190555083600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600a60146101000a81548160ff0219169083151502179055505050505062000229565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001bd57805160ff1916838001178555620001ee565b82800160010185558215620001ee579182015b82811115620001ed578251825591602001919060010190620001d0565b5b509050620001fd919062000201565b5090565b6200022691905b808211156200022257600081600090555060010162000208565b5090565b90565b612b4180620002396000396000f30060606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a82612a0190919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a3c565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e61271061226060035488612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ade90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ade90919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b457600080fd5b6126dd6127106126cf60035487612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156126ef5760045492505b6127028385612ade90919063ffffffff16565b915061275684600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127eb82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612995576128aa83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a165760009150612a35565b8284029050828482811515612a2757fe5b04141515612a3157fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad157fe5b0490508091505092915050565b6000828211151515612aec57fe5b818303905092915050565b6000808284019050838110151515612b0b57fe5b80915050929150505600a165627a7a72305820d9df695011a05d0740bd1025c633bbfbf9d397011bb1405449b9e6b8b64b78960029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH3 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x2D7A CODESIZE SUB DUP1 PUSH3 0x2D7A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCF SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP2 PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xE8 SWAP3 SWAP2 SWAP1 PUSH3 0x17A JUMP JUMPDEST POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x229 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1BD JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1EE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1EE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1ED JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D0 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1FD SWAP2 SWAP1 PUSH3 0x201 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x226 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x222 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x208 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x2B41 DUP1 PUSH3 0x239 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DD PUSH2 0x2710 PUSH2 0x26CF PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26EF JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2702 DUP4 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2756 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27EB DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x28AA DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A16 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A35 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A27 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A31 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD1 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0B JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd9 0xdf PUSH10 0x5011A05D0740BD1025C6 CALLER 0xbb CREATE2 0xf9 0xd3 SWAP8 ADD 0x1b 0xb1 BLOCKHASH SLOAD 0x49 0xb9 0xe6 0xb8 0xb6 0x4b PUSH25 0x96002900000000000000000000000000000000000000000000 ",
							"sourceMap": "9660:4781:0:-;;;7337:5;7316:26;;;;;;;;;;;;;;;;;;;;3003:1;2973:31;;3035:1;3010:26;;10155:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:10;1310:5;;:18;;;;;;;;;;;;;;;;;;10275:14;10260:12;:29;;;;10306:5;10299:4;:12;;;;;;;;;;;;:::i;:::-;;10330:7;10321:6;:16;;;;;;;;;;;;:::i;:::-;;10358:9;10347:8;:20;;;;10395:14;10377:8;:15;10386:5;;;;;;;;;;;10377:15;;;;;;;;;;;;;;;:32;;;;10432:5;10419:10;;:18;;;;;;;;;;;;;;;;;;10155:289;;;;9660:4781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040523615610194576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101995780630753c30c14610227578063095ea7b3146102605780630e136b19146102a25780630ecb93c0146102cf57806318160ddd1461030857806323b872dd1461033157806326976e3f1461039257806327e235e3146103e7578063313ce56714610434578063353907141461045d5780633eaaf86b146104865780633f4ba83a146104af57806359bf1abe146104c45780635c658165146105155780635c975abb1461058157806370a08231146105ae5780638456cb59146105fb578063893d20e8146106105780638da5cb5b1461066557806395d89b41146106ba578063a9059cbb14610748578063c0324c771461078a578063cc872b66146107b6578063db006a75146107d9578063dd62ed3e146107fc578063dd644f7214610868578063e47d606014610891578063e4997dc5146108e2578063e5b5019a1461091b578063f2fde38b14610944578063f3bdc2281461097d575b600080fd5b34156101a457600080fd5b6101ac6109b6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ec5780820151818401526020810190506101d1565b50505050905090810190601f1680156102195780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561023257600080fd5b61025e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610a54565b005b341561026b57600080fd5b6102a0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610b71565b005b34156102ad57600080fd5b6102b5610cbf565b604051808215151515815260200191505060405180910390f35b34156102da57600080fd5b610306600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610cd2565b005b341561031357600080fd5b61031b610deb565b6040518082815260200191505060405180910390f35b341561033c57600080fd5b610390600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610ebb565b005b341561039d57600080fd5b6103a561109b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103f257600080fd5b61041e600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506110c1565b6040518082815260200191505060405180910390f35b341561043f57600080fd5b6104476110d9565b6040518082815260200191505060405180910390f35b341561046857600080fd5b6104706110df565b6040518082815260200191505060405180910390f35b341561049157600080fd5b6104996110e5565b6040518082815260200191505060405180910390f35b34156104ba57600080fd5b6104c26110eb565b005b34156104cf57600080fd5b6104fb600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111a9565b604051808215151515815260200191505060405180910390f35b341561052057600080fd5b61056b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506111ff565b6040518082815260200191505060405180910390f35b341561058c57600080fd5b610594611224565b604051808215151515815260200191505060405180910390f35b34156105b957600080fd5b6105e5600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611237565b6040518082815260200191505060405180910390f35b341561060657600080fd5b61060e611346565b005b341561061b57600080fd5b610623611406565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561067057600080fd5b61067861142f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106c557600080fd5b6106cd611454565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561070d5780820151818401526020810190506106f2565b50505050905090810190601f16801561073a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561075357600080fd5b610788600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506114f2565b005b341561079557600080fd5b6107b4600480803590602001909190803590602001909190505061169c565b005b34156107c157600080fd5b6107d76004808035906020019091905050611781565b005b34156107e457600080fd5b6107fa6004808035906020019091905050611978565b005b341561080757600080fd5b610852600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611b0b565b6040518082815260200191505060405180910390f35b341561087357600080fd5b61087b611c50565b6040518082815260200191505060405180910390f35b341561089c57600080fd5b6108c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c56565b604051808215151515815260200191505060405180910390f35b34156108ed57600080fd5b610919600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611c76565b005b341561092657600080fd5b61092e611d8f565b6040518082815260200191505060405180910390f35b341561094f57600080fd5b61097b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611db3565b005b341561098857600080fd5b6109b4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611e88565b005b60078054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a4c5780601f10610a2157610100808354040283529160200191610a4c565b820191906000526020600020905b815481529060010190602001808311610a2f57829003601f168201915b505050505081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610aaf57600080fd5b6001600a60146101000a81548160ff02191690831515021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b604060048101600036905010151515610b8957600080fd5b600a60149054906101000a900460ff1615610caf57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aee92d333385856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b1515610c9657600080fd5b6102c65a03f11515610ca757600080fd5b505050610cba565b610cb9838361200c565b5b505050565b600a60149054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d2d57600080fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615610eb257600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1515610e9057600080fd5b6102c65a03f11515610ea157600080fd5b505050604051805190509050610eb8565b60015490505b90565b600060149054906101000a900460ff16151515610ed757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515610f3057600080fd5b600a60149054906101000a900460ff161561108a57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638b477adb338585856040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001945050505050600060405180830381600087803b151561107157600080fd5b6102c65a03f1151561108257600080fd5b505050611096565b6110958383836121a9565b5b505050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b60095481565b60045481565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561114657600080fd5b600060149054906101000a900460ff16151561116157600080fd5b60008060146101000a81548160ff0219169083151502179055507f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b3360405160405180910390a1565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600060149054906101000a900460ff1681565b6000600a60149054906101000a900460ff161561133557600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561131357600080fd5b6102c65a03f1151561132457600080fd5b505050604051805190509050611341565b61133e82612650565b90505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a157600080fd5b600060149054906101000a900460ff161515156113bd57600080fd5b6001600060146101000a81548160ff0219169083151502179055507f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff62560405160405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60088054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114ea5780601f106114bf576101008083540402835291602001916114ea565b820191906000526020600020905b8154815290600101906020018083116114cd57829003601f168201915b505050505081565b600060149054906101000a900460ff1615151561150e57600080fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151561156757600080fd5b600a60149054906101000a900460ff161561168d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636e18980a3384846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b151561167457600080fd5b6102c65a03f1151561168557600080fd5b505050611698565b6116978282612699565b5b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156116f757600080fd5b60148210151561170657600080fd5b60328110151561171557600080fd5b81600381905550611734600954600a0a82612a0190919063ffffffff16565b6004819055507fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e600354600454604051808381526020018281526020019250505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156117dc57600080fd5b60015481600154011115156117f057600080fd5b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054011115156118c057600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550806001600082825401925050819055507fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a816040518082815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119d357600080fd5b80600154101515156119e457600080fd5b80600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515611a5357600080fd5b8060016000828254039250508190555080600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055507f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a44816040518082815260200191505060405180910390a150565b6000600a60149054906101000a900460ff1615611c3d57600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1515611c1b57600080fd5b6102c65a03f11515611c2c57600080fd5b505050604051805190509050611c4a565b611c478383612a3c565b90505b92915050565b60035481565b60066020528060005260406000206000915054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611cd157600080fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c81604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e0e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611e8557806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ee557600080fd5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611f3d57600080fd5b611f4682611237565b90506000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806001600082825403925050819055507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c68282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15050565b60406004810160003690501015151561202457600080fd5b600082141580156120b257506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b1515156120be57600080fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a3505050565b60008060006060600481016000369050101515156121c657600080fd5b600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054935061226e61271061226060035488612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156122805760045492505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84101561233c576122bb8585612ade90919063ffffffff16565b600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b61234f8386612ade90919063ffffffff16565b91506123a385600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061243882600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008311156125e2576124f783600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050505050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000806040600481016000369050101515156126b457600080fd5b6126dd6127106126cf60035487612a0190919063ffffffff16565b612ac390919063ffffffff16565b92506004548311156126ef5760045492505b6127028385612ade90919063ffffffff16565b915061275684600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612ade90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506127eb82600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000831115612995576128aa83600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054612af790919063ffffffff16565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef856040518082815260200191505060405180910390a35b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a35050505050565b6000806000841415612a165760009150612a35565b8284029050828482811515612a2757fe5b04141515612a3157fe5b8091505b5092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000808284811515612ad157fe5b0490508091505092915050565b6000828211151515612aec57fe5b818303905092915050565b6000808284019050838110151515612b0b57fe5b80915050929150505600a165627a7a72305820d9df695011a05d0740bd1025c633bbfbf9d397011bb1405449b9e6b8b64b78960029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3E7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x5AE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x748 JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x78A JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x7B6 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x7D9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x868 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x8E2 JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x944 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x97D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AC PUSH2 0x9B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x219 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA54 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xCD2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31B PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x390 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEBB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A5 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x10C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x447 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x470 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x499 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C2 PUSH2 0x10EB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x1224 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60E PUSH2 0x1346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x623 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x678 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x70D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x73A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x788 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x14F2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x795 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x169C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1781 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x87B PUSH2 0x1C50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x89C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x919 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C76 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E PUSH2 0x1D8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x97B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DB3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1E88 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xA4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0xB89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCAF JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xAEE92D33 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0xCBA JUMP JUMPDEST PUSH2 0xCB9 DUP4 DUP4 PUSH2 0x200C JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xD2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xEB2 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xE90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xF30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x108A JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8B477ADB CALLER DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x1095 DUP4 DUP4 DUP4 PUSH2 0x21A9 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1335 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1341 JUMP JUMPDEST PUSH2 0x133E DUP3 PUSH2 0x2650 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x14EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x150E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x168D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E18980A CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1698 JUMP JUMPDEST PUSH2 0x1697 DUP3 DUP3 PUSH2 0x2699 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x16F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT ISZERO ISZERO PUSH2 0x1706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT ISZERO ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1734 PUSH1 0x9 SLOAD PUSH1 0xA EXP DUP3 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x17DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH1 0x1 SLOAD ADD GT ISZERO ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD GT ISZERO ISZERO PUSH2 0x18C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x19D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x19E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x1A53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C3D JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 DUP5 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x1C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH2 0x1C47 DUP4 DUP4 PUSH2 0x2A3C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C DUP2 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1E85 JUMPI DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1EE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F46 DUP3 PUSH2 0x1237 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x2024 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x20B2 JUMPI POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x20BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP4 POP PUSH2 0x226E PUSH2 0x2710 PUSH2 0x2260 PUSH1 0x3 SLOAD DUP9 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x2280 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 LT ISZERO PUSH2 0x233C JUMPI PUSH2 0x22BB DUP6 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x234F DUP4 DUP7 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x23A3 DUP6 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2438 DUP3 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x25E2 JUMPI PUSH2 0x24F7 DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x4 DUP2 ADD PUSH1 0x0 CALLDATASIZE SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x26B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DD PUSH2 0x2710 PUSH2 0x26CF PUSH1 0x3 SLOAD DUP8 PUSH2 0x2A01 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2AC3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x26EF JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x2702 DUP4 DUP6 PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x2756 DUP5 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2ADE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x27EB DUP3 PUSH1 0x2 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x28AA DUP4 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2AF7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 EQ ISZERO PUSH2 0x2A16 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x2A35 JUMP JUMPDEST DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A27 JUMPI INVALID JUMPDEST DIV EQ ISZERO ISZERO PUSH2 0x2A31 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x2AD1 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2AEC JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2B0B JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd9 0xdf PUSH10 0x5011A05D0740BD1025C6 CALLER 0xbb CREATE2 0xf9 0xd3 SWAP8 ADD 0x1b 0xb1 BLOCKHASH SLOAD 0x49 0xb9 0xe6 0xb8 0xb6 0x4b PUSH25 0x96002900000000000000000000000000000000000000000000 ",
							"sourceMap": "9660:4781:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9726:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12412:177:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;11684:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9838:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8437:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;12652:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10927:355;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9802:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2848:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3010:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7902:87;;;;;;;;;;;;;;8161:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4584:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7316:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11364:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7735:85;;;;;;;;;;;;;;8289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1120:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9750;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10526:319:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13741:378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13022:259;;;;;;;;;;;;;;;;;;;;;;;;;;13505:230;;;;;;;;;;;;;;;;;;;;;;;;;;12062:287;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8380:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8585:157;;;;;;;;;;;;;;;;;;;;;;;;;;;;4652:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1670:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;8748:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;9726:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12412:177::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;12497:4;12484:10;;:17;;;;;;;;;;;;;;;;;;12529:16;12511:15;;:34;;;;;;;;;;;;;;;;;;12555:27;12565:16;12555:27;;;;;;;;;;;;;;;;;;;;;;12412:177;:::o;11684:296::-;11755:6;3190:1;3183:4;:8;3165;;:15;;:26;3163:29;3155:38;;;;;;;;11777:10;;;;;;;;;;;11773:201;;;11832:15;;;;;;;;;;;11810:54;;;11865:10;11877:8;11887:6;11810:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11803:91;;11773:201;11932:31;11946:8;11956:6;11932:13;:31::i;:::-;3203:1;11684:296;;;:::o;9838:22::-;;;;;;;;;;;;;:::o;8437:142::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;8533:4;8506:13;:24;8520:9;8506:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;8547:25;8562:9;8547:25;;;;;;;;;;;;;;;;;;;;;;8437:142;:::o;12652:212::-;12700:4;12720:10;;;;;;;;;;;12716:142;;;12767:15;;;;;;;;;;;12753:42;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12746:51;;;;12716:142;12835:12;;12828:19;;12652:212;;:::o;10927:355::-;7485:6;;;;;;;;;;;7484:7;7476:16;;;;;;;;11030:13;:20;11044:5;11030:20;;;;;;;;;;;;;;;;;;;;;;;;;11029:21;11021:30;;;;;;;;11065:10;;;;;;;;;;;11061:215;;;11120:15;;;;;;;;;;;11098:59;;;11158:10;11170:5;11177:3;11182:6;11098:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11091:98;;11061:215;11227:38;11246:5;11253:3;11258:6;11227:18;:38::i;:::-;7498:1;10927:355;;;:::o;9802:30::-;;;;;;;;;;;;;:::o;2848:40::-;;;;;;;;;;;;;;;;;:::o;9776:20::-;;;;:::o;3010:26::-;;;;:::o;1975:24::-;;;;:::o;7902:87::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;7637:6;;;;;;;;;;;7629:15;;;;;;;;7964:5;7955:6;;:14;;;;;;;;;;;;;;;;;;7975:9;;;;;;;;;;7902:87::o;8161:122::-;8232:4;8255:13;:21;8269:6;8255:21;;;;;;;;;;;;;;;;;;;;;;;;;8248:28;;8161:122;;;:::o;4584:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7316:26::-;;;;;;;;;;;;;:::o;11364:238::-;11421:4;11441:10;;;;;;;;;;;11437:159;;;11496:15;;;;;;;;;;;11474:48;;;11523:3;11474:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11467:60;;;;11437:159;11565:20;11581:3;11565:15;:20::i;:::-;11558:27;;11364:238;;;;:::o;7735:85::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;7485:6;;;;;;;;;;;7484:7;7476:16;;;;;;;;7798:4;7789:6;;:13;;;;;;;;;;;;;;;;;;7808:7;;;;;;;;;;7735:85::o;8289:::-;8336:7;8362:5;;;;;;;;;;;8355:12;;8289:85;:::o;1120:20::-;;;;;;;;;;;;;:::o;9750:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10526:319::-;7485:6;;;;;;;;;;;7484:7;7476:16;;;;;;;;10610:13;:25;10624:10;10610:25;;;;;;;;;;;;;;;;;;;;;;;;;10609:26;10601:35;;;;;;;;10650:10;;;;;;;;;;;10646:193;;;10705:15;;;;;;;;;;;10683:55;;;10739:10;10751:3;10756:6;10683:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10676:87;;10646:193;10801:27;10816:3;10821:6;10801:14;:27::i;:::-;7498:1;10526:319;;:::o;13741:378::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;13937:2;13920:14;:19;13912:28;;;;;;;;13970:2;13958:9;:14;13950:23;;;;;;;;14002:14;13984:15;:32;;;;14039:27;14057:8;;14053:2;:12;14039:9;:13;;:27;;;;:::i;:::-;14026:10;:40;;;;14077:35;14084:15;;14101:10;;14077:35;;;;;;;;;;;;;;;;;;;;;;;;13741:378;;:::o;13022:259::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;13109:12;;13100:6;13085:12;;:21;:36;13077:45;;;;;;;;13167:8;:15;13176:5;;;;;;;;;;;13167:15;;;;;;;;;;;;;;;;13158:6;13140:8;:15;13149:5;;;;;;;;;;;13140:15;;;;;;;;;;;;;;;;:24;:42;13132:51;;;;;;;;13213:6;13194:8;:15;13203:5;;;;;;;;;;;13194:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;13245:6;13229:12;;:22;;;;;;;;;;;13261:13;13267:6;13261:13;;;;;;;;;;;;;;;;;;13022:259;:::o;13505:230::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;13585:6;13569:12;;:22;;13561:31;;;;;;;;13629:6;13610:8;:15;13619:5;;;;;;;;;;;13610:15;;;;;;;;;;;;;;;;:25;;13602:34;;;;;;;;13663:6;13647:12;;:22;;;;;;;;;;;13698:6;13679:8;:15;13688:5;;;;;;;;;;;13679:15;;;;;;;;;;;;;;;;:25;;;;;;;;;;;13714:14;13721:6;13714:14;;;;;;;;;;;;;;;;;;13505:230;:::o;12062:287::-;12140:14;12170:10;;;;;;;;;;;12166:177;;;12217:15;;;;;;;;;;;12203:40;;;12244:6;12252:8;12203:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12196:65;;;;12166:177;12299:33;12315:6;12323:8;12299:15;:33::i;:::-;12292:40;;12062:287;;;;;:::o;2973:31::-;;;;:::o;8380:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;8585:157::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;8690:5;8660:13;:27;8674:12;8660:27;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;8705:30;8722:12;8705:30;;;;;;;;;;;;;;;;;;;;;;8585:157;:::o;4652:42::-;4684:10;4652:42;:::o;1670:147::-;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;1766:1;1746:22;;:8;:22;;;;1742:69;;;1792:8;1784:5;;:16;;;;;;;;;;;;;;;;;;1742:69;1670:147;:::o;8748:318::-;8879:15;1478:5;;;;;;;;;;;1464:19;;:10;:19;;;1456:28;;;;;;;;8837:13;:31;8851:16;8837:31;;;;;;;;;;;;;;;;;;;;;;;;;8829:40;;;;;;;;8897:27;8907:16;8897:9;:27::i;:::-;8879:45;;8963:1;8934:8;:26;8943:16;8934:26;;;;;;;;;;;;;;;:30;;;;8990:10;8974:12;;:26;;;;;;;;;;;9010:49;9030:16;9048:10;9010:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;8748:318;;:::o;6096:563::-;6167:6;3190:1;3183:4;:8;3165;;:15;;:26;3163:29;3155:38;;;;;;;;6511:1;6501:6;:11;;6500:53;;;;;6551:1;6518:7;:19;6526:10;6518:19;;;;;;;;;;;;;;;:29;6538:8;6518:29;;;;;;;;;;;;;;;;:34;;6500:53;6498:56;6490:65;;;;;;;;6598:6;6566:7;:19;6574:10;6566:19;;;;;;;;;;;;;;;:29;6586:8;6566:29;;;;;;;;;;;;;;;:38;;;;6635:8;6614:38;;6623:10;6614:38;;;6645:6;6614:38;;;;;;;;;;;;;;;;;;6096:563;;;:::o;4976:880::-;5080:14;5289:8;5534:15;5062:6;3190:1;3183:4;:8;3165;;:15;;:26;3163:29;3155:38;;;;;;;;5097:7;:14;5105:5;5097:14;;;;;;;;;;;;;;;:26;5112:10;5097:26;;;;;;;;;;;;;;;;5080:43;;5300:40;5334:5;5301:27;5312:15;;5301:6;:10;;:27;;;;:::i;:::-;5300:33;;:40;;;;:::i;:::-;5289:51;;5360:10;;5354:3;:16;5350:63;;;5392:10;;5386:16;;5350:63;4684:10;5426;:21;5422:103;;;5492:22;5507:6;5492:10;:14;;:22;;;;:::i;:::-;5463:7;:14;5471:5;5463:14;;;;;;;;;;;;;;;:26;5478:10;5463:26;;;;;;;;;;;;;;;:51;;;;5422:103;5552:15;5563:3;5552:6;:10;;:15;;;;:::i;:::-;5534:33;;5595:27;5615:6;5595:8;:15;5604:5;5595:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;5577:8;:15;5586:5;5577:15;;;;;;;;;;;;;;;:45;;;;5648:29;5666:10;5648:8;:13;5657:3;5648:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;5632:8;:13;5641:3;5632:13;;;;;;;;;;;;;;;:45;;;;5697:1;5691:3;:7;5687:121;;;5732:24;5752:3;5732:8;:15;5741:5;;;;;;;;;;;5732:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;5714:8;:15;5723:5;;;;;;;;;;;5714:15;;;;;;;;;;;;;;;:42;;;;5786:5;;;;;;;;;;;5770:27;;5779:5;5770:27;;;5793:3;5770:27;;;;;;;;;;;;;;;;;;5687:121;5833:3;5817:32;;5826:5;5817:32;;;5838:10;5817:32;;;;;;;;;;;;;;;;;;4976:880;;;;;;;:::o;4148:114::-;4208:12;4239:8;:16;4248:6;4239:16;;;;;;;;;;;;;;;;4232:23;;4148:114;;;:::o;3377:560::-;3462:8;3595:15;3444:6;3190:1;3183:4;:8;3165;;:15;;:26;3163:29;3155:38;;;;;;;;3473:40;3507:5;3474:27;3485:15;;3474:6;:10;;:27;;;;:::i;:::-;3473:33;;:40;;;;:::i;:::-;3462:51;;3533:10;;3527:3;:16;3523:63;;;3565:10;;3559:16;;3523:63;3613:15;3624:3;3613:6;:10;;:15;;;;:::i;:::-;3595:33;;3661:32;3686:6;3661:8;:20;3670:10;3661:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;3638:8;:20;3647:10;3638:20;;;;;;;;;;;;;;;:55;;;;3719:29;3737:10;3719:8;:13;3728:3;3719:13;;;;;;;;;;;;;;;;:17;;:29;;;;:::i;:::-;3703:8;:13;3712:3;3703:13;;;;;;;;;;;;;;;:45;;;;3768:1;3762:3;:7;3758:126;;;3803:24;3823:3;3803:8;:15;3812:5;;;;;;;;;;;3803:15;;;;;;;;;;;;;;;;:19;;:24;;;;:::i;:::-;3785:8;:15;3794:5;;;;;;;;;;;3785:15;;;;;;;;;;;;;;;:42;;;;3862:5;;;;;;;;;;;3841:32;;3850:10;3841:32;;;3869:3;3841:32;;;;;;;;;;;;;;;;;;3758:126;3914:3;3893:37;;3902:10;3893:37;;;3919:10;3893:37;;;;;;;;;;;;;;;;;;3377:560;;;;;:::o;138:201::-;196:7;269:9;224:1;219;:6;215:45;;;248:1;241:8;;;;215:45;285:1;281;:5;269:17;;312:1;307;303;:5;;;;;;;;:10;296:18;;;;;;331:1;324:8;;138:201;;;;;;:::o;6984:143::-;7062:14;7095:7;:15;7103:6;7095:15;;;;;;;;;;;;;;;:25;7111:8;7095:25;;;;;;;;;;;;;;;;7088:32;;6984:143;;;;:::o;345:283::-;403:7;500:9;516:1;512;:5;;;;;;;;500:17;;620:1;613:8;;345:283;;;;;:::o;634:120::-;692:7;723:1;718;:6;;711:14;;;;;;746:1;742;:5;735:12;;634:120;;;;:::o;760:143::-;818:7;837:9;853:1;849;:5;837:17;;876:1;871;:6;;864:14;;;;;;895:1;888:8;;760:143;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2214600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_UINT()": "821",
								"_totalSupply()": "625",
								"addBlackList(address)": "21964",
								"allowance(address,address)": "infinite",
								"allowed(address,address)": "902",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"balances(address)": "675",
								"basisPointsRate()": "955",
								"decimals()": "581",
								"deprecate(address)": "42125",
								"deprecated()": "547",
								"destroyBlackFunds(address)": "infinite",
								"getBlackListStatus(address)": "860",
								"getOwner()": "835",
								"isBlackListed(address)": "1130",
								"issue(uint256)": "44321",
								"maximumFee()": "603",
								"name()": "infinite",
								"owner()": "849",
								"pause()": "22181",
								"paused()": "811",
								"redeem(uint256)": "43611",
								"removeBlackList(address)": "22492",
								"setParams(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "infinite",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "21411",
								"unpause()": "22068",
								"upgradedAddress()": "585"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "MSTORE"
								},
								{
									"begin": 7337,
									"end": 7342,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP1"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "EXP"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP2"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SLOAD"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP2"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "MUL"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "NOT"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "AND"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SWAP1"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "DUP4"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "ISZERO"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "ISZERO"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "MUL"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "OR"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SWAP1"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "SSTORE"
								},
								{
									"begin": 7316,
									"end": 7342,
									"name": "POP"
								},
								{
									"begin": 3003,
									"end": 3004,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2973,
									"end": 3004,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2973,
									"end": 3004,
									"name": "SSTORE"
								},
								{
									"begin": 3035,
									"end": 3036,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3010,
									"end": 3036,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 3010,
									"end": 3036,
									"name": "SSTORE"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "CALLVALUE"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ISZERO"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "JUMPI"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "REVERT"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "JUMPDEST"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "MLOAD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "CODESIZE"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SUB"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSHSIZE"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP4"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "CODECOPY"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP2"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ADD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "MSTORE"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "MLOAD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ADD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP2"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "MLOAD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP3"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ADD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP2"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ADD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "MLOAD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP3"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ADD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP2"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ADD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "DUP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "MLOAD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "ADD"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP2"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "SWAP1"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "POP"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "POP"
								},
								{
									"begin": 1318,
									"end": 1328,
									"name": "CALLER"
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1315,
									"name": "DUP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "EXP"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP2"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SLOAD"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP2"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "MUL"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "NOT"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "AND"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SWAP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "DUP4"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "AND"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "MUL"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "OR"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SWAP1"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "SSTORE"
								},
								{
									"begin": 1310,
									"end": 1328,
									"name": "POP"
								},
								{
									"begin": 10275,
									"end": 10289,
									"name": "DUP4"
								},
								{
									"begin": 10260,
									"end": 10272,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10260,
									"end": 10289,
									"name": "DUP2"
								},
								{
									"begin": 10260,
									"end": 10289,
									"name": "SWAP1"
								},
								{
									"begin": 10260,
									"end": 10289,
									"name": "SSTORE"
								},
								{
									"begin": 10260,
									"end": 10289,
									"name": "POP"
								},
								{
									"begin": 10306,
									"end": 10311,
									"name": "DUP3"
								},
								{
									"begin": 10299,
									"end": 10303,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "SWAP1"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "DUP1"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "MLOAD"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "SWAP1"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "ADD"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "SWAP1"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "SWAP3"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "SWAP2"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "SWAP1"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "JUMPDEST"
								},
								{
									"begin": 10299,
									"end": 10311,
									"name": "POP"
								},
								{
									"begin": 10330,
									"end": 10337,
									"name": "DUP2"
								},
								{
									"begin": 10321,
									"end": 10327,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "SWAP1"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "DUP1"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "MLOAD"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "SWAP1"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "ADD"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "SWAP1"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "SWAP3"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "SWAP2"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "SWAP1"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "JUMPDEST"
								},
								{
									"begin": 10321,
									"end": 10337,
									"name": "POP"
								},
								{
									"begin": 10358,
									"end": 10367,
									"name": "DUP1"
								},
								{
									"begin": 10347,
									"end": 10355,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 10347,
									"end": 10367,
									"name": "DUP2"
								},
								{
									"begin": 10347,
									"end": 10367,
									"name": "SWAP1"
								},
								{
									"begin": 10347,
									"end": 10367,
									"name": "SSTORE"
								},
								{
									"begin": 10347,
									"end": 10367,
									"name": "POP"
								},
								{
									"begin": 10395,
									"end": 10409,
									"name": "DUP4"
								},
								{
									"begin": 10377,
									"end": 10385,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "DUP1"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "SWAP1"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "SLOAD"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "SWAP1"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "EXP"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "SWAP1"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "DIV"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10386,
									"end": 10391,
									"name": "AND"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "AND"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "AND"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "DUP2"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "MSTORE"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "ADD"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "SWAP1"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "DUP2"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "MSTORE"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "ADD"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10377,
									"end": 10392,
									"name": "KECCAK256"
								},
								{
									"begin": 10377,
									"end": 10409,
									"name": "DUP2"
								},
								{
									"begin": 10377,
									"end": 10409,
									"name": "SWAP1"
								},
								{
									"begin": 10377,
									"end": 10409,
									"name": "SSTORE"
								},
								{
									"begin": 10377,
									"end": 10409,
									"name": "POP"
								},
								{
									"begin": 10432,
									"end": 10437,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10419,
									"end": 10429,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 10419,
									"end": 10429,
									"name": "PUSH",
									"value": "14"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "EXP"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "DUP2"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "SLOAD"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "DUP2"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "MUL"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "NOT"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "AND"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "SWAP1"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "DUP4"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "ISZERO"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "ISZERO"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "MUL"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "OR"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "SWAP1"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "SSTORE"
								},
								{
									"begin": 10419,
									"end": 10437,
									"name": "POP"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "POP"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "POP"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "POP"
								},
								{
									"begin": 10155,
									"end": 10444,
									"name": "POP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SLOAD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "AND"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ISZERO"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "MUL"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SUB"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "AND"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DIV"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "MSTORE"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "KECCAK256"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DIV"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "LT"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPI"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "MLOAD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "NOT"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "AND"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP4"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "OR"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP6"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SSTORE"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP6"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SSTORE"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ISZERO"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPI"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "GT"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ISZERO"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPI"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "MLOAD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SSTORE"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "POP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "POP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "POP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP3"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "GT"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ISZERO"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPI"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP2"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SSTORE"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "POP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "ADD"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "POP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "SWAP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "JUMPDEST"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "DUP1"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "CODECOPY"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9660,
									"end": 14441,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d9df695011a05d0740bd1025c633bbfbf9d397011bb1405449b9e6b8b64b78960029",
									".code": [
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "MSTORE"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "ISZERO"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "SWAP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DIV"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "AND"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "753C30C"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "E136B19"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "ECB93C0"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "26976E3F"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "27E235E3"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "35390714"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "3EAAF86B"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "3F4BA83A"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "59BF1ABE"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "5C658165"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "5C975ABB"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "8456CB59"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "C0324C77"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "CC872B66"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "DB006A75"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "E47D6060"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "E4997DC5"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "E5B5019A"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "F3BDC228"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "EQ"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPI"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "JUMPDEST"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "DUP1"
										},
										{
											"begin": 9660,
											"end": 14441,
											"name": "REVERT"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "CALLVALUE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ISZERO"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPI"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "REVERT"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP3"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SUB"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP3"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MSTORE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP4"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MSTORE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "POP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP4"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "JUMPDEST"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "CALLVALUE"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "ISZERO"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "JUMPI"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "DUP1"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "REVERT"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "JUMPDEST"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "DUP1"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "DUP1"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "AND"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "SWAP1"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "ADD"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "SWAP1"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "SWAP2"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "SWAP1"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "POP"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "POP"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "JUMP"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "JUMPDEST"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "STOP"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "JUMPDEST"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "CALLVALUE"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "ISZERO"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "JUMPI"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "DUP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "REVERT"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "JUMPDEST"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "DUP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "DUP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "AND"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "ADD"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP2"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "DUP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "ADD"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP2"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "SWAP1"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "POP"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "POP"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "JUMP"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "JUMPDEST"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "STOP"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "JUMPDEST"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "CALLVALUE"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "ISZERO"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "JUMPI"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DUP1"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "REVERT"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "JUMPDEST"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "JUMP"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "JUMPDEST"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "MLOAD"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DUP1"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DUP3"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "ISZERO"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "ISZERO"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "ISZERO"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "ISZERO"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DUP2"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "MSTORE"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "ADD"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SWAP2"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "POP"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "POP"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "MLOAD"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DUP1"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SWAP2"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SUB"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SWAP1"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "RETURN"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "JUMPDEST"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "CALLVALUE"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "ISZERO"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "JUMPI"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "DUP1"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "REVERT"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "JUMPDEST"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "DUP1"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "DUP1"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "AND"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "SWAP1"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "ADD"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "SWAP1"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "SWAP2"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "SWAP1"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "POP"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "POP"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "JUMP"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "JUMPDEST"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "STOP"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMPDEST"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "CALLVALUE"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "ISZERO"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMPI"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "DUP1"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "REVERT"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMPDEST"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMP"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMPDEST"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "MLOAD"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "DUP1"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "DUP3"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "DUP2"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "MSTORE"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "ADD"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "SWAP2"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "MLOAD"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "DUP1"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "SWAP2"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "SUB"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "SWAP1"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "RETURN"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "JUMPDEST"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "CALLVALUE"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "ISZERO"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "JUMPI"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "DUP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "REVERT"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "JUMPDEST"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "DUP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "DUP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "AND"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "ADD"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP2"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "DUP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "AND"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "ADD"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP2"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "DUP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "ADD"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP2"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "SWAP1"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "POP"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "POP"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "JUMP"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "JUMPDEST"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "STOP"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "JUMPDEST"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "CALLVALUE"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "ISZERO"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "JUMPI"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "DUP1"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "REVERT"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "JUMPDEST"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "JUMP"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "JUMPDEST"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "MLOAD"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "DUP1"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "DUP3"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "AND"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "AND"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "DUP2"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "MSTORE"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "ADD"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SWAP2"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "POP"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "POP"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "MLOAD"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "DUP1"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SWAP2"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SUB"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SWAP1"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "RETURN"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "CALLVALUE"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "ISZERO"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "JUMPI"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "REVERT"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "AND"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "JUMP"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "MLOAD"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP3"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP2"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "MSTORE"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "MLOAD"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SUB"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "RETURN"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "JUMPDEST"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "CALLVALUE"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "ISZERO"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "JUMPI"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "DUP1"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "REVERT"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "JUMPDEST"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "JUMP"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "JUMPDEST"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "MLOAD"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "DUP1"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "DUP3"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "DUP2"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "MSTORE"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "ADD"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "SWAP2"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "POP"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "POP"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "MLOAD"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "DUP1"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "SWAP2"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "SUB"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "SWAP1"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "RETURN"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "CALLVALUE"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "ISZERO"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "JUMPI"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "DUP1"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "REVERT"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "JUMP"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "MLOAD"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "DUP1"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "DUP3"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "MSTORE"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "ADD"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "SWAP2"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "POP"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "POP"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "MLOAD"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "DUP1"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "SWAP2"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "SUB"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "SWAP1"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "RETURN"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMPDEST"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "CALLVALUE"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "ISZERO"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMPI"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "DUP1"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "REVERT"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMPDEST"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMP"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMPDEST"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "MLOAD"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "DUP1"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "DUP3"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "DUP2"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "MSTORE"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "ADD"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "SWAP2"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "POP"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "POP"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "MLOAD"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "DUP1"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "SWAP2"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "SUB"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "SWAP1"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "RETURN"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "CALLVALUE"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "ISZERO"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPI"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "DUP1"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "REVERT"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMP"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "STOP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMPDEST"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "CALLVALUE"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMPI"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "REVERT"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMPDEST"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "AND"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "ADD"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMPDEST"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "MLOAD"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "DUP3"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "ISZERO"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "DUP2"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "MSTORE"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "ADD"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "MLOAD"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "DUP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SUB"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "RETURN"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "CALLVALUE"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "ISZERO"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "JUMPI"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "REVERT"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "AND"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "ADD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "AND"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "ADD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "JUMP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "MLOAD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP3"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "MSTORE"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "ADD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "MLOAD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SUB"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "RETURN"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "CALLVALUE"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPI"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "REVERT"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "MLOAD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP3"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ISZERO"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "MSTORE"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "ADD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "POP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "POP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "MLOAD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SUB"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "RETURN"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMPDEST"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "CALLVALUE"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "ISZERO"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMPI"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "REVERT"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMPDEST"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "AND"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP2"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "POP"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "POP"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMP"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMPDEST"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "MLOAD"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "DUP3"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "DUP2"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "MSTORE"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "ADD"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP2"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "POP"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "POP"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "MLOAD"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "DUP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP2"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SUB"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "RETURN"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "CALLVALUE"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "ISZERO"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPI"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "DUP1"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "REVERT"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMP"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "STOP"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "JUMPDEST"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "CALLVALUE"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "ISZERO"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "JUMPI"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "DUP1"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "REVERT"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "JUMPDEST"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "JUMP"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "JUMPDEST"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "MLOAD"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "DUP1"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "DUP3"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "AND"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "AND"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "DUP2"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "MSTORE"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "ADD"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "SWAP2"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "POP"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "POP"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "MLOAD"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "DUP1"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "SWAP2"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "SUB"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "SWAP1"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "RETURN"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "CALLVALUE"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "ISZERO"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPI"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "REVERT"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP3"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MSTORE"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "ADD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "POP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "MLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SUB"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "RETURN"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPDEST"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "CALLVALUE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ISZERO"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPI"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "REVERT"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPDEST"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPDEST"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SUB"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP4"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP4"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 29,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 93,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 74,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 70,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 48,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ISZERO"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPI"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP4"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "EXP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "NOT"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "AND"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "ADD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "JUMPDEST"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP3"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "MLOAD"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "DUP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP2"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SUB"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "SWAP1"
										},
										{
											"begin": 3,
											"end": 112,
											"name": "RETURN"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "JUMPDEST"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "CALLVALUE"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "ISZERO"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "JUMPI"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "DUP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "REVERT"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "JUMPDEST"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "DUP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "DUP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "AND"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "ADD"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP2"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "DUP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "ADD"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP2"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "SWAP1"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "POP"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "POP"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "JUMP"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "JUMPDEST"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "STOP"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "JUMPDEST"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "CALLVALUE"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "ISZERO"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "JUMPI"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "REVERT"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "JUMPDEST"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "ADD"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP2"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "DUP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "ADD"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP2"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "SWAP1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "JUMP"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "JUMPDEST"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "STOP"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "JUMPDEST"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "CALLVALUE"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "ISZERO"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "JUMPI"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "DUP1"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "REVERT"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "JUMPDEST"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "DUP1"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "DUP1"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "SWAP1"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "ADD"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "SWAP1"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "SWAP2"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "SWAP1"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "POP"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "POP"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "JUMP"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "JUMPDEST"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "STOP"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "JUMPDEST"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "CALLVALUE"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "ISZERO"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "JUMPI"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "DUP1"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "REVERT"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "JUMPDEST"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "DUP1"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "DUP1"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "SWAP1"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "ADD"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "SWAP1"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "SWAP2"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "SWAP1"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "POP"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "POP"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "JUMP"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "JUMPDEST"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "STOP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMPDEST"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "CALLVALUE"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "ISZERO"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMPI"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "REVERT"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMPDEST"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "AND"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "ADD"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP2"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "AND"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "ADD"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP2"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "POP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "POP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMPDEST"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "MLOAD"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP3"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP2"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "MSTORE"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "ADD"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP2"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "POP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "POP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "MLOAD"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "DUP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP2"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SUB"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP1"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "RETURN"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "CALLVALUE"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "ISZERO"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "REVERT"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "JUMP"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "MLOAD"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "DUP3"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "MSTORE"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "ADD"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "SWAP2"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "POP"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "POP"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "MLOAD"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "SWAP2"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "SUB"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "SWAP1"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "RETURN"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "JUMPDEST"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "CALLVALUE"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "ISZERO"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "JUMPI"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "REVERT"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "JUMPDEST"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "AND"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "ADD"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP2"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "POP"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "POP"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "JUMP"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "JUMPDEST"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "MLOAD"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP3"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "ISZERO"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "ISZERO"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "ISZERO"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "ISZERO"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP2"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "MSTORE"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "ADD"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP2"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "POP"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "POP"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "MLOAD"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP2"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SUB"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "RETURN"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "JUMPDEST"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "CALLVALUE"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "ISZERO"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "JUMPI"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "DUP1"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "REVERT"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "JUMPDEST"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "DUP1"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "DUP1"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "AND"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "SWAP1"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "ADD"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "SWAP1"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "SWAP2"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "SWAP1"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "POP"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "POP"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "JUMP"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "JUMPDEST"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "STOP"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "JUMPDEST"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "CALLVALUE"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "ISZERO"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "JUMPI"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "DUP1"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "REVERT"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "JUMPDEST"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "JUMP"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "JUMPDEST"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "MLOAD"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "DUP1"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "DUP3"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "DUP2"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "MSTORE"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "ADD"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "SWAP2"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "POP"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "POP"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "MLOAD"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "DUP1"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "SWAP2"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "SUB"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "SWAP1"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "RETURN"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "CALLVALUE"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "ISZERO"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPI"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "REVERT"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "DUP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "AND"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "ADD"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP2"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "SWAP1"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "STOP"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "JUMPDEST"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "CALLVALUE"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "ISZERO"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "JUMPI"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "DUP1"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "REVERT"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "JUMPDEST"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "DUP1"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "DUP1"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "AND"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "SWAP1"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "ADD"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "SWAP1"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "SWAP2"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "SWAP1"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "POP"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "POP"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "JUMP"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "JUMPDEST"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "STOP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "AND"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ISZERO"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MUL"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SUB"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "AND"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DIV"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DIV"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MUL"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MSTORE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP3"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MSTORE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP3"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "AND"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ISZERO"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MUL"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SUB"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "AND"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DIV"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ISZERO"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPI"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "LT"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPI"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP4"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DIV"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MUL"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP4"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MSTORE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP3"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MSTORE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "KECCAK256"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SLOAD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "MSTORE"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP4"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "GT"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPI"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP3"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP1"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SUB"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "AND"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP3"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "SWAP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMPDEST"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "POP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "POP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "POP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "POP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "POP"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "DUP2"
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12484,
											"end": 12494,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12484,
											"end": 12494,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "EXP"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "SLOAD"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "DUP2"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "NOT"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "AND"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "DUP4"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "ISZERO"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "MUL"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "OR"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "SWAP1"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "SSTORE"
										},
										{
											"begin": 12484,
											"end": 12501,
											"name": "POP"
										},
										{
											"begin": 12529,
											"end": 12545,
											"name": "DUP1"
										},
										{
											"begin": 12511,
											"end": 12526,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12511,
											"end": 12526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "EXP"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "DUP2"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "SLOAD"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "DUP2"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "MUL"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "NOT"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "AND"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "SWAP1"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "DUP4"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "AND"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "MUL"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "OR"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "SWAP1"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "SSTORE"
										},
										{
											"begin": 12511,
											"end": 12545,
											"name": "POP"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "PUSH",
											"value": "CC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
										},
										{
											"begin": 12565,
											"end": 12581,
											"name": "DUP2"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "MLOAD"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "DUP1"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "DUP3"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "AND"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "AND"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "DUP2"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "MSTORE"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "ADD"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "SWAP2"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "POP"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "POP"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "MLOAD"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "DUP1"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "SWAP2"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "SUB"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "SWAP1"
										},
										{
											"begin": 12555,
											"end": 12582,
											"name": "LOG1"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "POP"
										},
										{
											"begin": 12412,
											"end": 12589,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "JUMPDEST"
										},
										{
											"begin": 11755,
											"end": 11761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3187,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "SWAP1"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "POP"
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "LT"
										},
										{
											"begin": 3163,
											"end": 3192,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPI"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "REVERT"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPDEST"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "SWAP1"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "SLOAD"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "SWAP1"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "EXP"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "SWAP1"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "DIV"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11777,
											"end": 11787,
											"name": "AND"
										},
										{
											"begin": 11773,
											"end": 11974,
											"name": "ISZERO"
										},
										{
											"begin": 11773,
											"end": 11974,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 11773,
											"end": 11974,
											"name": "JUMPI"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "SLOAD"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "EXP"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "SWAP1"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "DIV"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11832,
											"end": 11847,
											"name": "AND"
										},
										{
											"begin": 11810,
											"end": 11864,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11810,
											"end": 11864,
											"name": "AND"
										},
										{
											"begin": 11810,
											"end": 11864,
											"name": "PUSH",
											"value": "AEE92D33"
										},
										{
											"begin": 11865,
											"end": 11875,
											"name": "CALLER"
										},
										{
											"begin": 11877,
											"end": 11885,
											"name": "DUP6"
										},
										{
											"begin": 11887,
											"end": 11893,
											"name": "DUP6"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "MLOAD"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP5"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "AND"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "MUL"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP2"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "MSTORE"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ADD"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP1"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP5"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "AND"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "AND"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP2"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "MSTORE"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ADD"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP4"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "AND"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "AND"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP2"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "MSTORE"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ADD"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP3"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP2"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "MSTORE"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ADD"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "SWAP4"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "POP"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "POP"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "POP"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "POP"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "MLOAD"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP1"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP4"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "SUB"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP2"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP8"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP1"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ISZERO"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ISZERO"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "JUMPI"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP1"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "REVERT"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "JUMPDEST"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "GAS"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "SUB"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "CALL"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ISZERO"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "ISZERO"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "JUMPI"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "DUP1"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "REVERT"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "JUMPDEST"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "POP"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "POP"
										},
										{
											"begin": 11810,
											"end": 11894,
											"name": "POP"
										},
										{
											"begin": 11803,
											"end": 11894,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 11803,
											"end": 11894,
											"name": "JUMP"
										},
										{
											"begin": 11773,
											"end": 11974,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 11773,
											"end": 11974,
											"name": "JUMPDEST"
										},
										{
											"begin": 11932,
											"end": 11963,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 11946,
											"end": 11954,
											"name": "DUP4"
										},
										{
											"begin": 11956,
											"end": 11962,
											"name": "DUP4"
										},
										{
											"begin": 11932,
											"end": 11945,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 11932,
											"end": 11963,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11932,
											"end": 11963,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 11932,
											"end": 11963,
											"name": "JUMPDEST"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "JUMPDEST"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "POP"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "POP"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "POP"
										},
										{
											"begin": 11684,
											"end": 11980,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "JUMPDEST"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SWAP1"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SLOAD"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SWAP1"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "EXP"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "SWAP1"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DIV"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "AND"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "DUP2"
										},
										{
											"begin": 9838,
											"end": 9860,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 8533,
											"end": 8537,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8506,
											"end": 8519,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8529,
											"name": "DUP4"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "AND"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "AND"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "DUP2"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "MSTORE"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "ADD"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "SWAP1"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "DUP2"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "MSTORE"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "ADD"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "KECCAK256"
										},
										{
											"begin": 8506,
											"end": 8530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "EXP"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "DUP2"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "SLOAD"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "DUP2"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "MUL"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "NOT"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "AND"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "SWAP1"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "DUP4"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "ISZERO"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "ISZERO"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "MUL"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "OR"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "SWAP1"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "SSTORE"
										},
										{
											"begin": 8506,
											"end": 8537,
											"name": "POP"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "PUSH",
											"value": "42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
										},
										{
											"begin": 8562,
											"end": 8571,
											"name": "DUP2"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "MLOAD"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "DUP1"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "DUP3"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "AND"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "AND"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "DUP2"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "MSTORE"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "ADD"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "SWAP2"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "POP"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "POP"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "MLOAD"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "DUP1"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "SWAP2"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "SUB"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "SWAP1"
										},
										{
											"begin": 8547,
											"end": 8572,
											"name": "LOG1"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "POP"
										},
										{
											"begin": 8437,
											"end": 8579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMPDEST"
										},
										{
											"begin": 12700,
											"end": 12704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "SWAP1"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "SLOAD"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "SWAP1"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "EXP"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "SWAP1"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "DIV"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12720,
											"end": 12730,
											"name": "AND"
										},
										{
											"begin": 12716,
											"end": 12858,
											"name": "ISZERO"
										},
										{
											"begin": 12716,
											"end": 12858,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 12716,
											"end": 12858,
											"name": "JUMPI"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "SLOAD"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "EXP"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "SWAP1"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "DIV"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12767,
											"end": 12782,
											"name": "AND"
										},
										{
											"begin": 12753,
											"end": 12795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12753,
											"end": 12795,
											"name": "AND"
										},
										{
											"begin": 12753,
											"end": 12795,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MLOAD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "ADD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MSTORE"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MLOAD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP2"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "AND"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MUL"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP2"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MSTORE"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "ADD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MLOAD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP1"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP4"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "SUB"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP2"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP8"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP1"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "ISZERO"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "ISZERO"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "JUMPI"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP1"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "REVERT"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "JUMPDEST"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "GAS"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "SUB"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "CALL"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "ISZERO"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "ISZERO"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "JUMPI"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP1"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "REVERT"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "JUMPDEST"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "POP"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "POP"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "POP"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MLOAD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "DUP1"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "MLOAD"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "SWAP1"
										},
										{
											"begin": 12753,
											"end": 12797,
											"name": "POP"
										},
										{
											"begin": 12746,
											"end": 12797,
											"name": "SWAP1"
										},
										{
											"begin": 12746,
											"end": 12797,
											"name": "POP"
										},
										{
											"begin": 12746,
											"end": 12797,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 12746,
											"end": 12797,
											"name": "JUMP"
										},
										{
											"begin": 12716,
											"end": 12858,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 12716,
											"end": 12858,
											"name": "JUMPDEST"
										},
										{
											"begin": 12835,
											"end": 12847,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12835,
											"end": 12847,
											"name": "SLOAD"
										},
										{
											"begin": 12828,
											"end": 12847,
											"name": "SWAP1"
										},
										{
											"begin": 12828,
											"end": 12847,
											"name": "POP"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMPDEST"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "SWAP1"
										},
										{
											"begin": 12652,
											"end": 12864,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "JUMPDEST"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SLOAD"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "EXP"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "DIV"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "AND"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPI"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "DUP1"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "REVERT"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPDEST"
										},
										{
											"begin": 11030,
											"end": 11043,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11049,
											"name": "DUP5"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "AND"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "AND"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "DUP2"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "MSTORE"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "ADD"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "SWAP1"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "DUP2"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "MSTORE"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "ADD"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "KECCAK256"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "SWAP1"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "SLOAD"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "SWAP1"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "EXP"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "SWAP1"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "DIV"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11030,
											"end": 11050,
											"name": "AND"
										},
										{
											"begin": 11029,
											"end": 11050,
											"name": "ISZERO"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "ISZERO"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "ISZERO"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "JUMPI"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "DUP1"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "REVERT"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 11021,
											"end": 11051,
											"name": "JUMPDEST"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "SWAP1"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "SLOAD"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "SWAP1"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "EXP"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "SWAP1"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "DIV"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11065,
											"end": 11075,
											"name": "AND"
										},
										{
											"begin": 11061,
											"end": 11276,
											"name": "ISZERO"
										},
										{
											"begin": 11061,
											"end": 11276,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 11061,
											"end": 11276,
											"name": "JUMPI"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "SWAP1"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "SLOAD"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "SWAP1"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "EXP"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "SWAP1"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "DIV"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11120,
											"end": 11135,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11157,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11157,
											"name": "PUSH",
											"value": "8B477ADB"
										},
										{
											"begin": 11158,
											"end": 11168,
											"name": "CALLER"
										},
										{
											"begin": 11170,
											"end": 11175,
											"name": "DUP6"
										},
										{
											"begin": 11177,
											"end": 11180,
											"name": "DUP6"
										},
										{
											"begin": 11182,
											"end": 11188,
											"name": "DUP6"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MLOAD"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP6"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MUL"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP2"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MSTORE"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ADD"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP1"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP6"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP2"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MSTORE"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ADD"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP5"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP2"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MSTORE"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ADD"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP4"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "AND"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP2"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MSTORE"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ADD"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP3"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP2"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MSTORE"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ADD"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "SWAP5"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "MLOAD"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP1"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP4"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "SUB"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP2"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP8"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP1"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ISZERO"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ISZERO"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "JUMPI"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP1"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "REVERT"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "JUMPDEST"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "GAS"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "SUB"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "CALL"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ISZERO"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "ISZERO"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "JUMPI"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "DUP1"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "REVERT"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "JUMPDEST"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11098,
											"end": 11189,
											"name": "POP"
										},
										{
											"begin": 11091,
											"end": 11189,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 11091,
											"end": 11189,
											"name": "JUMP"
										},
										{
											"begin": 11061,
											"end": 11276,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 11061,
											"end": 11276,
											"name": "JUMPDEST"
										},
										{
											"begin": 11227,
											"end": 11265,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 11246,
											"end": 11251,
											"name": "DUP4"
										},
										{
											"begin": 11253,
											"end": 11256,
											"name": "DUP4"
										},
										{
											"begin": 11258,
											"end": 11264,
											"name": "DUP4"
										},
										{
											"begin": 11227,
											"end": 11245,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 11227,
											"end": 11265,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11227,
											"end": 11265,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 11227,
											"end": 11265,
											"name": "JUMPDEST"
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "JUMPDEST"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "POP"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "POP"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "POP"
										},
										{
											"begin": 10927,
											"end": 11282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "JUMPDEST"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SWAP1"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SLOAD"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SWAP1"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "EXP"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "SWAP1"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "DIV"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "AND"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "DUP2"
										},
										{
											"begin": 9802,
											"end": 9832,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "MSTORE"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "MSTORE"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "KECCAK256"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "SLOAD"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "DUP2"
										},
										{
											"begin": 2848,
											"end": 2888,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "JUMPDEST"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "SLOAD"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "DUP2"
										},
										{
											"begin": 9776,
											"end": 9796,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "JUMPDEST"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "SLOAD"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "DUP2"
										},
										{
											"begin": 3010,
											"end": 3036,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMPDEST"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "SLOAD"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "DUP2"
										},
										{
											"begin": 1975,
											"end": 1999,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SWAP1"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SLOAD"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SWAP1"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "EXP"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "SWAP1"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "DIV"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7637,
											"end": 7643,
											"name": "AND"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "ISZERO"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "JUMPI"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "DUP1"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "REVERT"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 7629,
											"end": 7644,
											"name": "JUMPDEST"
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7955,
											"end": 7961,
											"name": "DUP1"
										},
										{
											"begin": 7955,
											"end": 7961,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "EXP"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SLOAD"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "DUP2"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "MUL"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "NOT"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "AND"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "DUP4"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "ISZERO"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "ISZERO"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "MUL"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "OR"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SWAP1"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "SSTORE"
										},
										{
											"begin": 7955,
											"end": 7969,
											"name": "POP"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "PUSH",
											"value": "7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "MLOAD"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "MLOAD"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "DUP1"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "SWAP2"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "SUB"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "SWAP1"
										},
										{
											"begin": 7975,
											"end": 7984,
											"name": "LOG1"
										},
										{
											"begin": 7902,
											"end": 7989,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMPDEST"
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8268,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8269,
											"end": 8275,
											"name": "DUP4"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "AND"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "AND"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "DUP2"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "MSTORE"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "ADD"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "DUP2"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "MSTORE"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "ADD"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "KECCAK256"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "SLOAD"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "EXP"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "DIV"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8255,
											"end": 8276,
											"name": "AND"
										},
										{
											"begin": 8248,
											"end": 8276,
											"name": "SWAP1"
										},
										{
											"begin": 8248,
											"end": 8276,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP2"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "SWAP1"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "POP"
										},
										{
											"begin": 8161,
											"end": 8283,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "JUMPDEST"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "MSTORE"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "MSTORE"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "KECCAK256"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "MSTORE"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "MSTORE"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "KECCAK256"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "SLOAD"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "DUP2"
										},
										{
											"begin": 4584,
											"end": 4645,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMPDEST"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SLOAD"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "EXP"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DIV"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "AND"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7316,
											"end": 7342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMPDEST"
										},
										{
											"begin": 11421,
											"end": 11425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "SWAP1"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "SLOAD"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "SWAP1"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "EXP"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "SWAP1"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "DIV"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11441,
											"end": 11451,
											"name": "AND"
										},
										{
											"begin": 11437,
											"end": 11596,
											"name": "ISZERO"
										},
										{
											"begin": 11437,
											"end": 11596,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 11437,
											"end": 11596,
											"name": "JUMPI"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SLOAD"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "EXP"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "SWAP1"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "DIV"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11496,
											"end": 11511,
											"name": "AND"
										},
										{
											"begin": 11474,
											"end": 11522,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11474,
											"end": 11522,
											"name": "AND"
										},
										{
											"begin": 11474,
											"end": 11522,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11523,
											"end": 11526,
											"name": "DUP4"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "ADD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MSTORE"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP3"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "AND"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MUL"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP2"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MSTORE"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "ADD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP3"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "AND"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "AND"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP2"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MSTORE"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "ADD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "SWAP2"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP4"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "SUB"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP2"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP8"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "ISZERO"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "ISZERO"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "JUMPI"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "REVERT"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "JUMPDEST"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "GAS"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "SUB"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "CALL"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "ISZERO"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "ISZERO"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "JUMPI"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "REVERT"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "JUMPDEST"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "POP"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "DUP1"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "MLOAD"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "SWAP1"
										},
										{
											"begin": 11474,
											"end": 11527,
											"name": "POP"
										},
										{
											"begin": 11467,
											"end": 11527,
											"name": "SWAP1"
										},
										{
											"begin": 11467,
											"end": 11527,
											"name": "POP"
										},
										{
											"begin": 11467,
											"end": 11527,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 11467,
											"end": 11527,
											"name": "JUMP"
										},
										{
											"begin": 11437,
											"end": 11596,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 11437,
											"end": 11596,
											"name": "JUMPDEST"
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 11581,
											"end": 11584,
											"name": "DUP3"
										},
										{
											"begin": 11565,
											"end": 11580,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 11565,
											"end": 11585,
											"name": "JUMPDEST"
										},
										{
											"begin": 11558,
											"end": 11585,
											"name": "SWAP1"
										},
										{
											"begin": 11558,
											"end": 11585,
											"name": "POP"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMPDEST"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP2"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "SWAP1"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "POP"
										},
										{
											"begin": 11364,
											"end": 11602,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SLOAD"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "EXP"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "DIV"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "AND"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPI"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "DUP1"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "REVERT"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPDEST"
										},
										{
											"begin": 7798,
											"end": 7802,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7795,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "EXP"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "DUP2"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SLOAD"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "DUP2"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "MUL"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "NOT"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "AND"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SWAP1"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "DUP4"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "ISZERO"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "ISZERO"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "MUL"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "OR"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SWAP1"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "SSTORE"
										},
										{
											"begin": 7789,
											"end": 7802,
											"name": "POP"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "PUSH",
											"value": "6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "MLOAD"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "MLOAD"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "DUP1"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "SWAP2"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "SUB"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "SWAP1"
										},
										{
											"begin": 7808,
											"end": 7815,
											"name": "LOG1"
										},
										{
											"begin": 7735,
											"end": 7820,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "JUMPDEST"
										},
										{
											"begin": 8336,
											"end": 8343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "DUP1"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SWAP1"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SLOAD"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SWAP1"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "EXP"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "SWAP1"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "DIV"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "AND"
										},
										{
											"begin": 8355,
											"end": 8367,
											"name": "SWAP1"
										},
										{
											"begin": 8355,
											"end": 8367,
											"name": "POP"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "SWAP1"
										},
										{
											"begin": 8289,
											"end": 8374,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMPDEST"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SLOAD"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXP"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "SWAP1"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DIV"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "AND"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "DUP2"
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPDEST"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ISZERO"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MUL"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SUB"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DIV"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DIV"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MUL"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP3"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ISZERO"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MUL"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SUB"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DIV"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ISZERO"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPI"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "LT"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPI"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP4"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DIV"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MUL"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP4"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPDEST"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "KECCAK256"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPDEST"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SLOAD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "MSTORE"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP4"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "GT"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPI"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP1"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SUB"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "AND"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP3"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "ADD"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "SWAP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMPDEST"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "POP"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "DUP2"
										},
										{
											"begin": 9750,
											"end": 9770,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "JUMPDEST"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SLOAD"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "EXP"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "SWAP1"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "DIV"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 7485,
											"end": 7491,
											"name": "AND"
										},
										{
											"begin": 7484,
											"end": 7491,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "ISZERO"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPI"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "DUP1"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "REVERT"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 7476,
											"end": 7492,
											"name": "JUMPDEST"
										},
										{
											"begin": 10610,
											"end": 10623,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10624,
											"end": 10634,
											"name": "CALLER"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "AND"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "AND"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "DUP2"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "MSTORE"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "ADD"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "SWAP1"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "DUP2"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "MSTORE"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "ADD"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "KECCAK256"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "SWAP1"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "SLOAD"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "SWAP1"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "EXP"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "SWAP1"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "DIV"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10610,
											"end": 10635,
											"name": "AND"
										},
										{
											"begin": 10609,
											"end": 10635,
											"name": "ISZERO"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "ISZERO"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "ISZERO"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "JUMPI"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "DUP1"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "REVERT"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 10601,
											"end": 10636,
											"name": "JUMPDEST"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "SWAP1"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "SLOAD"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "SWAP1"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "EXP"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "SWAP1"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "DIV"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10650,
											"end": 10660,
											"name": "AND"
										},
										{
											"begin": 10646,
											"end": 10839,
											"name": "ISZERO"
										},
										{
											"begin": 10646,
											"end": 10839,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 10646,
											"end": 10839,
											"name": "JUMPI"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "SWAP1"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "SLOAD"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "SWAP1"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "EXP"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "SWAP1"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "DIV"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10705,
											"end": 10720,
											"name": "AND"
										},
										{
											"begin": 10683,
											"end": 10738,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10738,
											"name": "AND"
										},
										{
											"begin": 10683,
											"end": 10738,
											"name": "PUSH",
											"value": "6E18980A"
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "CALLER"
										},
										{
											"begin": 10751,
											"end": 10754,
											"name": "DUP5"
										},
										{
											"begin": 10756,
											"end": 10762,
											"name": "DUP5"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "MLOAD"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP5"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "AND"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "MUL"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP2"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "MSTORE"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ADD"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP1"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP5"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "AND"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "AND"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP2"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "MSTORE"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ADD"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP4"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "AND"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "AND"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP2"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "MSTORE"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ADD"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP3"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP2"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "MSTORE"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ADD"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "SWAP4"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "POP"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "POP"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "POP"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "POP"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "MLOAD"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP1"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP4"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "SUB"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP2"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP8"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP1"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ISZERO"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ISZERO"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "JUMPI"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP1"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "REVERT"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "JUMPDEST"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "GAS"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "SUB"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "CALL"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ISZERO"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "ISZERO"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "JUMPI"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "DUP1"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "REVERT"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "JUMPDEST"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "POP"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "POP"
										},
										{
											"begin": 10683,
											"end": 10763,
											"name": "POP"
										},
										{
											"begin": 10676,
											"end": 10763,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 10676,
											"end": 10763,
											"name": "JUMP"
										},
										{
											"begin": 10646,
											"end": 10839,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 10646,
											"end": 10839,
											"name": "JUMPDEST"
										},
										{
											"begin": 10801,
											"end": 10828,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 10816,
											"end": 10819,
											"name": "DUP3"
										},
										{
											"begin": 10821,
											"end": 10827,
											"name": "DUP3"
										},
										{
											"begin": 10801,
											"end": 10815,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 10801,
											"end": 10828,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10801,
											"end": 10828,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 10801,
											"end": 10828,
											"name": "JUMPDEST"
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "JUMPDEST"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "POP"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "POP"
										},
										{
											"begin": 10526,
											"end": 10845,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 13937,
											"end": 13939,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 13920,
											"end": 13934,
											"name": "DUP3"
										},
										{
											"begin": 13920,
											"end": 13939,
											"name": "LT"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "ISZERO"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "ISZERO"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "JUMPI"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "DUP1"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "REVERT"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 13912,
											"end": 13940,
											"name": "JUMPDEST"
										},
										{
											"begin": 13970,
											"end": 13972,
											"name": "PUSH",
											"value": "32"
										},
										{
											"begin": 13958,
											"end": 13967,
											"name": "DUP2"
										},
										{
											"begin": 13958,
											"end": 13972,
											"name": "LT"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "ISZERO"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "ISZERO"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "JUMPI"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "DUP1"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "REVERT"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 13950,
											"end": 13973,
											"name": "JUMPDEST"
										},
										{
											"begin": 14002,
											"end": 14016,
											"name": "DUP2"
										},
										{
											"begin": 13984,
											"end": 13999,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 13984,
											"end": 14016,
											"name": "DUP2"
										},
										{
											"begin": 13984,
											"end": 14016,
											"name": "SWAP1"
										},
										{
											"begin": 13984,
											"end": 14016,
											"name": "SSTORE"
										},
										{
											"begin": 13984,
											"end": 14016,
											"name": "POP"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 14057,
											"end": 14065,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 14057,
											"end": 14065,
											"name": "SLOAD"
										},
										{
											"begin": 14053,
											"end": 14055,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 14053,
											"end": 14065,
											"name": "EXP"
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "DUP3"
										},
										{
											"begin": 14039,
											"end": 14052,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 14039,
											"end": 14052,
											"name": "SWAP1"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "SWAP2"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "SWAP1"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "AND"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 14039,
											"end": 14066,
											"name": "JUMPDEST"
										},
										{
											"begin": 14026,
											"end": 14036,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14026,
											"end": 14066,
											"name": "DUP2"
										},
										{
											"begin": 14026,
											"end": 14066,
											"name": "SWAP1"
										},
										{
											"begin": 14026,
											"end": 14066,
											"name": "SSTORE"
										},
										{
											"begin": 14026,
											"end": 14066,
											"name": "POP"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "PUSH",
											"value": "B044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
										},
										{
											"begin": 14084,
											"end": 14099,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 14084,
											"end": 14099,
											"name": "SLOAD"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14101,
											"end": 14111,
											"name": "SLOAD"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "MLOAD"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "DUP1"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "DUP4"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "DUP2"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "MSTORE"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "ADD"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "DUP3"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "DUP2"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "MSTORE"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "ADD"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "SWAP3"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "POP"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "POP"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "POP"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "MLOAD"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "DUP1"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "SWAP2"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "SUB"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "SWAP1"
										},
										{
											"begin": 14077,
											"end": 14112,
											"name": "LOG1"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "POP"
										},
										{
											"begin": 13741,
											"end": 14119,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13109,
											"end": 13121,
											"name": "SLOAD"
										},
										{
											"begin": 13100,
											"end": 13106,
											"name": "DUP2"
										},
										{
											"begin": 13085,
											"end": 13097,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13085,
											"end": 13097,
											"name": "SLOAD"
										},
										{
											"begin": 13085,
											"end": 13106,
											"name": "ADD"
										},
										{
											"begin": 13085,
											"end": 13121,
											"name": "GT"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "ISZERO"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "ISZERO"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "JUMPI"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "DUP1"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "REVERT"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 13077,
											"end": 13122,
											"name": "JUMPDEST"
										},
										{
											"begin": 13167,
											"end": 13175,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "DUP1"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "SLOAD"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "EXP"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "DIV"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "AND"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "AND"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "AND"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "DUP2"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "MSTORE"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "ADD"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "SWAP1"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "DUP2"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "MSTORE"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "ADD"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "KECCAK256"
										},
										{
											"begin": 13167,
											"end": 13182,
											"name": "SLOAD"
										},
										{
											"begin": 13158,
											"end": 13164,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13148,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "DUP1"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "SWAP1"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "SLOAD"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "SWAP1"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "EXP"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "SWAP1"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "DIV"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13149,
											"end": 13154,
											"name": "AND"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "AND"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "AND"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "SWAP1"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "DUP2"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "MSTORE"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "KECCAK256"
										},
										{
											"begin": 13140,
											"end": 13155,
											"name": "SLOAD"
										},
										{
											"begin": 13140,
											"end": 13164,
											"name": "ADD"
										},
										{
											"begin": 13140,
											"end": 13182,
											"name": "GT"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "ISZERO"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "ISZERO"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "JUMPI"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "DUP1"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "REVERT"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 13132,
											"end": 13183,
											"name": "JUMPDEST"
										},
										{
											"begin": 13213,
											"end": 13219,
											"name": "DUP1"
										},
										{
											"begin": 13194,
											"end": 13202,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "DUP1"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "SLOAD"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "EXP"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "SWAP1"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "DIV"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13203,
											"end": 13208,
											"name": "AND"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "AND"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "AND"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "DUP2"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "MSTORE"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "ADD"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "SWAP1"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "DUP2"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "MSTORE"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "ADD"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "KECCAK256"
										},
										{
											"begin": 13194,
											"end": 13209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "DUP3"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "DUP3"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "SLOAD"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "ADD"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "SWAP3"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "POP"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "POP"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "DUP2"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "SWAP1"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "SSTORE"
										},
										{
											"begin": 13194,
											"end": 13219,
											"name": "POP"
										},
										{
											"begin": 13245,
											"end": 13251,
											"name": "DUP1"
										},
										{
											"begin": 13229,
											"end": 13241,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13229,
											"end": 13241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "DUP3"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "DUP3"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "SLOAD"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "ADD"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "SWAP3"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "POP"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "POP"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "DUP2"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "SWAP1"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "SSTORE"
										},
										{
											"begin": 13229,
											"end": 13251,
											"name": "POP"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "PUSH",
											"value": "CB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "DUP2"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "MLOAD"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "DUP1"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "DUP3"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "DUP2"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "MSTORE"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "ADD"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "SWAP2"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "POP"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "POP"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "MLOAD"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "DUP1"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "SWAP2"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "SUB"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "SWAP1"
										},
										{
											"begin": 13261,
											"end": 13274,
											"name": "LOG1"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "POP"
										},
										{
											"begin": 13022,
											"end": 13281,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 13585,
											"end": 13591,
											"name": "DUP1"
										},
										{
											"begin": 13569,
											"end": 13581,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13569,
											"end": 13581,
											"name": "SLOAD"
										},
										{
											"begin": 13569,
											"end": 13591,
											"name": "LT"
										},
										{
											"begin": 13569,
											"end": 13591,
											"name": "ISZERO"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "ISZERO"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "ISZERO"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "JUMPI"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "DUP1"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "REVERT"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 13561,
											"end": 13592,
											"name": "JUMPDEST"
										},
										{
											"begin": 13629,
											"end": 13635,
											"name": "DUP1"
										},
										{
											"begin": 13610,
											"end": 13618,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "DUP1"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "SWAP1"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "SLOAD"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "SWAP1"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "EXP"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "SWAP1"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "DIV"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13619,
											"end": 13624,
											"name": "AND"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "AND"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "AND"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "DUP2"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "MSTORE"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "ADD"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "SWAP1"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "DUP2"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "MSTORE"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "ADD"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "KECCAK256"
										},
										{
											"begin": 13610,
											"end": 13625,
											"name": "SLOAD"
										},
										{
											"begin": 13610,
											"end": 13635,
											"name": "LT"
										},
										{
											"begin": 13610,
											"end": 13635,
											"name": "ISZERO"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "ISZERO"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "ISZERO"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "JUMPI"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "DUP1"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "REVERT"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 13602,
											"end": 13636,
											"name": "JUMPDEST"
										},
										{
											"begin": 13663,
											"end": 13669,
											"name": "DUP1"
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "DUP3"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "DUP3"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "SLOAD"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "SUB"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "SWAP3"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "POP"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "POP"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "DUP2"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "SWAP1"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "SSTORE"
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "POP"
										},
										{
											"begin": 13698,
											"end": 13704,
											"name": "DUP1"
										},
										{
											"begin": 13679,
											"end": 13687,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "DUP1"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "SWAP1"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "SLOAD"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "SWAP1"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "EXP"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "SWAP1"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "DIV"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13688,
											"end": 13693,
											"name": "AND"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "AND"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "AND"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "DUP2"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "MSTORE"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "ADD"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "SWAP1"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "DUP2"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "MSTORE"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "ADD"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "KECCAK256"
										},
										{
											"begin": 13679,
											"end": 13694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "DUP3"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "DUP3"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "SLOAD"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "SUB"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "SWAP3"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "POP"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "POP"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "DUP2"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "SWAP1"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "SSTORE"
										},
										{
											"begin": 13679,
											"end": 13704,
											"name": "POP"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "PUSH",
											"value": "702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
										},
										{
											"begin": 13721,
											"end": 13727,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "MLOAD"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "DUP1"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "DUP3"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "MSTORE"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "ADD"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "SWAP2"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "POP"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "POP"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "MLOAD"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "DUP1"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "SWAP2"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "SUB"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "SWAP1"
										},
										{
											"begin": 13714,
											"end": 13728,
											"name": "LOG1"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "POP"
										},
										{
											"begin": 13505,
											"end": 13735,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMPDEST"
										},
										{
											"begin": 12140,
											"end": 12154,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "SWAP1"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "SLOAD"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "SWAP1"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "EXP"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "SWAP1"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "DIV"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12170,
											"end": 12180,
											"name": "AND"
										},
										{
											"begin": 12166,
											"end": 12343,
											"name": "ISZERO"
										},
										{
											"begin": 12166,
											"end": 12343,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 12166,
											"end": 12343,
											"name": "JUMPI"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "SWAP1"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "SLOAD"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "SWAP1"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "EXP"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "SWAP1"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "DIV"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12243,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12243,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12243,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 12244,
											"end": 12250,
											"name": "DUP5"
										},
										{
											"begin": 12252,
											"end": 12260,
											"name": "DUP5"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MLOAD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MLOAD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP4"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MUL"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP4"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP3"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "AND"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MSTORE"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ADD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "SWAP3"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MLOAD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP4"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "SUB"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP2"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP8"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "JUMPI"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "REVERT"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "JUMPDEST"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "2C6"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "GAS"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "SUB"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "CALL"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "ISZERO"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "JUMPI"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "REVERT"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "JUMPDEST"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MLOAD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "DUP1"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "MLOAD"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "SWAP1"
										},
										{
											"begin": 12203,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12196,
											"end": 12261,
											"name": "SWAP1"
										},
										{
											"begin": 12196,
											"end": 12261,
											"name": "POP"
										},
										{
											"begin": 12196,
											"end": 12261,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 12196,
											"end": 12261,
											"name": "JUMP"
										},
										{
											"begin": 12166,
											"end": 12343,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 12166,
											"end": 12343,
											"name": "JUMPDEST"
										},
										{
											"begin": 12299,
											"end": 12332,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 12315,
											"end": 12321,
											"name": "DUP4"
										},
										{
											"begin": 12323,
											"end": 12331,
											"name": "DUP4"
										},
										{
											"begin": 12299,
											"end": 12314,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 12299,
											"end": 12332,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12299,
											"end": 12332,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 12299,
											"end": 12332,
											"name": "JUMPDEST"
										},
										{
											"begin": 12292,
											"end": 12332,
											"name": "SWAP1"
										},
										{
											"begin": 12292,
											"end": 12332,
											"name": "POP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMPDEST"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP3"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "SWAP2"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "POP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "POP"
										},
										{
											"begin": 12062,
											"end": 12349,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "SLOAD"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 3004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "JUMPDEST"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "MSTORE"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "MSTORE"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "KECCAK256"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP2"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "POP"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SLOAD"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "EXP"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "SWAP1"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DIV"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "AND"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "DUP2"
										},
										{
											"begin": 8380,
											"end": 8426,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 8690,
											"end": 8695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8673,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8674,
											"end": 8686,
											"name": "DUP4"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "AND"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "AND"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "DUP2"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "MSTORE"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "ADD"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "DUP2"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "MSTORE"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "ADD"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "KECCAK256"
										},
										{
											"begin": 8660,
											"end": 8687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "EXP"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "DUP2"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "SLOAD"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "DUP2"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "MUL"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "NOT"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "AND"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "DUP4"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "ISZERO"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "ISZERO"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "MUL"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "OR"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "SWAP1"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "SSTORE"
										},
										{
											"begin": 8660,
											"end": 8695,
											"name": "POP"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "PUSH",
											"value": "D7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
										},
										{
											"begin": 8722,
											"end": 8734,
											"name": "DUP2"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "MLOAD"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "DUP1"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "DUP3"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "AND"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "AND"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "DUP2"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "MSTORE"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "ADD"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "SWAP2"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "POP"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "POP"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "MLOAD"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "DUP1"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "SWAP2"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "SUB"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "SWAP1"
										},
										{
											"begin": 8705,
											"end": 8735,
											"name": "LOG1"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "POP"
										},
										{
											"begin": 8585,
											"end": 8742,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "JUMPDEST"
										},
										{
											"begin": 4684,
											"end": 4694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "DUP2"
										},
										{
											"begin": 4652,
											"end": 4694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMPDEST"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "AND"
										},
										{
											"begin": 1746,
											"end": 1754,
											"name": "DUP2"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "AND"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "EQ"
										},
										{
											"begin": 1746,
											"end": 1768,
											"name": "ISZERO"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "ISZERO"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "JUMPI"
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1789,
											"name": "DUP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "EXP"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP2"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SLOAD"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP2"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MUL"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "NOT"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "AND"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "DUP4"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "AND"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "MUL"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "OR"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "SSTORE"
										},
										{
											"begin": 1784,
											"end": 1800,
											"name": "POP"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 1742,
											"end": 1811,
											"name": "JUMPDEST"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "POP"
										},
										{
											"begin": 1670,
											"end": 1817,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "JUMPDEST"
										},
										{
											"begin": 8879,
											"end": 8894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DUP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "EXP"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "SWAP1"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "DIV"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1483,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "ISZERO"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 1456,
											"end": 1484,
											"name": "JUMPDEST"
										},
										{
											"begin": 8837,
											"end": 8850,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8867,
											"name": "DUP4"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "MSTORE"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "ADD"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "SWAP1"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "DUP2"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "MSTORE"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "ADD"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "KECCAK256"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "SWAP1"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "SLOAD"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "SWAP1"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "EXP"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "SWAP1"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "DIV"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8837,
											"end": 8868,
											"name": "AND"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "ISZERO"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "ISZERO"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "JUMPI"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "DUP1"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "REVERT"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 8829,
											"end": 8869,
											"name": "JUMPDEST"
										},
										{
											"begin": 8897,
											"end": 8924,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "DUP3"
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 8897,
											"end": 8924,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8897,
											"end": 8924,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 8897,
											"end": 8924,
											"name": "JUMPDEST"
										},
										{
											"begin": 8879,
											"end": 8924,
											"name": "SWAP1"
										},
										{
											"begin": 8879,
											"end": 8924,
											"name": "POP"
										},
										{
											"begin": 8963,
											"end": 8964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8942,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8959,
											"name": "DUP5"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "AND"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "AND"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "DUP2"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "MSTORE"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "ADD"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "SWAP1"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "DUP2"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "MSTORE"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "ADD"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8960,
											"name": "KECCAK256"
										},
										{
											"begin": 8934,
											"end": 8964,
											"name": "DUP2"
										},
										{
											"begin": 8934,
											"end": 8964,
											"name": "SWAP1"
										},
										{
											"begin": 8934,
											"end": 8964,
											"name": "SSTORE"
										},
										{
											"begin": 8934,
											"end": 8964,
											"name": "POP"
										},
										{
											"begin": 8990,
											"end": 9000,
											"name": "DUP1"
										},
										{
											"begin": 8974,
											"end": 8986,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8974,
											"end": 8986,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "DUP3"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "DUP3"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "SLOAD"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "SUB"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "SWAP3"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "POP"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "POP"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "DUP2"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "SWAP1"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "SSTORE"
										},
										{
											"begin": 8974,
											"end": 9000,
											"name": "POP"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "PUSH",
											"value": "61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
										},
										{
											"begin": 9030,
											"end": 9046,
											"name": "DUP3"
										},
										{
											"begin": 9048,
											"end": 9058,
											"name": "DUP3"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "MLOAD"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "DUP1"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "DUP4"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "AND"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "AND"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "DUP2"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "MSTORE"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "ADD"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "DUP3"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "DUP2"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "MSTORE"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "ADD"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "SWAP3"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "POP"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "POP"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "POP"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "MLOAD"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "DUP1"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "SWAP2"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "SUB"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "SWAP1"
										},
										{
											"begin": 9010,
											"end": 9059,
											"name": "LOG1"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "POP"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "POP"
										},
										{
											"begin": 8748,
											"end": 9066,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6096,
											"end": 6659,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 6096,
											"end": 6659,
											"name": "JUMPDEST"
										},
										{
											"begin": 6167,
											"end": 6173,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3187,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "SWAP1"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "POP"
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "LT"
										},
										{
											"begin": 3163,
											"end": 3192,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPI"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "REVERT"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPDEST"
										},
										{
											"begin": 6511,
											"end": 6512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6507,
											"name": "DUP3"
										},
										{
											"begin": 6501,
											"end": 6512,
											"name": "EQ"
										},
										{
											"begin": 6501,
											"end": 6512,
											"name": "ISZERO"
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "DUP1"
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "ISZERO"
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "JUMPI"
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "POP"
										},
										{
											"begin": 6551,
											"end": 6552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6525,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6536,
											"name": "CALLER"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "AND"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "AND"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "DUP2"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "MSTORE"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "ADD"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "SWAP1"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "DUP2"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "MSTORE"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "ADD"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6537,
											"name": "KECCAK256"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6546,
											"name": "DUP6"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "AND"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "AND"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "DUP2"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "MSTORE"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "ADD"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "SWAP1"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "DUP2"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "MSTORE"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "ADD"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "KECCAK256"
										},
										{
											"begin": 6518,
											"end": 6547,
											"name": "SLOAD"
										},
										{
											"begin": 6518,
											"end": 6552,
											"name": "EQ"
										},
										{
											"begin": 6518,
											"end": 6552,
											"name": "ISZERO"
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 6500,
											"end": 6553,
											"name": "JUMPDEST"
										},
										{
											"begin": 6498,
											"end": 6554,
											"name": "ISZERO"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "ISZERO"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "ISZERO"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "JUMPI"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "DUP1"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "REVERT"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 6490,
											"end": 6555,
											"name": "JUMPDEST"
										},
										{
											"begin": 6598,
											"end": 6604,
											"name": "DUP2"
										},
										{
											"begin": 6566,
											"end": 6573,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6584,
											"name": "CALLER"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "AND"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "AND"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "MSTORE"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "ADD"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "SWAP1"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "MSTORE"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "ADD"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6585,
											"name": "KECCAK256"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6586,
											"end": 6594,
											"name": "DUP6"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "AND"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "AND"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "DUP2"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "MSTORE"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "ADD"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "SWAP1"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "DUP2"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "MSTORE"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "ADD"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "KECCAK256"
										},
										{
											"begin": 6566,
											"end": 6604,
											"name": "DUP2"
										},
										{
											"begin": 6566,
											"end": 6604,
											"name": "SWAP1"
										},
										{
											"begin": 6566,
											"end": 6604,
											"name": "SSTORE"
										},
										{
											"begin": 6566,
											"end": 6604,
											"name": "POP"
										},
										{
											"begin": 6635,
											"end": 6643,
											"name": "DUP3"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "AND"
										},
										{
											"begin": 6623,
											"end": 6633,
											"name": "CALLER"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "AND"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP5"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "MLOAD"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "DUP1"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "DUP3"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "DUP2"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "MSTORE"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "ADD"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "SWAP2"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "POP"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "POP"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "MLOAD"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "DUP1"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "SWAP2"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "SUB"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "SWAP1"
										},
										{
											"begin": 6614,
											"end": 6652,
											"name": "LOG3"
										},
										{
											"begin": 6096,
											"end": 6659,
											"name": "POP"
										},
										{
											"begin": 6096,
											"end": 6659,
											"name": "POP"
										},
										{
											"begin": 6096,
											"end": 6659,
											"name": "POP"
										},
										{
											"begin": 6096,
											"end": 6659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "JUMPDEST"
										},
										{
											"begin": 5080,
											"end": 5094,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 5534,
											"end": 5549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5068,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3187,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "SWAP1"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "POP"
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "LT"
										},
										{
											"begin": 3163,
											"end": 3192,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPI"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "REVERT"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPDEST"
										},
										{
											"begin": 5097,
											"end": 5104,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5105,
											"end": 5110,
											"name": "DUP9"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "AND"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "AND"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "DUP2"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "MSTORE"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "ADD"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "SWAP1"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "DUP2"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "MSTORE"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "ADD"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5111,
											"name": "KECCAK256"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5122,
											"name": "CALLER"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "AND"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "AND"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "DUP2"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "MSTORE"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "ADD"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "SWAP1"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "DUP2"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "MSTORE"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "ADD"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "KECCAK256"
										},
										{
											"begin": 5097,
											"end": 5123,
											"name": "SLOAD"
										},
										{
											"begin": 5080,
											"end": 5123,
											"name": "SWAP4"
										},
										{
											"begin": 5080,
											"end": 5123,
											"name": "POP"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 5334,
											"end": 5339,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 5312,
											"end": 5327,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5312,
											"end": 5327,
											"name": "SLOAD"
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP9"
										},
										{
											"begin": 5301,
											"end": 5311,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 5301,
											"end": 5311,
											"name": "SWAP1"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "SWAP2"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "SWAP1"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "AND"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 5301,
											"end": 5328,
											"name": "JUMPDEST"
										},
										{
											"begin": 5300,
											"end": 5333,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 5300,
											"end": 5333,
											"name": "SWAP1"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "SWAP2"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "SWAP1"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "AND"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 5300,
											"end": 5340,
											"name": "JUMPDEST"
										},
										{
											"begin": 5289,
											"end": 5340,
											"name": "SWAP3"
										},
										{
											"begin": 5289,
											"end": 5340,
											"name": "POP"
										},
										{
											"begin": 5360,
											"end": 5370,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5360,
											"end": 5370,
											"name": "SLOAD"
										},
										{
											"begin": 5354,
											"end": 5357,
											"name": "DUP4"
										},
										{
											"begin": 5354,
											"end": 5370,
											"name": "GT"
										},
										{
											"begin": 5350,
											"end": 5413,
											"name": "ISZERO"
										},
										{
											"begin": 5350,
											"end": 5413,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 5350,
											"end": 5413,
											"name": "JUMPI"
										},
										{
											"begin": 5392,
											"end": 5402,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5392,
											"end": 5402,
											"name": "SLOAD"
										},
										{
											"begin": 5386,
											"end": 5402,
											"name": "SWAP3"
										},
										{
											"begin": 5386,
											"end": 5402,
											"name": "POP"
										},
										{
											"begin": 5350,
											"end": 5413,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 5350,
											"end": 5413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4684,
											"end": 4694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5426,
											"end": 5436,
											"name": "DUP5"
										},
										{
											"begin": 5426,
											"end": 5447,
											"name": "LT"
										},
										{
											"begin": 5422,
											"end": 5525,
											"name": "ISZERO"
										},
										{
											"begin": 5422,
											"end": 5525,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 5422,
											"end": 5525,
											"name": "JUMPI"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP6"
										},
										{
											"begin": 5492,
											"end": 5502,
											"name": "DUP6"
										},
										{
											"begin": 5492,
											"end": 5506,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5492,
											"end": 5506,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "SWAP2"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "AND"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 5492,
											"end": 5514,
											"name": "JUMPDEST"
										},
										{
											"begin": 5463,
											"end": 5470,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5476,
											"name": "DUP10"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "AND"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "AND"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "DUP2"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "MSTORE"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "ADD"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "SWAP1"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "DUP2"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "MSTORE"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "ADD"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5477,
											"name": "KECCAK256"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "CALLER"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "AND"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "AND"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "DUP2"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "MSTORE"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "ADD"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "SWAP1"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "DUP2"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "MSTORE"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "ADD"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5489,
											"name": "KECCAK256"
										},
										{
											"begin": 5463,
											"end": 5514,
											"name": "DUP2"
										},
										{
											"begin": 5463,
											"end": 5514,
											"name": "SWAP1"
										},
										{
											"begin": 5463,
											"end": 5514,
											"name": "SSTORE"
										},
										{
											"begin": 5463,
											"end": 5514,
											"name": "POP"
										},
										{
											"begin": 5422,
											"end": 5525,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 5422,
											"end": 5525,
											"name": "JUMPDEST"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 5563,
											"end": 5566,
											"name": "DUP4"
										},
										{
											"begin": 5552,
											"end": 5558,
											"name": "DUP7"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5552,
											"end": 5562,
											"name": "SWAP1"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "SWAP2"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "SWAP1"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "AND"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 5552,
											"end": 5567,
											"name": "JUMPDEST"
										},
										{
											"begin": 5534,
											"end": 5567,
											"name": "SWAP2"
										},
										{
											"begin": 5534,
											"end": 5567,
											"name": "POP"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 5615,
											"end": 5621,
											"name": "DUP6"
										},
										{
											"begin": 5595,
											"end": 5603,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5604,
											"end": 5609,
											"name": "DUP11"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "AND"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "AND"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "DUP2"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "MSTORE"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "ADD"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "SWAP1"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "DUP2"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "MSTORE"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "ADD"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "KECCAK256"
										},
										{
											"begin": 5595,
											"end": 5610,
											"name": "SLOAD"
										},
										{
											"begin": 5595,
											"end": 5614,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 5595,
											"end": 5614,
											"name": "SWAP1"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "AND"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 5595,
											"end": 5622,
											"name": "JUMPDEST"
										},
										{
											"begin": 5577,
											"end": 5585,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5591,
											"name": "DUP10"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "AND"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "AND"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "DUP2"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "MSTORE"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "ADD"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "SWAP1"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "DUP2"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "MSTORE"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "ADD"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5592,
											"name": "KECCAK256"
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "SSTORE"
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5666,
											"end": 5676,
											"name": "DUP3"
										},
										{
											"begin": 5648,
											"end": 5656,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5657,
											"end": 5660,
											"name": "DUP10"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "AND"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "AND"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "DUP2"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "MSTORE"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "ADD"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "SWAP1"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "DUP2"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "MSTORE"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "ADD"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "KECCAK256"
										},
										{
											"begin": 5648,
											"end": 5661,
											"name": "SLOAD"
										},
										{
											"begin": 5648,
											"end": 5665,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5648,
											"end": 5665,
											"name": "SWAP1"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "SWAP2"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "SWAP1"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "AND"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5648,
											"end": 5677,
											"name": "JUMPDEST"
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5644,
											"name": "DUP9"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "AND"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "AND"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "DUP2"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "MSTORE"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "ADD"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "DUP2"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "MSTORE"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "ADD"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "KECCAK256"
										},
										{
											"begin": 5632,
											"end": 5677,
											"name": "DUP2"
										},
										{
											"begin": 5632,
											"end": 5677,
											"name": "SWAP1"
										},
										{
											"begin": 5632,
											"end": 5677,
											"name": "SSTORE"
										},
										{
											"begin": 5632,
											"end": 5677,
											"name": "POP"
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5694,
											"name": "DUP4"
										},
										{
											"begin": 5691,
											"end": 5698,
											"name": "GT"
										},
										{
											"begin": 5687,
											"end": 5808,
											"name": "ISZERO"
										},
										{
											"begin": 5687,
											"end": 5808,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 5687,
											"end": 5808,
											"name": "JUMPI"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 5752,
											"end": 5755,
											"name": "DUP4"
										},
										{
											"begin": 5732,
											"end": 5740,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "DUP1"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "SWAP1"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "SLOAD"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "SWAP1"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "EXP"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "SWAP1"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "DIV"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5746,
											"name": "AND"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "AND"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "AND"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "DUP2"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "MSTORE"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "ADD"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "DUP2"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "MSTORE"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "ADD"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "KECCAK256"
										},
										{
											"begin": 5732,
											"end": 5747,
											"name": "SLOAD"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "SWAP2"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "AND"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 5732,
											"end": 5756,
											"name": "JUMPDEST"
										},
										{
											"begin": 5714,
											"end": 5722,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP1"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "SWAP1"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "SLOAD"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "SWAP1"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "EXP"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "SWAP1"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DIV"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "AND"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "AND"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "AND"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "MSTORE"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "ADD"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "MSTORE"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "ADD"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5714,
											"end": 5729,
											"name": "KECCAK256"
										},
										{
											"begin": 5714,
											"end": 5756,
											"name": "DUP2"
										},
										{
											"begin": 5714,
											"end": 5756,
											"name": "SWAP1"
										},
										{
											"begin": 5714,
											"end": 5756,
											"name": "SSTORE"
										},
										{
											"begin": 5714,
											"end": 5756,
											"name": "POP"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "DUP1"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "SWAP1"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "SLOAD"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "SWAP1"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "EXP"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "SWAP1"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "DIV"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "AND"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "AND"
										},
										{
											"begin": 5779,
											"end": 5784,
											"name": "DUP8"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "AND"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5793,
											"end": 5796,
											"name": "DUP6"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "MLOAD"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "DUP3"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "DUP2"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "MSTORE"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "ADD"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "SWAP2"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "POP"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "MLOAD"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "DUP1"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "SWAP2"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "SUB"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "SWAP1"
										},
										{
											"begin": 5770,
											"end": 5797,
											"name": "LOG3"
										},
										{
											"begin": 5687,
											"end": 5808,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 5687,
											"end": 5808,
											"name": "JUMPDEST"
										},
										{
											"begin": 5833,
											"end": 5836,
											"name": "DUP6"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "AND"
										},
										{
											"begin": 5826,
											"end": 5831,
											"name": "DUP8"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "AND"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5838,
											"end": 5848,
											"name": "DUP5"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "MLOAD"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "DUP3"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "MSTORE"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "MLOAD"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "SUB"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5849,
											"name": "LOG3"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 5856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4148,
											"end": 4262,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 4148,
											"end": 4262,
											"name": "JUMPDEST"
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4247,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4248,
											"end": 4254,
											"name": "DUP4"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "AND"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "AND"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "DUP2"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "MSTORE"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "SWAP1"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "DUP2"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "MSTORE"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "ADD"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "KECCAK256"
										},
										{
											"begin": 4239,
											"end": 4255,
											"name": "SLOAD"
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "SWAP1"
										},
										{
											"begin": 4232,
											"end": 4255,
											"name": "POP"
										},
										{
											"begin": 4148,
											"end": 4262,
											"name": "SWAP2"
										},
										{
											"begin": 4148,
											"end": 4262,
											"name": "SWAP1"
										},
										{
											"begin": 4148,
											"end": 4262,
											"name": "POP"
										},
										{
											"begin": 4148,
											"end": 4262,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "JUMPDEST"
										},
										{
											"begin": 3462,
											"end": 3470,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3610,
											"name": "DUP1"
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3191,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3187,
											"name": "DUP2"
										},
										{
											"begin": 3183,
											"end": 3191,
											"name": "ADD"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3173,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "SWAP1"
										},
										{
											"begin": 3165,
											"end": 3180,
											"name": "POP"
										},
										{
											"begin": 3165,
											"end": 3191,
											"name": "LT"
										},
										{
											"begin": 3163,
											"end": 3192,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPI"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "REVERT"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 3155,
											"end": 3193,
											"name": "JUMPDEST"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 3507,
											"end": 3512,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3485,
											"end": 3500,
											"name": "SLOAD"
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "DUP8"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 3474,
											"end": 3484,
											"name": "SWAP1"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "SWAP2"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "SWAP1"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "AND"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "JUMPDEST"
										},
										{
											"begin": 3473,
											"end": 3506,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 3473,
											"end": 3506,
											"name": "SWAP1"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "SWAP2"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "SWAP1"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "AND"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 3473,
											"end": 3513,
											"name": "JUMPDEST"
										},
										{
											"begin": 3462,
											"end": 3513,
											"name": "SWAP3"
										},
										{
											"begin": 3462,
											"end": 3513,
											"name": "POP"
										},
										{
											"begin": 3533,
											"end": 3543,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3533,
											"end": 3543,
											"name": "SLOAD"
										},
										{
											"begin": 3527,
											"end": 3530,
											"name": "DUP4"
										},
										{
											"begin": 3527,
											"end": 3543,
											"name": "GT"
										},
										{
											"begin": 3523,
											"end": 3586,
											"name": "ISZERO"
										},
										{
											"begin": 3523,
											"end": 3586,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 3523,
											"end": 3586,
											"name": "JUMPI"
										},
										{
											"begin": 3565,
											"end": 3575,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3575,
											"name": "SLOAD"
										},
										{
											"begin": 3559,
											"end": 3575,
											"name": "SWAP3"
										},
										{
											"begin": 3559,
											"end": 3575,
											"name": "POP"
										},
										{
											"begin": 3523,
											"end": 3586,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 3523,
											"end": 3586,
											"name": "JUMPDEST"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 3624,
											"end": 3627,
											"name": "DUP4"
										},
										{
											"begin": 3613,
											"end": 3619,
											"name": "DUP6"
										},
										{
											"begin": 3613,
											"end": 3623,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3613,
											"end": 3623,
											"name": "SWAP1"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "SWAP2"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "SWAP1"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "AND"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 3613,
											"end": 3628,
											"name": "JUMPDEST"
										},
										{
											"begin": 3595,
											"end": 3628,
											"name": "SWAP2"
										},
										{
											"begin": 3595,
											"end": 3628,
											"name": "POP"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 3686,
											"end": 3692,
											"name": "DUP5"
										},
										{
											"begin": 3661,
											"end": 3669,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3680,
											"name": "CALLER"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "AND"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "AND"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "DUP2"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "MSTORE"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "ADD"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "SWAP1"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "DUP2"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "MSTORE"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "ADD"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "KECCAK256"
										},
										{
											"begin": 3661,
											"end": 3681,
											"name": "SLOAD"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 3661,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "SWAP2"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "SWAP1"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "AND"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 3661,
											"end": 3693,
											"name": "JUMPDEST"
										},
										{
											"begin": 3638,
											"end": 3646,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3657,
											"name": "CALLER"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "AND"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "AND"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "DUP2"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "MSTORE"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "ADD"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "SWAP1"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "DUP2"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "MSTORE"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "ADD"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3658,
											"name": "KECCAK256"
										},
										{
											"begin": 3638,
											"end": 3693,
											"name": "DUP2"
										},
										{
											"begin": 3638,
											"end": 3693,
											"name": "SWAP1"
										},
										{
											"begin": 3638,
											"end": 3693,
											"name": "SSTORE"
										},
										{
											"begin": 3638,
											"end": 3693,
											"name": "POP"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 3737,
											"end": 3747,
											"name": "DUP3"
										},
										{
											"begin": 3719,
											"end": 3727,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP9"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "AND"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "AND"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "DUP2"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "MSTORE"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "ADD"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "SWAP1"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "DUP2"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "MSTORE"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "ADD"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "KECCAK256"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "SLOAD"
										},
										{
											"begin": 3719,
											"end": 3736,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 3719,
											"end": 3736,
											"name": "SWAP1"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "SWAP2"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "SWAP1"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "AND"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 3719,
											"end": 3748,
											"name": "JUMPDEST"
										},
										{
											"begin": 3703,
											"end": 3711,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3715,
											"name": "DUP8"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "AND"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "AND"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "DUP2"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "MSTORE"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "ADD"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "DUP2"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "MSTORE"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "ADD"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3716,
											"name": "KECCAK256"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "DUP2"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "SWAP1"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "SSTORE"
										},
										{
											"begin": 3703,
											"end": 3748,
											"name": "POP"
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3765,
											"name": "DUP4"
										},
										{
											"begin": 3762,
											"end": 3769,
											"name": "GT"
										},
										{
											"begin": 3758,
											"end": 3884,
											"name": "ISZERO"
										},
										{
											"begin": 3758,
											"end": 3884,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 3758,
											"end": 3884,
											"name": "JUMPI"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 3823,
											"end": 3826,
											"name": "DUP4"
										},
										{
											"begin": 3803,
											"end": 3811,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "DUP1"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "SWAP1"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "SLOAD"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "SWAP1"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "EXP"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "SWAP1"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "DIV"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3812,
											"end": 3817,
											"name": "AND"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "AND"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "AND"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "DUP2"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "MSTORE"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "ADD"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "SWAP1"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "DUP2"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "MSTORE"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "ADD"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "KECCAK256"
										},
										{
											"begin": 3803,
											"end": 3818,
											"name": "SLOAD"
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "SWAP1"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "SWAP2"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "SWAP1"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "AND"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 3803,
											"end": 3827,
											"name": "JUMPDEST"
										},
										{
											"begin": 3785,
											"end": 3793,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "DUP1"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "SWAP1"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "SLOAD"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "SWAP1"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "EXP"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "SWAP1"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "DIV"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3794,
											"end": 3799,
											"name": "AND"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "AND"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "AND"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "MSTORE"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "ADD"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "KECCAK256"
										},
										{
											"begin": 3785,
											"end": 3827,
											"name": "DUP2"
										},
										{
											"begin": 3785,
											"end": 3827,
											"name": "SWAP1"
										},
										{
											"begin": 3785,
											"end": 3827,
											"name": "SSTORE"
										},
										{
											"begin": 3785,
											"end": 3827,
											"name": "POP"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "DUP1"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "SLOAD"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "EXP"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "DIV"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3862,
											"end": 3867,
											"name": "AND"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "AND"
										},
										{
											"begin": 3850,
											"end": 3860,
											"name": "CALLER"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "AND"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "DUP6"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "MLOAD"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "DUP1"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "DUP3"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "DUP2"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "MSTORE"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "ADD"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "SWAP2"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "POP"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "POP"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "MLOAD"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "DUP1"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "SWAP2"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "SUB"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "SWAP1"
										},
										{
											"begin": 3841,
											"end": 3873,
											"name": "LOG3"
										},
										{
											"begin": 3758,
											"end": 3884,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 3758,
											"end": 3884,
											"name": "JUMPDEST"
										},
										{
											"begin": 3914,
											"end": 3917,
											"name": "DUP5"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "AND"
										},
										{
											"begin": 3902,
											"end": 3912,
											"name": "CALLER"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "AND"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3919,
											"end": 3929,
											"name": "DUP5"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "MLOAD"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "DUP1"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "DUP3"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "DUP2"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "MSTORE"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "ADD"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "SWAP2"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "MLOAD"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "DUP1"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "SWAP2"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "SUB"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "SWAP1"
										},
										{
											"begin": 3893,
											"end": 3930,
											"name": "LOG3"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3377,
											"end": 3937,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "JUMPDEST"
										},
										{
											"begin": 196,
											"end": 203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 269,
											"end": 278,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 219,
											"end": 220,
											"name": "DUP5"
										},
										{
											"begin": 219,
											"end": 225,
											"name": "EQ"
										},
										{
											"begin": 215,
											"end": 260,
											"name": "ISZERO"
										},
										{
											"begin": 215,
											"end": 260,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 215,
											"end": 260,
											"name": "JUMPI"
										},
										{
											"begin": 248,
											"end": 249,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 241,
											"end": 249,
											"name": "SWAP2"
										},
										{
											"begin": 241,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 241,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 241,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 215,
											"end": 260,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 215,
											"end": 260,
											"name": "JUMPDEST"
										},
										{
											"begin": 285,
											"end": 286,
											"name": "DUP3"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "DUP5"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "MUL"
										},
										{
											"begin": 269,
											"end": 286,
											"name": "SWAP1"
										},
										{
											"begin": 269,
											"end": 286,
											"name": "POP"
										},
										{
											"begin": 312,
											"end": 313,
											"name": "DUP3"
										},
										{
											"begin": 307,
											"end": 308,
											"name": "DUP5"
										},
										{
											"begin": 303,
											"end": 304,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "JUMPI"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "INVALID"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 308,
											"name": "DIV"
										},
										{
											"begin": 303,
											"end": 313,
											"name": "EQ"
										},
										{
											"begin": 296,
											"end": 314,
											"name": "ISZERO"
										},
										{
											"begin": 296,
											"end": 314,
											"name": "ISZERO"
										},
										{
											"begin": 296,
											"end": 314,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 296,
											"end": 314,
											"name": "JUMPI"
										},
										{
											"begin": 296,
											"end": 314,
											"name": "INVALID"
										},
										{
											"begin": 296,
											"end": 314,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 296,
											"end": 314,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 324,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 324,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "JUMPDEST"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "POP"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "SWAP3"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "SWAP2"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "POP"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "POP"
										},
										{
											"begin": 138,
											"end": 339,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6984,
											"end": 7127,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 6984,
											"end": 7127,
											"name": "JUMPDEST"
										},
										{
											"begin": 7062,
											"end": 7076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7102,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7103,
											"end": 7109,
											"name": "DUP5"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "AND"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "AND"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "DUP2"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "MSTORE"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "ADD"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "SWAP1"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "DUP2"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "MSTORE"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "ADD"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7110,
											"name": "KECCAK256"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7119,
											"name": "DUP4"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "AND"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "AND"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "DUP2"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "MSTORE"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "ADD"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "SWAP1"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "DUP2"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "MSTORE"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "ADD"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "KECCAK256"
										},
										{
											"begin": 7095,
											"end": 7120,
											"name": "SLOAD"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "SWAP1"
										},
										{
											"begin": 7088,
											"end": 7120,
											"name": "POP"
										},
										{
											"begin": 6984,
											"end": 7127,
											"name": "SWAP3"
										},
										{
											"begin": 6984,
											"end": 7127,
											"name": "SWAP2"
										},
										{
											"begin": 6984,
											"end": 7127,
											"name": "POP"
										},
										{
											"begin": 6984,
											"end": 7127,
											"name": "POP"
										},
										{
											"begin": 6984,
											"end": 7127,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP1"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "DUP3"
										},
										{
											"begin": 512,
											"end": 513,
											"name": "DUP5"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP2"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "ISZERO"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "ISZERO"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "JUMPI"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "INVALID"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "JUMPDEST"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DIV"
										},
										{
											"begin": 500,
											"end": 517,
											"name": "SWAP1"
										},
										{
											"begin": 500,
											"end": 517,
											"name": "POP"
										},
										{
											"begin": 620,
											"end": 621,
											"name": "DUP1"
										},
										{
											"begin": 613,
											"end": 621,
											"name": "SWAP2"
										},
										{
											"begin": 613,
											"end": 621,
											"name": "POP"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "POP"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "SWAP3"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "SWAP2"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "POP"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "POP"
										},
										{
											"begin": 345,
											"end": 628,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 754,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 634,
											"end": 754,
											"name": "JUMPDEST"
										},
										{
											"begin": 692,
											"end": 699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 723,
											"end": 724,
											"name": "DUP3"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "DUP3"
										},
										{
											"begin": 718,
											"end": 724,
											"name": "GT"
										},
										{
											"begin": 718,
											"end": 724,
											"name": "ISZERO"
										},
										{
											"begin": 711,
											"end": 725,
											"name": "ISZERO"
										},
										{
											"begin": 711,
											"end": 725,
											"name": "ISZERO"
										},
										{
											"begin": 711,
											"end": 725,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 711,
											"end": 725,
											"name": "JUMPI"
										},
										{
											"begin": 711,
											"end": 725,
											"name": "INVALID"
										},
										{
											"begin": 711,
											"end": 725,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 711,
											"end": 725,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 747,
											"name": "DUP2"
										},
										{
											"begin": 742,
											"end": 743,
											"name": "DUP4"
										},
										{
											"begin": 742,
											"end": 747,
											"name": "SUB"
										},
										{
											"begin": 735,
											"end": 747,
											"name": "SWAP1"
										},
										{
											"begin": 735,
											"end": 747,
											"name": "POP"
										},
										{
											"begin": 634,
											"end": 754,
											"name": "SWAP3"
										},
										{
											"begin": 634,
											"end": 754,
											"name": "SWAP2"
										},
										{
											"begin": 634,
											"end": 754,
											"name": "POP"
										},
										{
											"begin": 634,
											"end": 754,
											"name": "POP"
										},
										{
											"begin": 634,
											"end": 754,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "JUMPDEST"
										},
										{
											"begin": 818,
											"end": 825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "DUP1"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "DUP3"
										},
										{
											"begin": 849,
											"end": 850,
											"name": "DUP5"
										},
										{
											"begin": 849,
											"end": 854,
											"name": "ADD"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "SWAP1"
										},
										{
											"begin": 837,
											"end": 854,
											"name": "POP"
										},
										{
											"begin": 876,
											"end": 877,
											"name": "DUP4"
										},
										{
											"begin": 871,
											"end": 872,
											"name": "DUP2"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "LT"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "ISZERO"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "JUMPI"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "INVALID"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 864,
											"end": 878,
											"name": "JUMPDEST"
										},
										{
											"begin": 895,
											"end": 896,
											"name": "DUP1"
										},
										{
											"begin": 888,
											"end": 896,
											"name": "SWAP2"
										},
										{
											"begin": 888,
											"end": 896,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "SWAP3"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "SWAP2"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "POP"
										},
										{
											"begin": 760,
											"end": 903,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"addBlackList(address)": "0ecb93c0",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"decimals()": "313ce567",
							"deprecate(address)": "0753c30c",
							"deprecated()": "0e136b19",
							"destroyBlackFunds(address)": "f3bdc228",
							"getBlackListStatus(address)": "59bf1abe",
							"getOwner()": "893d20e8",
							"isBlackListed(address)": "e47d6060",
							"issue(uint256)": "cc872b66",
							"maximumFee()": "35390714",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"redeem(uint256)": "db006a75",
							"removeBlackList(address)": "e4997dc5",
							"setParams(uint256,uint256)": "c0324c77",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"upgradedAddress()": "26976e3f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_upgradedAddress\",\"type\":\"address\"}],\"name\":\"deprecate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"deprecated\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_evilUser\",\"type\":\"address\"}],\"name\":\"addBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"upgradedAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maximumFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_maker\",\"type\":\"address\"}],\"name\":\"getBlackListStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowed\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newBasisPoints\",\"type\":\"uint256\"},{\"name\":\"newMaxFee\",\"type\":\"uint256\"}],\"name\":\"setParams\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"issue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeBlackList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_UINT\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blackListedUser\",\"type\":\"address\"}],\"name\":\"destroyBlackFunds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Issue\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"Deprecate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"feeBasisPoints\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"maxFee\",\"type\":\"uint256\"}],\"name\":\"Params\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_blackListedUser\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"DestroyedBlackFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedBlackList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"getBlackListStatus(address)\":{\"notice\":\"//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/StrangeUSDT.sol\":\"TetherToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StrangeUSDT.sol\":{\"keccak256\":\"0x7a58743de350f7a26433bc6e61660499154a993260c9a01298ce739616a33ac2\",\"urls\":[\"bzzr://d658ac300c1fe728c4aa4a0d50ca6bd59e9c0669675f1e3f06ff0df5d12a4cc2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"getBlackListStatus(address)": {
								"notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
							}
						}
					}
				},
				"UpgradedStandardToken": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maximumFee",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "allowed",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "balance",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "from",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveByLegacy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_UINT",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens than an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint representing the amount owned by the passed address."
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint the amount of tokens to be transferred"
								}
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MAX_UINT()": "e5b5019a",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"allowed(address,address)": "5c658165",
							"approve(address,uint256)": "095ea7b3",
							"approveByLegacy(address,address,uint256)": "aee92d33",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"basisPointsRate()": "dd644f72",
							"maximumFee()": "35390714",
							"owner()": "8da5cb5b",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferByLegacy(address,address,uint256)": "6e18980a",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromByLegacy(address,address,address,uint256)": "8b477adb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/StrangeUSDT.sol": {
				"ast": {
					"absolutePath": "contracts/StrangeUSDT.sol",
					"exportedSymbols": {
						"BasicToken": [
							347
						],
						"BlackList": [
							717
						],
						"ERC20": [
							205
						],
						"ERC20Basic": [
							169
						],
						"Ownable": [
							139
						],
						"Pausable": [
							603
						],
						"SafeMath": [
							97
						],
						"StandardToken": [
							546
						],
						"TetherToken": [
							1142
						],
						"UpgradedStandardToken": [
							749
						]
					},
					"id": 1143,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 97,
							"linearizedBaseContracts": [
								97
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "205:134:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "219:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "224:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "219:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 16,
												"nodeType": "IfStatement",
												"src": "215:45:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "227:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "248:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "241:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "269:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "281:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "269:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "303:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "307:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "303:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "312:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "303:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "296:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "296:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "296:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "331:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "324:8:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "151:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "162:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "150:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "195:9:0"
									},
									"scope": 97,
									"src": "138:201:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "412:216:0",
										"statements": [
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "500:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 43,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "500:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 48,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 45,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "512:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 46,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "516:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "512:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "500:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "620:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 50,
												"nodeType": "Return",
												"src": "613:8:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "358:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "369:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "357:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "403:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "402:9:0"
									},
									"scope": 97,
									"src": "345:283:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "701:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "718:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "723:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "711:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "711:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "711:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "742:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "746:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "742:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 60,
												"id": 70,
												"nodeType": "Return",
												"src": "735:12:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "647:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "658:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "646:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "692:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:9:0"
									},
									"scope": 97,
									"src": "634:120:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "827:76:0",
										"statements": [
											{
												"assignments": [
													82
												],
												"declarations": [
													{
														"constant": false,
														"id": 82,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "837:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 81,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "849:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 84,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "853:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "849:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "837:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "871:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "876:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "871:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 87,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "864:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "864:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "864:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 82,
													"src": "895:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 94,
												"nodeType": "Return",
												"src": "888:8:0"
											}
										]
									},
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "773:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "784:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "772:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "817:9:0"
									},
									"scope": 97,
									"src": "760:143:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1143,
							"src": "115:790:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 99,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 139,
									"src": "1120:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1120:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1300:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1310:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 103,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "1318:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1318:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1310:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1310:18:0"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Ownable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1290:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1300:0:0"
									},
									"scope": 139,
									"src": "1274:61:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1446:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "1464:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1464:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 113,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1478:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1464:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "1456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1456:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "1456:28:0"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "1494:1:0"
											}
										]
									},
									"id": 119,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1443:2:0"
									},
									"src": "1425:77:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "1732:85:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1746:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1766:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1758:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1758:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1746:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 136,
												"nodeType": "IfStatement",
												"src": "1742:69:0",
												"trueBody": {
													"id": 135,
													"nodeType": "Block",
													"src": "1770:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "1784:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 132,
																	"name": "newOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "1792:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1784:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 134,
															"nodeType": "ExpressionStatement",
															"src": "1784:16:0"
														}
													]
												}
											}
										]
									},
									"id": 138,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 124,
											"modifierName": {
												"argumentTypes": null,
												"id": 123,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "1722:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1722:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "1697:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1696:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:0:0"
									},
									"scope": 139,
									"src": "1670:147:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "1097:723:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 169,
							"linearizedBaseContracts": [
								169
							],
							"name": "ERC20Basic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 141,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 169,
									"src": "1975:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1975:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 146,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2025:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2053:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:6:0"
									},
									"scope": 169,
									"src": "2005:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 153,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2083:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2082:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "2121:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2120:6:0"
									},
									"scope": 169,
									"src": "2064:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 160,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2150:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2162:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2162:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2149:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2180:0:0"
									},
									"scope": 169,
									"src": "2132:49:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 168,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2201:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2223:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2243:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2200:54:0"
									},
									"src": "2186:69:0"
								}
							],
							"scope": 1143,
							"src": "1949:308:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 170,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2366:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "2366:10:0"
								}
							],
							"contractDependencies": [
								169
							],
							"contractKind": "contract",
							"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205,
								169
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 180,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2401:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2459:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2459:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2458:6:0"
									},
									"scope": 205,
									"src": "2383:82:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 189,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2492:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2506:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2518:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2518:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2491:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2536:0:0"
									},
									"scope": 205,
									"src": "2470:67:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 196,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2559:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2576:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2558:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2594:0:0"
									},
									"scope": 205,
									"src": "2542:53:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 204,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2615:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2663:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2614:60:0"
									},
									"src": "2600:75:0"
								}
							],
							"scope": 1143,
							"src": "2348:329:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 206,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "2792:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 207,
									"nodeType": "InheritanceSpecifier",
									"src": "2792:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 208,
										"name": "ERC20Basic",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 169,
										"src": "2801:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Basic_$169",
											"typeString": "contract ERC20Basic"
										}
									},
									"id": 209,
									"nodeType": "InheritanceSpecifier",
									"src": "2801:10:0"
								}
							],
							"contractDependencies": [
								139,
								169
							],
							"contractKind": "contract",
							"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347,
								169,
								139
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 212,
									"libraryName": {
										"contractScope": null,
										"id": 210,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 97,
										"src": "2824:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$97",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2818:24:0",
									"typeName": {
										"id": 211,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2837:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 216,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "2848:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 215,
										"keyType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2856:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2848:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 214,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2867:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 219,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "2973:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2973:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 218,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3003:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 222,
									"name": "maximumFee",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "3010:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "3010:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3035:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "3145:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3163:29:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 227,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1145,
																					"src": "3165:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "data",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3165:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_calldata_ptr",
																					"typeString": "bytes calldata"
																				}
																			},
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3165:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 230,
																				"name": "size",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "3183:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "34",
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3190:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "3183:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3165:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 234,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3164:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3155:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3155:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "3155:38:0"
											},
											{
												"id": 238,
												"nodeType": "PlaceholderStatement",
												"src": "3203:1:0"
											}
										]
									},
									"id": 240,
									"name": "onlyPayloadSize",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"name": "size",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "3134:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3134:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3133:11:0"
									},
									"src": "3109:102:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "3452:485:0",
										"statements": [
											{
												"assignments": [
													253
												],
												"declarations": [
													{
														"constant": false,
														"id": 253,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3462:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 252,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3462:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3507:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 256,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "3485:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 254,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 244,
																			"src": "3474:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "3474:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3474:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 258,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3473:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "3473:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3473:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3462:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 263,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3527:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 264,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "3533:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3527:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 271,
												"nodeType": "IfStatement",
												"src": "3523:63:0",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "3545:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 266,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "3559:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "3565:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3559:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "3559:16:0"
														}
													]
												}
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 334,
														"src": "3595:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 272,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3595:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 276,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3624:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 274,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3613:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "3613:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3613:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3595:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 279,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3638:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 282,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "3647:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3647:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3638:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 288,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3686:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3661:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 286,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 284,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "3670:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3670:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3661:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "3661:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3661:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3638:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3638:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 292,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3703:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 294,
														"indexExpression": {
															"argumentTypes": null,
															"id": 293,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3712:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3703:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 299,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "3737:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 295,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "3719:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 297,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 296,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "3728:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3719:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "3719:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3719:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3703:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "3703:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 303,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "3762:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3768:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 325,
												"nodeType": "IfStatement",
												"src": "3758:126:0",
												"trueBody": {
													"id": 324,
													"nodeType": "Block",
													"src": "3771:113:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 306,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "3785:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 307,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3794:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3785:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 313,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "3823:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 309,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "3803:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 311,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 310,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "3812:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3803:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "3803:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3803:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3785:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 316,
															"nodeType": "ExpressionStatement",
															"src": "3785:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "3850:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3850:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 320,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3862:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 321,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "3869:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 317,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "3841:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3841:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 323,
															"nodeType": "ExpressionStatement",
															"src": "3841:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 327,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "3902:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3902:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3914:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 330,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "3919:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "3893:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3893:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "3893:37:0"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3444:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3448:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3444:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 250,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "3428:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3428:23:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3395:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "3408:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3394:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3452:0:0"
									},
									"scope": 347,
									"src": "3377:560:0",
									"stateMutability": "nonpayable",
									"superFunction": 160,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4222:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 341,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4239:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 343,
													"indexExpression": {
														"argumentTypes": null,
														"id": 342,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "4248:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4239:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 344,
												"nodeType": "Return",
												"src": "4232:23:0"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4167:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4166:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4208:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4207:14:0"
									},
									"scope": 347,
									"src": "4148:114:0",
									"stateMutability": "view",
									"superFunction": 153,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "2769:1496:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 348,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "4559:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "4559:10:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 350,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 205,
										"src": "4571:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$205",
											"typeString": "contract ERC20"
										}
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "4571:5:0"
								}
							],
							"contractDependencies": [
								205,
								139,
								347,
								169
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
							"fullyImplemented": false,
							"id": 546,
							"linearizedBaseContracts": [
								546,
								205,
								347,
								169,
								139
							],
							"name": "StandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 357,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4584:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 356,
										"keyType": {
											"id": 352,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4593:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4584:46:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 355,
											"keyType": {
												"id": 353,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4613:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4604:25:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 354,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "4624:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 364,
									"name": "MAX_UINT",
									"nodeType": "VariableDeclaration",
									"scope": 546,
									"src": "4652:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 358,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "4652:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										},
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											},
											"id": 361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "32",
												"id": 359,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4684:1:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "323536",
												"id": 360,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "4687:3:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "4684:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "31",
											"id": 362,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4693:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4684:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "5070:786:0",
										"statements": [
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"name": "_allowance",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5080:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": null,
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 379,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "5097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 381,
														"indexExpression": {
															"argumentTypes": null,
															"id": 380,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5105:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5097:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 384,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 382,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "5112:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5112:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5097:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5080:43:0"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5289:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 396,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5334:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 390,
																			"name": "basisPointsRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "5312:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 388,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5301:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 34,
																		"src": "5301:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5301:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5300:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "5300:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5300:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5289:51:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 397,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5354:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 398,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "5360:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5354:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 405,
												"nodeType": "IfStatement",
												"src": "5350:63:0",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "5372:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 400,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5386:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "maximumFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "5392:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5386:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 403,
															"nodeType": "ExpressionStatement",
															"src": "5386:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 406,
														"name": "_allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "5426:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 407,
														"name": "MAX_UINT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5439:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5426:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 422,
												"nodeType": "IfStatement",
												"src": "5422:103:0",
												"trueBody": {
													"id": 421,
													"nodeType": "Block",
													"src": "5449:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 409,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 357,
																			"src": "5463:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 413,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 410,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "5471:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5463:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 414,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 411,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "5478:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5478:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5463:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 417,
																			"name": "_value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "5507:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 415,
																			"name": "_allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "5492:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "5492:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5492:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5463:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 420,
															"nodeType": "ExpressionStatement",
															"src": "5463:51:0"
														}
													]
												}
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"name": "sendAmount",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5534:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5534:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 427,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5563:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 425,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5552:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "5552:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5552:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5534:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 430,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5577:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 432,
														"indexExpression": {
															"argumentTypes": null,
															"id": 431,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5586:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5577:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 437,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "5615:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 433,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5595:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 435,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 434,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5604:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5595:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "5595:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5595:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5577:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "5577:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 441,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5632:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 443,
														"indexExpression": {
															"argumentTypes": null,
															"id": 442,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5641:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5632:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 448,
																"name": "sendAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5666:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 444,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "5648:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 446,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5657:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5648:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 96,
															"src": "5648:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5648:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5632:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "5632:45:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 452,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5691:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5697:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 473,
												"nodeType": "IfStatement",
												"src": "5687:121:0",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "5700:108:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 455,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5714:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 457,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 456,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5723:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5714:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 462,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 387,
																			"src": "5752:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 458,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "5732:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 460,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 459,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 99,
																				"src": "5741:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5732:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 96,
																		"src": "5732:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5732:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5714:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "5714:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 467,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "5779:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 468,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "5786:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 469,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "5793:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 466,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "5770:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5770:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5770:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "5826:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 476,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "5833:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 477,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "5838:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "5817:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5817:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "5817:32:0"
											}
										]
									},
									"id": 481,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5062:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5066:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "5062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_96_by_1",
														"typeString": "int_const 96"
													}
												}
											],
											"id": 376,
											"modifierName": {
												"argumentTypes": null,
												"id": 372,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "5046:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5046:23:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "4998:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5013:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "5026:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5026:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4997:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5070:0:0"
									},
									"scope": 546,
									"src": "4976:880:0",
									"stateMutability": "nonpayable",
									"superFunction": 189,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "6175:484:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6498:56:0",
															"subExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 494,
																						"name": "_value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 485,
																						"src": "6501:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6511:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6501:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 497,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6500:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 498,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 357,
																								"src": "6518:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 501,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 499,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1145,
																									"src": "6526:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 500,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "6526:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6518:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 503,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 502,
																							"name": "_spender",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 483,
																							"src": "6538:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6518:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "30",
																						"id": 504,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6551:1:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "6518:34:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 506,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6517:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "6500:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 508,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6499:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "6490:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6490:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6490:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 512,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6566:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 516,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 513,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "6574:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6574:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6566:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"id": 515,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6586:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6566:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 518,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "6598:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6566:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "6566:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1145,
																"src": "6623:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6623:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 524,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "6635:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 525,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "6645:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "6614:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6614:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "6614:38:0"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6167:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6171:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "6167:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 491,
											"modifierName": {
												"argumentTypes": null,
												"id": 487,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "6151:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6151:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6113:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "6131:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6112:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6175:0:0"
									},
									"scope": 546,
									"src": "6096:563:0",
									"stateMutability": "nonpayable",
									"superFunction": 196,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "7078:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 538,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "7095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 540,
														"indexExpression": {
															"argumentTypes": null,
															"id": 539,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "7103:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7095:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 542,
													"indexExpression": {
														"argumentTypes": null,
														"id": 541,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "7111:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7095:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 543,
												"nodeType": "Return",
												"src": "7088:32:0"
											}
										]
									},
									"id": 545,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7003:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7019:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7002:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7062:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7062:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7061:16:0"
									},
									"scope": 546,
									"src": "6984:143:0",
									"stateMutability": "view",
									"superFunction": 180,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "4533:2597:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 547,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "7267:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 548,
									"nodeType": "InheritanceSpecifier",
									"src": "7267:7:0"
								}
							],
							"contractDependencies": [
								139
							],
							"contractKind": "contract",
							"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
							"fullyImplemented": true,
							"id": 603,
							"linearizedBaseContracts": [
								603,
								139
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 550,
									"name": "Pause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7290:2:0"
									},
									"src": "7279:14:0"
								},
								{
									"anonymous": false,
									"id": 552,
									"name": "Unpause",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7309:2:0"
									},
									"src": "7296:16:0"
								},
								{
									"constant": false,
									"id": 555,
									"name": "paused",
									"nodeType": "VariableDeclaration",
									"scope": 603,
									"src": "7316:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 553,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "7316:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 554,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7337:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "7470:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7484:7:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 558,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "7485:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 557,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "7476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7476:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "7476:16:0"
											},
											{
												"id": 562,
												"nodeType": "PlaceholderStatement",
												"src": "7498:1:0"
											}
										]
									},
									"id": 564,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7467:2:0"
									},
									"src": "7445:59:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "7623:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 567,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "7637:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "7629:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7629:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "7629:15:0"
											},
											{
												"id": 570,
												"nodeType": "PlaceholderStatement",
												"src": "7650:1:0"
											}
										]
									},
									"id": 572,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7620:2:0"
									},
									"src": "7601:55:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "7783:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 579,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "7789:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7798:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7789:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "ExpressionStatement",
												"src": "7789:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "Pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "7808:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "7808:7:0"
											}
										]
									},
									"id": 587,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 575,
											"modifierName": {
												"argumentTypes": null,
												"id": 574,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "7752:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7752:9:0"
										},
										{
											"arguments": [],
											"id": 577,
											"modifierName": {
												"argumentTypes": null,
												"id": 576,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "7762:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7762:13:0"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7749:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7783:0:0"
									},
									"scope": 603,
									"src": "7735:85:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "7949:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 594,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "7955:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7964:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7955:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "7955:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 598,
														"name": "Unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "7975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7975:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "7975:9:0"
											}
										]
									},
									"id": 602,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 590,
											"modifierName": {
												"argumentTypes": null,
												"id": 589,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "7921:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7921:9:0"
										},
										{
											"arguments": [],
											"id": 592,
											"modifierName": {
												"argumentTypes": null,
												"id": 591,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 572,
												"src": "7931:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7931:10:0"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7918:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7949:0:0"
									},
									"scope": 603,
									"src": "7902:87:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "7246:745:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 604,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 139,
										"src": "8015:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$139",
											"typeString": "contract Ownable"
										}
									},
									"id": 605,
									"nodeType": "InheritanceSpecifier",
									"src": "8015:7:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 606,
										"name": "BasicToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 347,
										"src": "8024:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BasicToken_$347",
											"typeString": "contract BasicToken"
										}
									},
									"id": 607,
									"nodeType": "InheritanceSpecifier",
									"src": "8024:10:0"
								}
							],
							"contractDependencies": [
								139,
								347,
								169
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 717,
							"linearizedBaseContracts": [
								717,
								347,
								169,
								139
							],
							"name": "BlackList",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "8238:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 614,
														"name": "isBlackListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "8255:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 616,
													"indexExpression": {
														"argumentTypes": null,
														"id": 615,
														"name": "_maker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "8269:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8255:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 613,
												"id": 617,
												"nodeType": "Return",
												"src": "8248:28:0"
											}
										]
									},
									"id": 619,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getBlackListStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "_maker",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "8189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8188:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "8232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 611,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8231:6:0"
									},
									"scope": 717,
									"src": "8161:122:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "8345:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 624,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 99,
													"src": "8362:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 625,
												"nodeType": "Return",
												"src": "8355:12:0"
											}
										]
									},
									"id": 627,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8306:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "8336:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8335:9:0"
									},
									"scope": 717,
									"src": "8289:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 631,
									"name": "isBlackListed",
									"nodeType": "VariableDeclaration",
									"scope": 717,
									"src": "8380:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 630,
										"keyType": {
											"id": 628,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8389:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8380:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 629,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8400:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "8496:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 638,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "8506:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 640,
														"indexExpression": {
															"argumentTypes": null,
															"id": 639,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8520:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8506:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8533:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8506:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "8506:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 645,
															"name": "_evilUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "8562:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 644,
														"name": "AddedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "8547:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8547:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "8547:25:0"
											}
										]
									},
									"id": 649,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 636,
											"modifierName": {
												"argumentTypes": null,
												"id": 635,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8486:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8486:9:0"
										}
									],
									"name": "addBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "_evilUser",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8460:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8459:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8496:0:0"
									},
									"scope": 717,
									"src": "8437:142:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "8650:92:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "isBlackListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "8660:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8674:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8660:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8690:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8660:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "8660:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 663,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "8722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 662,
														"name": "RemovedBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "8705:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8705:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "8705:30:0"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 654,
											"modifierName": {
												"argumentTypes": null,
												"id": 653,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8640:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8640:9:0"
										}
									],
									"name": "removeBlackList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "8611:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8610:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8650:0:0"
									},
									"scope": 717,
									"src": "8585:157:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8819:247:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "isBlackListed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "8837:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 677,
															"indexExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "_blackListedUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "8851:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8837:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "8829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8829:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "8829:40:0"
											},
											{
												"assignments": [
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 681,
														"name": "dirtyFunds",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "8879:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 683,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8907:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 682,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															346
														],
														"referencedDeclaration": 346,
														"src": "8897:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8897:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8879:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 686,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8934:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 688,
														"indexExpression": {
															"argumentTypes": null,
															"id": 687,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "8943:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8934:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8963:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8934:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "8934:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 692,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "8974:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 693,
														"name": "dirtyFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8990:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8974:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "8974:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 697,
															"name": "_blackListedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "9030:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 698,
															"name": "dirtyFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "9048:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "DestroyedBlackFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "9010:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9010:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "9010:49:0"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 672,
											"modifierName": {
												"argumentTypes": null,
												"id": 671,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "8809:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "8809:9:0"
										}
									],
									"name": "destroyBlackFunds",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8775:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8819:0:0"
									},
									"scope": 717,
									"src": "8748:318:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 708,
									"name": "DestroyedBlackFunds",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"indexed": false,
												"name": "_blackListedUser",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "9098:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": false,
												"name": "_balance",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "9124:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9124:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9097:41:0"
									},
									"src": "9072:67:0"
								},
								{
									"anonymous": false,
									"id": 712,
									"name": "AddedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "9166:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9165:15:0"
									},
									"src": "9145:36:0"
								},
								{
									"anonymous": false,
									"id": 716,
									"name": "RemovedBlackList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "9210:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9209:15:0"
									},
									"src": "9187:38:0"
								}
							],
							"scope": 1143,
							"src": "7993:1235:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 718,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "9264:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 719,
									"nodeType": "InheritanceSpecifier",
									"src": "9264:13:0"
								}
							],
							"contractDependencies": [
								205,
								139,
								347,
								169,
								546
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 749,
							"linearizedBaseContracts": [
								749,
								546,
								205,
								347,
								169,
								139
							],
							"name": "UpgradedStandardToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"id": 728,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9430:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9444:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "9456:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9456:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9429:38:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9474:0:0"
									},
									"scope": 749,
									"src": "9404:71:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 739,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFromByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9510:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9540:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "9557:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9509:59:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9575:0:0"
									},
									"scope": 749,
									"src": "9480:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"id": 748,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveByLegacy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "9606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "9620:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "9637:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9637:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9605:43:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9655:0:0"
									},
									"scope": 749,
									"src": "9581:75:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1143,
							"src": "9230:428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 750,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 603,
										"src": "9684:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$603",
											"typeString": "contract Pausable"
										}
									},
									"id": 751,
									"nodeType": "InheritanceSpecifier",
									"src": "9684:8:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 752,
										"name": "StandardToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 546,
										"src": "9694:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_StandardToken_$546",
											"typeString": "contract StandardToken"
										}
									},
									"id": 753,
									"nodeType": "InheritanceSpecifier",
									"src": "9694:13:0"
								},
								{
									"arguments": [],
									"baseName": {
										"contractScope": null,
										"id": 754,
										"name": "BlackList",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 717,
										"src": "9709:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BlackList_$717",
											"typeString": "contract BlackList"
										}
									},
									"id": 755,
									"nodeType": "InheritanceSpecifier",
									"src": "9709:9:0"
								}
							],
							"contractDependencies": [
								205,
								139,
								347,
								169,
								546,
								603,
								717
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								717,
								546,
								205,
								347,
								169,
								603,
								139
							],
							"name": "TetherToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 757,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "9726:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 756,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "9726:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 759,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "9750:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string storage ref"
									},
									"typeName": {
										"id": 758,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "9750:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 761,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "9776:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "9776:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 763,
									"name": "upgradedAddress",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "9802:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 762,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9802:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 765,
									"name": "deprecated",
									"nodeType": "VariableDeclaration",
									"scope": 1142,
									"src": "9838:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 764,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "9838:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "10250:194:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 776,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10260:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 777,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10275:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10260:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "10260:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 780,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "10299:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 781,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "10306:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10299:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "10299:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 784,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "10321:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 785,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "10330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10321:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "10321:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 788,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10347:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 789,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "10358:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10347:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "10347:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 792,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "10377:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 794,
														"indexExpression": {
															"argumentTypes": null,
															"id": 793,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "10386:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10377:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 795,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "10395:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10377:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10377:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 798,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "10419:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10432:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "10419:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "10419:18:0"
											}
										]
									},
									"id": 803,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "TetherToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "_initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10176:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10176:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10197:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												},
												"typeName": {
													"id": 770,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string storage pointer"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "10227:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10175:67:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10250:0:0"
									},
									"scope": 1142,
									"src": "10155:289:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "10591:254:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10609:26:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 813,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "10610:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 816,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 814,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "10624:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "10624:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10610:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "10601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10601:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "10601:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 820,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "10650:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "10780:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 834,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10816:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 835,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "10821:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 832,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "10801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 334,
																	"src": "10801:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10801:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 811,
															"id": 837,
															"nodeType": "Return",
															"src": "10794:34:0"
														}
													]
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "10646:193:0",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "10662:112:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 825,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "10739:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10739:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 827,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "10751:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 828,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "10756:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 822,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "10705:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 821,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "10683:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10683:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 728,
																	"src": "10683:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10683:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 811,
															"id": 830,
															"nodeType": "Return",
															"src": "10676:87:0"
														}
													]
												}
											}
										]
									},
									"id": 841,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 810,
											"modifierName": {
												"argumentTypes": null,
												"id": 809,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "10577:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10577:13:0"
										}
									],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10544:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "10557:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10543:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10591:0:0"
									},
									"scope": 1142,
									"src": "10526:319:0",
									"stateMutability": "nonpayable",
									"superFunction": 334,
									"visibility": "public"
								},
								{
									"body": {
										"id": 881,
										"nodeType": "Block",
										"src": "11011:271:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "11029:21:0",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 853,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "11030:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 855,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 854,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "11044:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11030:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 852,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "11021:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11021:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "11021:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 859,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11065:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 879,
													"nodeType": "Block",
													"src": "11206:70:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 874,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11246:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 875,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "11253:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 876,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "11258:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 872,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11227:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 481,
																	"src": "11227:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11227:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 851,
															"id": 878,
															"nodeType": "Return",
															"src": "11220:45:0"
														}
													]
												},
												"id": 880,
												"nodeType": "IfStatement",
												"src": "11061:215:0",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "11077:123:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 864,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "11158:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11158:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 866,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "11170:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 867,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "11177:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 868,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "11182:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 861,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11120:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 860,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11098:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11098:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFromByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 739,
																	"src": "11098:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256) external"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11098:91:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 851,
															"id": 870,
															"nodeType": "Return",
															"src": "11091:98:0"
														}
													]
												}
											}
										]
									},
									"id": 882,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 850,
											"modifierName": {
												"argumentTypes": null,
												"id": 849,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 564,
												"src": "10997:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10997:13:0"
										}
									],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "10949:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "10964:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "10977:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10977:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10948:41:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11011:0:0"
									},
									"scope": 1142,
									"src": "10927:355:0",
									"stateMutability": "nonpayable",
									"superFunction": 481,
									"visibility": "public"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "11427:175:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 889,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11441:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "11544:52:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 900,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "11581:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 898,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11565:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11565:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11565:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 888,
															"id": 902,
															"nodeType": "Return",
															"src": "11558:27:0"
														}
													]
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "11437:159:0",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "11453:85:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 894,
																		"name": "who",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 884,
																		"src": "11523:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 891,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11496:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 890,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11474:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11474:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 346,
																	"src": "11474:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11474:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 888,
															"id": 896,
															"nodeType": "Return",
															"src": "11467:60:0"
														}
													]
												}
											}
										]
									},
									"id": 906,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"name": "who",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "11383:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11382:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "11421:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11420:6:0"
									},
									"scope": 1142,
									"src": "11364:238:0",
									"stateMutability": "view",
									"superFunction": 346,
									"visibility": "public"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "11763:217:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 918,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "11777:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "11911:63:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 932,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "11946:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 933,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "11956:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 930,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "11932:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 529,
																	"src": "11932:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11932:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 917,
															"id": 935,
															"nodeType": "Return",
															"src": "11925:38:0"
														}
													]
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "11773:201:0",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "11789:116:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 923,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "11865:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11865:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 925,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "11877:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 926,
																		"name": "_value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "11887:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 920,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "11832:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 919,
																			"name": "UpgradedStandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "11810:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
																				"typeString": "type(contract UpgradedStandardToken)"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11810:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
																			"typeString": "contract UpgradedStandardToken"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approveByLegacy",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 748,
																	"src": "11810:54:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11810:84:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"functionReturnParameters": 917,
															"id": 928,
															"nodeType": "Return",
															"src": "11803:91:0"
														}
													]
												}
											}
										]
									},
									"id": 939,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11755:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3332",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11759:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "11755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_64_by_1",
														"typeString": "int_const 64"
													}
												}
											],
											"id": 916,
											"modifierName": {
												"argumentTypes": null,
												"id": 912,
												"name": "onlyPayloadSize",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 240,
												"src": "11739:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11739:23:0"
										}
									],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "11701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "11719:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11700:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11763:0:0"
									},
									"scope": 1142,
									"src": "11684:296:0",
									"stateMutability": "nonpayable",
									"superFunction": 529,
									"visibility": "public"
								},
								{
									"body": {
										"id": 966,
										"nodeType": "Block",
										"src": "12156:193:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 948,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "12170:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 964,
													"nodeType": "Block",
													"src": "12278:65:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 960,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "12315:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 961,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "12323:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 958,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1184,
																		"src": "12299:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_super$_TetherToken_$1142",
																			"typeString": "contract super TetherToken"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "12299:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12299:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 947,
															"id": 963,
															"nodeType": "Return",
															"src": "12292:40:0"
														}
													]
												},
												"id": 965,
												"nodeType": "IfStatement",
												"src": "12166:177:0",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "12182:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 953,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "12244:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 954,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "12252:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 950,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "12217:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 949,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "12203:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12203:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 545,
																	"src": "12203:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12203:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 947,
															"id": 956,
															"nodeType": "Return",
															"src": "12196:65:0"
														}
													]
												}
											}
										]
									},
									"id": 967,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12081:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12097:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12080:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "12140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12139:16:0"
									},
									"scope": 1142,
									"src": "12062:287:0",
									"stateMutability": "view",
									"superFunction": 545,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "12474:115:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 974,
														"name": "deprecated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "12484:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12497:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12484:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "12484:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 978,
														"name": "upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "12511:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 979,
														"name": "_upgradedAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "12529:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12511:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "12511:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 983,
															"name": "_upgradedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "12565:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 982,
														"name": "Deprecate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "12555:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12555:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "12555:27:0"
											}
										]
									},
									"id": 987,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 972,
											"modifierName": {
												"argumentTypes": null,
												"id": 971,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "12464:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12464:9:0"
										}
									],
									"name": "deprecate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"name": "_upgradedAddress",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "12431:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12430:26:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12474:0:0"
									},
									"scope": 1142,
									"src": "12412:177:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "12706:158:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 992,
													"name": "deprecated",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "12720:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "12814:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1000,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "12835:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 991,
															"id": 1001,
															"nodeType": "Return",
															"src": "12828:19:0"
														}
													]
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "12716:142:0",
												"trueBody": {
													"id": 999,
													"nodeType": "Block",
													"src": "12732:76:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 994,
																				"name": "upgradedAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "12767:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 993,
																			"name": "StandardToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "12753:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
																				"typeString": "type(contract StandardToken)"
																			}
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12753:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StandardToken_$546",
																			"typeString": "contract StandardToken"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 146,
																	"src": "12753:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12753:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 991,
															"id": 998,
															"nodeType": "Return",
															"src": "12746:51:0"
														}
													]
												}
											}
										]
									},
									"id": 1005,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12672:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "12700:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "12700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12699:6:0"
									},
									"scope": 1142,
									"src": "12652:212:0",
									"stateMutability": "view",
									"superFunction": 146,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "13067:214:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1013,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "13085:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1014,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "13100:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13085:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1016,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13109:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13085:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1012,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13077:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "13077:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1021,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "13140:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1023,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1022,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "13149:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13140:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "13158:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13140:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1026,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "13167:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1028,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1027,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "13176:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13167:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13140:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1020,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13132:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "13132:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1032,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "13194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1033,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "13203:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13194:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1035,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "13213:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13194:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "13194:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1038,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13229:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1039,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "13245:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13229:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "13229:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1043,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "13267:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1042,
														"name": "Issue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "13261:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13261:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "13261:13:0"
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1010,
											"modifierName": {
												"argumentTypes": null,
												"id": 1009,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13057:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13057:9:0"
										}
									],
									"name": "issue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "13037:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13037:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13036:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13067:0:0"
									},
									"scope": 1142,
									"src": "13022:259:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "13551:184:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1055,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "13569:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1056,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "13585:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13569:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13561:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "13561:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1061,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "13610:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1063,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1062,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "13619:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13610:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1064,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "13629:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13610:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13602:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "13602:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1068,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "13647:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1069,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "13663:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13647:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "13647:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1072,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "13679:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1074,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1073,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 99,
															"src": "13688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13679:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1075,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "13698:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13679:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "13679:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "13721:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1078,
														"name": "Redeem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "13714:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13714:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "13714:14:0"
											}
										]
									},
									"id": 1083,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1052,
											"modifierName": {
												"argumentTypes": null,
												"id": 1051,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13541:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13541:9:0"
										}
									],
									"name": "redeem",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "13521:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13521:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13520:13:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13551:0:0"
									},
									"scope": 1142,
									"src": "13505:230:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "13814:305:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1093,
																"name": "newBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "13920:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13937:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "13920:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13912:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "13912:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1099,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "13958:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3530",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13970:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															"src": "13958:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "13950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13950:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "13950:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1104,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "13984:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1105,
														"name": "newBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "14002:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13984:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "13984:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1108,
														"name": "maximumFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "14026:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14053:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "14057:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14053:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1109,
																"name": "newMaxFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "14039:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "14039:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14039:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14026:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "14026:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "basisPointsRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "14084:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1119,
															"name": "maximumFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "14101:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "Params",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "14077:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14077:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "14077:35:0"
											}
										]
									},
									"id": 1123,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [],
											"id": 1090,
											"modifierName": {
												"argumentTypes": null,
												"id": 1089,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 119,
												"src": "13804:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13804:9:0"
										}
									],
									"name": "setParams",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"name": "newBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "13760:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"name": "newMaxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "13781:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13781:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13759:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13814:0:0"
									},
									"scope": 1142,
									"src": "13741:378:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1127,
									"name": "Issue",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "14177:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14176:13:0"
									},
									"src": "14165:25:0"
								},
								{
									"anonymous": false,
									"id": 1131,
									"name": "Redeem",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "14248:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14247:13:0"
									},
									"src": "14235:26:0"
								},
								{
									"anonymous": false,
									"id": 1135,
									"name": "Deprecate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"indexed": false,
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "14325:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14324:20:0"
									},
									"src": "14309:36:0"
								},
								{
									"anonymous": false,
									"id": 1141,
									"name": "Params",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"indexed": false,
												"name": "feeBasisPoints",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "14405:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14405:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"name": "maxFee",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "14426:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14426:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14404:34:0"
									},
									"src": "14392:47:0"
								}
							],
							"scope": 1143,
							"src": "9660:4781:0"
						}
					],
					"src": "0:14441:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/StrangeUSDT.sol",
						"exportedSymbols": {
							"BasicToken": [
								347
							],
							"BlackList": [
								717
							],
							"ERC20": [
								205
							],
							"ERC20Basic": [
								169
							],
							"Ownable": [
								139
							],
							"Pausable": [
								603
							],
							"SafeMath": [
								97
							],
							"StandardToken": [
								546
							],
							"TetherToken": [
								1142
							],
							"UpgradedStandardToken": [
								749
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "library",
								"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									97
								],
								"name": "SafeMath",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "mul",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 2,
															"name": "ElementaryTypeName",
															"src": "151:7:0"
														}
													],
													"id": 3,
													"name": "VariableDeclaration",
													"src": "151:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 4,
															"name": "ElementaryTypeName",
															"src": "162:7:0"
														}
													],
													"id": 5,
													"name": "VariableDeclaration",
													"src": "162:9:0"
												}
											],
											"id": 6,
											"name": "ParameterList",
											"src": "150:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 34,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 7,
															"name": "ElementaryTypeName",
															"src": "196:7:0"
														}
													],
													"id": 8,
													"name": "VariableDeclaration",
													"src": "196:7:0"
												}
											],
											"id": 9,
											"name": "ParameterList",
											"src": "195:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "==",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 10,
																	"name": "Identifier",
																	"src": "219:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 11,
																	"name": "Literal",
																	"src": "224:1:0"
																}
															],
															"id": 12,
															"name": "BinaryOperation",
															"src": "219:6:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 9
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 13,
																			"name": "Literal",
																			"src": "248:1:0"
																		}
																	],
																	"id": 14,
																	"name": "Return",
																	"src": "241:8:0"
																}
															],
															"id": 15,
															"name": "Block",
															"src": "227:33:0"
														}
													],
													"id": 16,
													"name": "IfStatement",
													"src": "215:45:0"
												},
												{
													"attributes": {
														"assignments": [
															18
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 34,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 17,
																	"name": "ElementaryTypeName",
																	"src": "269:7:0"
																}
															],
															"id": 18,
															"name": "VariableDeclaration",
															"src": "269:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "*",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 19,
																	"name": "Identifier",
																	"src": "281:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 5,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 20,
																	"name": "Identifier",
																	"src": "285:1:0"
																}
															],
															"id": 21,
															"name": "BinaryOperation",
															"src": "281:5:0"
														}
													],
													"id": 22,
													"name": "VariableDeclarationStatement",
													"src": "269:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1162,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 23,
																	"name": "Identifier",
																	"src": "296:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "/",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 18,
																						"type": "uint256",
																						"value": "c"
																					},
																					"id": 24,
																					"name": "Identifier",
																					"src": "303:1:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 3,
																						"type": "uint256",
																						"value": "a"
																					},
																					"id": 25,
																					"name": "Identifier",
																					"src": "307:1:0"
																				}
																			],
																			"id": 26,
																			"name": "BinaryOperation",
																			"src": "303:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 5,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 27,
																			"name": "Identifier",
																			"src": "312:1:0"
																		}
																	],
																	"id": 28,
																	"name": "BinaryOperation",
																	"src": "303:10:0"
																}
															],
															"id": 29,
															"name": "FunctionCall",
															"src": "296:18:0"
														}
													],
													"id": 30,
													"name": "ExpressionStatement",
													"src": "296:18:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 9
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 18,
																"type": "uint256",
																"value": "c"
															},
															"id": 31,
															"name": "Identifier",
															"src": "331:1:0"
														}
													],
													"id": 32,
													"name": "Return",
													"src": "324:8:0"
												}
											],
											"id": 33,
											"name": "Block",
											"src": "205:134:0"
										}
									],
									"id": 34,
									"name": "FunctionDefinition",
									"src": "138:201:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "div",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 35,
															"name": "ElementaryTypeName",
															"src": "358:7:0"
														}
													],
													"id": 36,
													"name": "VariableDeclaration",
													"src": "358:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 37,
															"name": "ElementaryTypeName",
															"src": "369:7:0"
														}
													],
													"id": 38,
													"name": "VariableDeclaration",
													"src": "369:9:0"
												}
											],
											"id": 39,
											"name": "ParameterList",
											"src": "357:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 52,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 40,
															"name": "ElementaryTypeName",
															"src": "403:7:0"
														}
													],
													"id": 41,
													"name": "VariableDeclaration",
													"src": "403:7:0"
												}
											],
											"id": 42,
											"name": "ParameterList",
											"src": "402:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															44
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 52,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 43,
																	"name": "ElementaryTypeName",
																	"src": "500:7:0"
																}
															],
															"id": 44,
															"name": "VariableDeclaration",
															"src": "500:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "/",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 36,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 45,
																	"name": "Identifier",
																	"src": "512:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 38,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 46,
																	"name": "Identifier",
																	"src": "516:1:0"
																}
															],
															"id": 47,
															"name": "BinaryOperation",
															"src": "512:5:0"
														}
													],
													"id": 48,
													"name": "VariableDeclarationStatement",
													"src": "500:17:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 42
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 44,
																"type": "uint256",
																"value": "c"
															},
															"id": 49,
															"name": "Identifier",
															"src": "620:1:0"
														}
													],
													"id": 50,
													"name": "Return",
													"src": "613:8:0"
												}
											],
											"id": 51,
											"name": "Block",
											"src": "412:216:0"
										}
									],
									"id": 52,
									"name": "FunctionDefinition",
									"src": "345:283:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "sub",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 53,
															"name": "ElementaryTypeName",
															"src": "647:7:0"
														}
													],
													"id": 54,
													"name": "VariableDeclaration",
													"src": "647:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 55,
															"name": "ElementaryTypeName",
															"src": "658:7:0"
														}
													],
													"id": 56,
													"name": "VariableDeclaration",
													"src": "658:9:0"
												}
											],
											"id": 57,
											"name": "ParameterList",
											"src": "646:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 72,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 58,
															"name": "ElementaryTypeName",
															"src": "692:7:0"
														}
													],
													"id": 59,
													"name": "VariableDeclaration",
													"src": "692:7:0"
												}
											],
											"id": 60,
											"name": "ParameterList",
											"src": "691:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1162,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 61,
																	"name": "Identifier",
																	"src": "711:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 56,
																				"type": "uint256",
																				"value": "b"
																			},
																			"id": 62,
																			"name": "Identifier",
																			"src": "718:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 54,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 63,
																			"name": "Identifier",
																			"src": "723:1:0"
																		}
																	],
																	"id": 64,
																	"name": "BinaryOperation",
																	"src": "718:6:0"
																}
															],
															"id": 65,
															"name": "FunctionCall",
															"src": "711:14:0"
														}
													],
													"id": 66,
													"name": "ExpressionStatement",
													"src": "711:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 60
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 54,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 67,
																	"name": "Identifier",
																	"src": "742:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 56,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 68,
																	"name": "Identifier",
																	"src": "746:1:0"
																}
															],
															"id": 69,
															"name": "BinaryOperation",
															"src": "742:5:0"
														}
													],
													"id": 70,
													"name": "Return",
													"src": "735:12:0"
												}
											],
											"id": 71,
											"name": "Block",
											"src": "701:53:0"
										}
									],
									"id": 72,
									"name": "FunctionDefinition",
									"src": "634:120:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "add",
										"payable": false,
										"scope": 97,
										"stateMutability": "pure",
										"superFunction": null,
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "a",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 73,
															"name": "ElementaryTypeName",
															"src": "773:7:0"
														}
													],
													"id": 74,
													"name": "VariableDeclaration",
													"src": "773:9:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "b",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 75,
															"name": "ElementaryTypeName",
															"src": "784:7:0"
														}
													],
													"id": 76,
													"name": "VariableDeclaration",
													"src": "784:9:0"
												}
											],
											"id": 77,
											"name": "ParameterList",
											"src": "772:22:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 96,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint256",
																"type": "uint256"
															},
															"id": 78,
															"name": "ElementaryTypeName",
															"src": "818:7:0"
														}
													],
													"id": 79,
													"name": "VariableDeclaration",
													"src": "818:7:0"
												}
											],
											"id": 80,
											"name": "ParameterList",
											"src": "817:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															82
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "c",
																"scope": 96,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint256",
																		"type": "uint256"
																	},
																	"id": 81,
																	"name": "ElementaryTypeName",
																	"src": "837:7:0"
																}
															],
															"id": 82,
															"name": "VariableDeclaration",
															"src": "837:9:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 74,
																		"type": "uint256",
																		"value": "a"
																	},
																	"id": 83,
																	"name": "Identifier",
																	"src": "849:1:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 76,
																		"type": "uint256",
																		"value": "b"
																	},
																	"id": 84,
																	"name": "Identifier",
																	"src": "853:1:0"
																}
															],
															"id": 85,
															"name": "BinaryOperation",
															"src": "849:5:0"
														}
													],
													"id": 86,
													"name": "VariableDeclarationStatement",
													"src": "837:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1162,
																		"type": "function (bool) pure",
																		"value": "assert"
																	},
																	"id": 87,
																	"name": "Identifier",
																	"src": "864:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 82,
																				"type": "uint256",
																				"value": "c"
																			},
																			"id": 88,
																			"name": "Identifier",
																			"src": "871:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 74,
																				"type": "uint256",
																				"value": "a"
																			},
																			"id": 89,
																			"name": "Identifier",
																			"src": "876:1:0"
																		}
																	],
																	"id": 90,
																	"name": "BinaryOperation",
																	"src": "871:6:0"
																}
															],
															"id": 91,
															"name": "FunctionCall",
															"src": "864:14:0"
														}
													],
													"id": 92,
													"name": "ExpressionStatement",
													"src": "864:14:0"
												},
												{
													"attributes": {
														"functionReturnParameters": 80
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 82,
																"type": "uint256",
																"value": "c"
															},
															"id": 93,
															"name": "Identifier",
															"src": "895:1:0"
														}
													],
													"id": 94,
													"name": "Return",
													"src": "888:8:0"
												}
											],
											"id": 95,
											"name": "Block",
											"src": "827:76:0"
										}
									],
									"id": 96,
									"name": "FunctionDefinition",
									"src": "760:143:0"
								}
							],
							"id": 97,
							"name": "ContractDefinition",
							"src": "115:790:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									139
								],
								"name": "Ownable",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "owner",
										"scope": 139,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 98,
											"name": "ElementaryTypeName",
											"src": "1120:7:0"
										}
									],
									"id": 99,
									"name": "VariableDeclaration",
									"src": "1120:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Ownable",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 100,
											"name": "ParameterList",
											"src": "1290:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 101,
											"name": "ParameterList",
											"src": "1300:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 99,
																		"type": "address",
																		"value": "owner"
																	},
																	"id": 102,
																	"name": "Identifier",
																	"src": "1310:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 103,
																			"name": "Identifier",
																			"src": "1318:3:0"
																		}
																	],
																	"id": 104,
																	"name": "MemberAccess",
																	"src": "1318:10:0"
																}
															],
															"id": 105,
															"name": "Assignment",
															"src": "1310:18:0"
														}
													],
													"id": 106,
													"name": "ExpressionStatement",
													"src": "1310:18:0"
												}
											],
											"id": 107,
											"name": "Block",
											"src": "1300:35:0"
										}
									],
									"id": 108,
									"name": "FunctionDefinition",
									"src": "1274:61:0"
								},
								{
									"attributes": {
										"name": "onlyOwner",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 109,
											"name": "ParameterList",
											"src": "1443:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 110,
																	"name": "Identifier",
																	"src": "1456:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "==",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1145,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 111,
																					"name": "Identifier",
																					"src": "1464:3:0"
																				}
																			],
																			"id": 112,
																			"name": "MemberAccess",
																			"src": "1464:10:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 113,
																			"name": "Identifier",
																			"src": "1478:5:0"
																		}
																	],
																	"id": 114,
																	"name": "BinaryOperation",
																	"src": "1464:19:0"
																}
															],
															"id": 115,
															"name": "FunctionCall",
															"src": "1456:28:0"
														}
													],
													"id": 116,
													"name": "ExpressionStatement",
													"src": "1456:28:0"
												},
												{
													"id": 117,
													"name": "PlaceholderStatement",
													"src": "1494:1:0"
												}
											],
											"id": 118,
											"name": "Block",
											"src": "1446:56:0"
										}
									],
									"id": 119,
									"name": "ModifierDefinition",
									"src": "1425:77:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferOwnership",
										"payable": false,
										"scope": 139,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newOwner",
														"scope": 138,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 120,
															"name": "ElementaryTypeName",
															"src": "1697:7:0"
														}
													],
													"id": 121,
													"name": "VariableDeclaration",
													"src": "1697:16:0"
												}
											],
											"id": 122,
											"name": "ParameterList",
											"src": "1696:18:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 125,
											"name": "ParameterList",
											"src": "1732:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 123,
													"name": "Identifier",
													"src": "1722:9:0"
												}
											],
											"id": 124,
											"name": "ModifierInvocation",
											"src": "1722:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "!=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 121,
																		"type": "address",
																		"value": "newOwner"
																	},
																	"id": 126,
																	"name": "Identifier",
																	"src": "1746:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "address",
																		"type_conversion": true
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"type": "type(address)",
																				"value": "address"
																			},
																			"id": 127,
																			"name": "ElementaryTypeNameExpression",
																			"src": "1758:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 128,
																			"name": "Literal",
																			"src": "1766:1:0"
																		}
																	],
																	"id": 129,
																	"name": "FunctionCall",
																	"src": "1758:10:0"
																}
															],
															"id": 130,
															"name": "BinaryOperation",
															"src": "1746:22:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 131,
																					"name": "Identifier",
																					"src": "1784:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 121,
																						"type": "address",
																						"value": "newOwner"
																					},
																					"id": 132,
																					"name": "Identifier",
																					"src": "1792:8:0"
																				}
																			],
																			"id": 133,
																			"name": "Assignment",
																			"src": "1784:16:0"
																		}
																	],
																	"id": 134,
																	"name": "ExpressionStatement",
																	"src": "1784:16:0"
																}
															],
															"id": 135,
															"name": "Block",
															"src": "1770:41:0"
														}
													],
													"id": 136,
													"name": "IfStatement",
													"src": "1742:69:0"
												}
											],
											"id": 137,
											"name": "Block",
											"src": "1732:85:0"
										}
									],
									"id": 138,
									"name": "FunctionDefinition",
									"src": "1670:147:0"
								}
							],
							"id": 139,
							"name": "ContractDefinition",
							"src": "1097:723:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									169
								],
								"name": "ERC20Basic",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "_totalSupply",
										"scope": 169,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 140,
											"name": "ElementaryTypeName",
											"src": "1975:4:0"
										}
									],
									"id": 141,
									"name": "VariableDeclaration",
									"src": "1975:24:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 142,
											"name": "ParameterList",
											"src": "2025:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 146,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 143,
															"name": "ElementaryTypeName",
															"src": "2053:4:0"
														}
													],
													"id": 144,
													"name": "VariableDeclaration",
													"src": "2053:4:0"
												}
											],
											"id": 145,
											"name": "ParameterList",
											"src": "2052:6:0"
										}
									],
									"id": 146,
									"name": "FunctionDefinition",
									"src": "2005:54:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 169,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 147,
															"name": "ElementaryTypeName",
															"src": "2083:7:0"
														}
													],
													"id": 148,
													"name": "VariableDeclaration",
													"src": "2083:11:0"
												}
											],
											"id": 149,
											"name": "ParameterList",
											"src": "2082:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 153,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 150,
															"name": "ElementaryTypeName",
															"src": "2121:4:0"
														}
													],
													"id": 151,
													"name": "VariableDeclaration",
													"src": "2121:4:0"
												}
											],
											"id": 152,
											"name": "ParameterList",
											"src": "2120:6:0"
										}
									],
									"id": 153,
									"name": "FunctionDefinition",
									"src": "2064:63:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transfer",
										"payable": false,
										"scope": 169,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 154,
															"name": "ElementaryTypeName",
															"src": "2150:7:0"
														}
													],
													"id": 155,
													"name": "VariableDeclaration",
													"src": "2150:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 160,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 156,
															"name": "ElementaryTypeName",
															"src": "2162:4:0"
														}
													],
													"id": 157,
													"name": "VariableDeclaration",
													"src": "2162:10:0"
												}
											],
											"id": 158,
											"name": "ParameterList",
											"src": "2149:24:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 159,
											"name": "ParameterList",
											"src": "2180:0:0"
										}
									],
									"id": 160,
									"name": "FunctionDefinition",
									"src": "2132:49:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Transfer"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "from",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 161,
															"name": "ElementaryTypeName",
															"src": "2201:7:0"
														}
													],
													"id": 162,
													"name": "VariableDeclaration",
													"src": "2201:20:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "to",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 163,
															"name": "ElementaryTypeName",
															"src": "2223:7:0"
														}
													],
													"id": 164,
													"name": "VariableDeclaration",
													"src": "2223:18:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 168,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 165,
															"name": "ElementaryTypeName",
															"src": "2243:4:0"
														}
													],
													"id": 166,
													"name": "VariableDeclaration",
													"src": "2243:10:0"
												}
											],
											"id": 167,
											"name": "ParameterList",
											"src": "2200:54:0"
										}
									],
									"id": 168,
									"name": "EventDefinition",
									"src": "2186:69:0"
								}
							],
							"id": 169,
							"name": "ContractDefinition",
							"src": "1949:308:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									169
								],
								"contractKind": "contract",
								"documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									205,
									169
								],
								"name": "ERC20",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ERC20Basic"
											},
											"id": 170,
											"name": "UserDefinedTypeName",
											"src": "2366:10:0"
										}
									],
									"id": 171,
									"name": "InheritanceSpecifier",
									"src": "2366:10:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": true,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 205,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "owner",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 172,
															"name": "ElementaryTypeName",
															"src": "2402:7:0"
														}
													],
													"id": 173,
													"name": "VariableDeclaration",
													"src": "2402:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 174,
															"name": "ElementaryTypeName",
															"src": "2417:7:0"
														}
													],
													"id": 175,
													"name": "VariableDeclaration",
													"src": "2417:15:0"
												}
											],
											"id": 176,
											"name": "ParameterList",
											"src": "2401:32:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 180,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 177,
															"name": "ElementaryTypeName",
															"src": "2459:4:0"
														}
													],
													"id": 178,
													"name": "VariableDeclaration",
													"src": "2459:4:0"
												}
											],
											"id": 179,
											"name": "ParameterList",
											"src": "2458:6:0"
										}
									],
									"id": 180,
									"name": "FunctionDefinition",
									"src": "2383:82:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFrom",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 181,
															"name": "ElementaryTypeName",
															"src": "2492:7:0"
														}
													],
													"id": 182,
													"name": "VariableDeclaration",
													"src": "2492:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 183,
															"name": "ElementaryTypeName",
															"src": "2506:7:0"
														}
													],
													"id": 184,
													"name": "VariableDeclaration",
													"src": "2506:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 189,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 185,
															"name": "ElementaryTypeName",
															"src": "2518:4:0"
														}
													],
													"id": 186,
													"name": "VariableDeclaration",
													"src": "2518:10:0"
												}
											],
											"id": 187,
											"name": "ParameterList",
											"src": "2491:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 188,
											"name": "ParameterList",
											"src": "2536:0:0"
										}
									],
									"id": 189,
									"name": "FunctionDefinition",
									"src": "2470:67:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approve",
										"payable": false,
										"scope": 205,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 190,
															"name": "ElementaryTypeName",
															"src": "2559:7:0"
														}
													],
													"id": 191,
													"name": "VariableDeclaration",
													"src": "2559:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 196,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 192,
															"name": "ElementaryTypeName",
															"src": "2576:4:0"
														}
													],
													"id": 193,
													"name": "VariableDeclaration",
													"src": "2576:10:0"
												}
											],
											"id": 194,
											"name": "ParameterList",
											"src": "2558:29:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 195,
											"name": "ParameterList",
											"src": "2594:0:0"
										}
									],
									"id": 196,
									"name": "FunctionDefinition",
									"src": "2542:53:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Approval"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "owner",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 197,
															"name": "ElementaryTypeName",
															"src": "2615:7:0"
														}
													],
													"id": 198,
													"name": "VariableDeclaration",
													"src": "2615:21:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": true,
														"name": "spender",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 199,
															"name": "ElementaryTypeName",
															"src": "2638:7:0"
														}
													],
													"id": 200,
													"name": "VariableDeclaration",
													"src": "2638:23:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "value",
														"scope": 204,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 201,
															"name": "ElementaryTypeName",
															"src": "2663:4:0"
														}
													],
													"id": 202,
													"name": "VariableDeclaration",
													"src": "2663:10:0"
												}
											],
											"id": 203,
											"name": "ParameterList",
											"src": "2614:60:0"
										}
									],
									"id": 204,
									"name": "EventDefinition",
									"src": "2600:75:0"
								}
							],
							"id": 205,
							"name": "ContractDefinition",
							"src": "2348:329:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									169
								],
								"contractKind": "contract",
								"documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									347,
									169,
									139
								],
								"name": "BasicToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 206,
											"name": "UserDefinedTypeName",
											"src": "2792:7:0"
										}
									],
									"id": 207,
									"name": "InheritanceSpecifier",
									"src": "2792:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20Basic",
												"referencedDeclaration": 169,
												"type": "contract ERC20Basic"
											},
											"id": 208,
											"name": "UserDefinedTypeName",
											"src": "2801:10:0"
										}
									],
									"id": 209,
									"name": "InheritanceSpecifier",
									"src": "2801:10:0"
								},
								{
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "SafeMath",
												"referencedDeclaration": 97,
												"type": "library SafeMath"
											},
											"id": 210,
											"name": "UserDefinedTypeName",
											"src": "2824:8:0"
										},
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 211,
											"name": "ElementaryTypeName",
											"src": "2837:4:0"
										}
									],
									"id": 212,
									"name": "UsingForDirective",
									"src": "2818:24:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "balances",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => uint256)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => uint256)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 213,
													"name": "ElementaryTypeName",
													"src": "2856:7:0"
												},
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 214,
													"name": "ElementaryTypeName",
													"src": "2867:4:0"
												}
											],
											"id": 215,
											"name": "Mapping",
											"src": "2848:24:0"
										}
									],
									"id": 216,
									"name": "VariableDeclaration",
									"src": "2848:40:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "basisPointsRate",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 217,
											"name": "ElementaryTypeName",
											"src": "2973:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 218,
											"name": "Literal",
											"src": "3003:1:0"
										}
									],
									"id": 219,
									"name": "VariableDeclaration",
									"src": "2973:31:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "maximumFee",
										"scope": 347,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 220,
											"name": "ElementaryTypeName",
											"src": "3010:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 221,
											"name": "Literal",
											"src": "3035:1:0"
										}
									],
									"id": 222,
									"name": "VariableDeclaration",
									"src": "3010:26:0"
								},
								{
									"attributes": {
										"name": "onlyPayloadSize",
										"visibility": "internal"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "size",
														"scope": 240,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 223,
															"name": "ElementaryTypeName",
															"src": "3134:4:0"
														}
													],
													"id": 224,
													"name": "VariableDeclaration",
													"src": "3134:9:0"
												}
											],
											"id": 225,
											"name": "ParameterList",
											"src": "3133:11:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 226,
																	"name": "Identifier",
																	"src": "3155:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "<",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "length",
																								"referencedDeclaration": null,
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"member_name": "data",
																										"referencedDeclaration": null,
																										"type": "bytes calldata"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 1145,
																												"type": "msg",
																												"value": "msg"
																											},
																											"id": 227,
																											"name": "Identifier",
																											"src": "3165:3:0"
																										}
																									],
																									"id": 228,
																									"name": "MemberAccess",
																									"src": "3165:8:0"
																								}
																							],
																							"id": 229,
																							"name": "MemberAccess",
																							"src": "3165:15:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"operator": "+",
																								"type": "uint256"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 224,
																										"type": "uint256",
																										"value": "size"
																									},
																									"id": 230,
																									"name": "Identifier",
																									"src": "3183:4:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"hexvalue": "34",
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"subdenomination": null,
																										"token": "number",
																										"type": "int_const 4",
																										"value": "4"
																									},
																									"id": 231,
																									"name": "Literal",
																									"src": "3190:1:0"
																								}
																							],
																							"id": 232,
																							"name": "BinaryOperation",
																							"src": "3183:8:0"
																						}
																					],
																					"id": 233,
																					"name": "BinaryOperation",
																					"src": "3165:26:0"
																				}
																			],
																			"id": 234,
																			"name": "TupleExpression",
																			"src": "3164:28:0"
																		}
																	],
																	"id": 235,
																	"name": "UnaryOperation",
																	"src": "3163:29:0"
																}
															],
															"id": 236,
															"name": "FunctionCall",
															"src": "3155:38:0"
														}
													],
													"id": 237,
													"name": "ExpressionStatement",
													"src": "3155:38:0"
												},
												{
													"id": 238,
													"name": "PlaceholderStatement",
													"src": "3203:1:0"
												}
											],
											"id": 239,
											"name": "Block",
											"src": "3145:66:0"
										}
									],
									"id": 240,
									"name": "ModifierDefinition",
									"src": "3109:102:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 347,
										"stateMutability": "nonpayable",
										"superFunction": 160,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 241,
															"name": "ElementaryTypeName",
															"src": "3395:7:0"
														}
													],
													"id": 242,
													"name": "VariableDeclaration",
													"src": "3395:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 334,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 243,
															"name": "ElementaryTypeName",
															"src": "3408:4:0"
														}
													],
													"id": 244,
													"name": "VariableDeclaration",
													"src": "3408:11:0"
												}
											],
											"id": 245,
											"name": "ParameterList",
											"src": "3394:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 251,
											"name": "ParameterList",
											"src": "3452:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 246,
													"name": "Identifier",
													"src": "3428:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 247,
															"name": "Literal",
															"src": "3444:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 248,
															"name": "Literal",
															"src": "3448:2:0"
														}
													],
													"id": 249,
													"name": "BinaryOperation",
													"src": "3444:6:0"
												}
											],
											"id": 250,
											"name": "ModifierInvocation",
											"src": "3428:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															253
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 252,
																	"name": "ElementaryTypeName",
																	"src": "3462:4:0"
																}
															],
															"id": 253,
															"name": "VariableDeclaration",
															"src": "3462:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 244,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 254,
																									"name": "Identifier",
																									"src": "3474:6:0"
																								}
																							],
																							"id": 255,
																							"name": "MemberAccess",
																							"src": "3474:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 256,
																							"name": "Identifier",
																							"src": "3485:15:0"
																						}
																					],
																					"id": 257,
																					"name": "FunctionCall",
																					"src": "3474:27:0"
																				}
																			],
																			"id": 258,
																			"name": "TupleExpression",
																			"src": "3473:29:0"
																		}
																	],
																	"id": 259,
																	"name": "MemberAccess",
																	"src": "3473:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 260,
																	"name": "Literal",
																	"src": "3507:5:0"
																}
															],
															"id": 261,
															"name": "FunctionCall",
															"src": "3473:40:0"
														}
													],
													"id": 262,
													"name": "VariableDeclarationStatement",
													"src": "3462:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 263,
																	"name": "Identifier",
																	"src": "3527:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 264,
																	"name": "Identifier",
																	"src": "3533:10:0"
																}
															],
															"id": 265,
															"name": "BinaryOperation",
															"src": "3527:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 266,
																					"name": "Identifier",
																					"src": "3559:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 267,
																					"name": "Identifier",
																					"src": "3565:10:0"
																				}
																			],
																			"id": 268,
																			"name": "Assignment",
																			"src": "3559:16:0"
																		}
																	],
																	"id": 269,
																	"name": "ExpressionStatement",
																	"src": "3559:16:0"
																}
															],
															"id": 270,
															"name": "Block",
															"src": "3545:41:0"
														}
													],
													"id": 271,
													"name": "IfStatement",
													"src": "3523:63:0"
												},
												{
													"attributes": {
														"assignments": [
															273
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 334,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 272,
																	"name": "ElementaryTypeName",
																	"src": "3595:4:0"
																}
															],
															"id": 273,
															"name": "VariableDeclaration",
															"src": "3595:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 274,
																			"name": "Identifier",
																			"src": "3613:6:0"
																		}
																	],
																	"id": 275,
																	"name": "MemberAccess",
																	"src": "3613:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 276,
																	"name": "Identifier",
																	"src": "3624:3:0"
																}
															],
															"id": 277,
															"name": "FunctionCall",
															"src": "3613:15:0"
														}
													],
													"id": 278,
													"name": "VariableDeclarationStatement",
													"src": "3595:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 279,
																			"name": "Identifier",
																			"src": "3638:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sender",
																				"referencedDeclaration": null,
																				"type": "address"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1145,
																						"type": "msg",
																						"value": "msg"
																					},
																					"id": 280,
																					"name": "Identifier",
																					"src": "3647:3:0"
																				}
																			],
																			"id": 281,
																			"name": "MemberAccess",
																			"src": "3647:10:0"
																		}
																	],
																	"id": 282,
																	"name": "IndexAccess",
																	"src": "3638:20:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 283,
																							"name": "Identifier",
																							"src": "3661:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1145,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 284,
																									"name": "Identifier",
																									"src": "3670:3:0"
																								}
																							],
																							"id": 285,
																							"name": "MemberAccess",
																							"src": "3670:10:0"
																						}
																					],
																					"id": 286,
																					"name": "IndexAccess",
																					"src": "3661:20:0"
																				}
																			],
																			"id": 287,
																			"name": "MemberAccess",
																			"src": "3661:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 244,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 288,
																			"name": "Identifier",
																			"src": "3686:6:0"
																		}
																	],
																	"id": 289,
																	"name": "FunctionCall",
																	"src": "3661:32:0"
																}
															],
															"id": 290,
															"name": "Assignment",
															"src": "3638:55:0"
														}
													],
													"id": 291,
													"name": "ExpressionStatement",
													"src": "3638:55:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 292,
																			"name": "Identifier",
																			"src": "3703:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 242,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 293,
																			"name": "Identifier",
																			"src": "3712:3:0"
																		}
																	],
																	"id": 294,
																	"name": "IndexAccess",
																	"src": "3703:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 295,
																							"name": "Identifier",
																							"src": "3719:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 242,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 296,
																							"name": "Identifier",
																							"src": "3728:3:0"
																						}
																					],
																					"id": 297,
																					"name": "IndexAccess",
																					"src": "3719:13:0"
																				}
																			],
																			"id": 298,
																			"name": "MemberAccess",
																			"src": "3719:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 273,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 299,
																			"name": "Identifier",
																			"src": "3737:10:0"
																		}
																	],
																	"id": 300,
																	"name": "FunctionCall",
																	"src": "3719:29:0"
																}
															],
															"id": 301,
															"name": "Assignment",
															"src": "3703:45:0"
														}
													],
													"id": 302,
													"name": "ExpressionStatement",
													"src": "3703:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 253,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 303,
																	"name": "Identifier",
																	"src": "3762:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 304,
																	"name": "Literal",
																	"src": "3768:1:0"
																}
															],
															"id": 305,
															"name": "BinaryOperation",
															"src": "3762:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 306,
																							"name": "Identifier",
																							"src": "3785:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 307,
																							"name": "Identifier",
																							"src": "3794:5:0"
																						}
																					],
																					"id": 308,
																					"name": "IndexAccess",
																					"src": "3785:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 309,
																											"name": "Identifier",
																											"src": "3803:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 310,
																											"name": "Identifier",
																											"src": "3812:5:0"
																										}
																									],
																									"id": 311,
																									"name": "IndexAccess",
																									"src": "3803:15:0"
																								}
																							],
																							"id": 312,
																							"name": "MemberAccess",
																							"src": "3803:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 253,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 313,
																							"name": "Identifier",
																							"src": "3823:3:0"
																						}
																					],
																					"id": 314,
																					"name": "FunctionCall",
																					"src": "3803:24:0"
																				}
																			],
																			"id": 315,
																			"name": "Assignment",
																			"src": "3785:42:0"
																		}
																	],
																	"id": 316,
																	"name": "ExpressionStatement",
																	"src": "3785:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 317,
																					"name": "Identifier",
																					"src": "3841:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 318,
																							"name": "Identifier",
																							"src": "3850:3:0"
																						}
																					],
																					"id": 319,
																					"name": "MemberAccess",
																					"src": "3850:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 320,
																					"name": "Identifier",
																					"src": "3862:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 253,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 321,
																					"name": "Identifier",
																					"src": "3869:3:0"
																				}
																			],
																			"id": 322,
																			"name": "FunctionCall",
																			"src": "3841:32:0"
																		}
																	],
																	"id": 323,
																	"name": "ExpressionStatement",
																	"src": "3841:32:0"
																}
															],
															"id": 324,
															"name": "Block",
															"src": "3771:113:0"
														}
													],
													"id": 325,
													"name": "IfStatement",
													"src": "3758:126:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 326,
																	"name": "Identifier",
																	"src": "3893:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 327,
																			"name": "Identifier",
																			"src": "3902:3:0"
																		}
																	],
																	"id": 328,
																	"name": "MemberAccess",
																	"src": "3902:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 242,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 329,
																	"name": "Identifier",
																	"src": "3914:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 273,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 330,
																	"name": "Identifier",
																	"src": "3919:10:0"
																}
															],
															"id": 331,
															"name": "FunctionCall",
															"src": "3893:37:0"
														}
													],
													"id": 332,
													"name": "ExpressionStatement",
													"src": "3893:37:0"
												}
											],
											"id": 333,
											"name": "Block",
											"src": "3452:485:0"
										}
									],
									"id": 334,
									"name": "FunctionDefinition",
									"src": "3377:560:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 347,
										"stateMutability": "view",
										"superFunction": 153,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 335,
															"name": "ElementaryTypeName",
															"src": "4167:7:0"
														}
													],
													"id": 336,
													"name": "VariableDeclaration",
													"src": "4167:14:0"
												}
											],
											"id": 337,
											"name": "ParameterList",
											"src": "4166:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "balance",
														"scope": 346,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 338,
															"name": "ElementaryTypeName",
															"src": "4208:4:0"
														}
													],
													"id": 339,
													"name": "VariableDeclaration",
													"src": "4208:12:0"
												}
											],
											"id": 340,
											"name": "ParameterList",
											"src": "4207:14:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 340
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 216,
																		"type": "mapping(address => uint256)",
																		"value": "balances"
																	},
																	"id": 341,
																	"name": "Identifier",
																	"src": "4239:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 336,
																		"type": "address",
																		"value": "_owner"
																	},
																	"id": 342,
																	"name": "Identifier",
																	"src": "4248:6:0"
																}
															],
															"id": 343,
															"name": "IndexAccess",
															"src": "4239:16:0"
														}
													],
													"id": 344,
													"name": "Return",
													"src": "4232:23:0"
												}
											],
											"id": 345,
											"name": "Block",
											"src": "4222:40:0"
										}
									],
									"id": 346,
									"name": "FunctionDefinition",
									"src": "4148:114:0"
								}
							],
							"id": 347,
							"name": "ContractDefinition",
							"src": "2769:1496:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									205,
									139,
									347,
									169
								],
								"contractKind": "contract",
								"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									546,
									205,
									347,
									169,
									139
								],
								"name": "StandardToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 348,
											"name": "UserDefinedTypeName",
											"src": "4559:10:0"
										}
									],
									"id": 349,
									"name": "InheritanceSpecifier",
									"src": "4559:10:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "ERC20",
												"referencedDeclaration": 205,
												"type": "contract ERC20"
											},
											"id": 350,
											"name": "UserDefinedTypeName",
											"src": "4571:5:0"
										}
									],
									"id": 351,
									"name": "InheritanceSpecifier",
									"src": "4571:5:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "allowed",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => mapping(address => uint256))",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => mapping(address => uint256))"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 352,
													"name": "ElementaryTypeName",
													"src": "4593:7:0"
												},
												{
													"attributes": {
														"type": "mapping(address => uint256)"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 353,
															"name": "ElementaryTypeName",
															"src": "4613:7:0"
														},
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 354,
															"name": "ElementaryTypeName",
															"src": "4624:4:0"
														}
													],
													"id": 355,
													"name": "Mapping",
													"src": "4604:25:0"
												}
											],
											"id": 356,
											"name": "Mapping",
											"src": "4584:46:0"
										}
									],
									"id": 357,
									"name": "VariableDeclaration",
									"src": "4584:61:0"
								},
								{
									"attributes": {
										"constant": true,
										"name": "MAX_UINT",
										"scope": 546,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 358,
											"name": "ElementaryTypeName",
											"src": "4652:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"commonType": {
													"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
													"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
												},
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"operator": "-",
												"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639935"
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
															"typeString": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "**",
														"type": "int_const 115792089237316195423570985008687907853269984665640564039457584007913129639936"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 359,
															"name": "Literal",
															"src": "4684:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "323536",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 256",
																"value": "256"
															},
															"id": 360,
															"name": "Literal",
															"src": "4687:3:0"
														}
													],
													"id": 361,
													"name": "BinaryOperation",
													"src": "4684:6:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "31",
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 1",
														"value": "1"
													},
													"id": 362,
													"name": "Literal",
													"src": "4693:1:0"
												}
											],
											"id": 363,
											"name": "BinaryOperation",
											"src": "4684:10:0"
										}
									],
									"id": 364,
									"name": "VariableDeclaration",
									"src": "4652:42:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 189,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 365,
															"name": "ElementaryTypeName",
															"src": "4998:7:0"
														}
													],
													"id": 366,
													"name": "VariableDeclaration",
													"src": "4998:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 367,
															"name": "ElementaryTypeName",
															"src": "5013:7:0"
														}
													],
													"id": 368,
													"name": "VariableDeclaration",
													"src": "5013:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 481,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 369,
															"name": "ElementaryTypeName",
															"src": "5026:4:0"
														}
													],
													"id": 370,
													"name": "VariableDeclaration",
													"src": "5026:11:0"
												}
											],
											"id": 371,
											"name": "ParameterList",
											"src": "4997:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 377,
											"name": "ParameterList",
											"src": "5070:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 372,
													"name": "Identifier",
													"src": "5046:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 96"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "33",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 3",
																"value": "3"
															},
															"id": 373,
															"name": "Literal",
															"src": "5062:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 374,
															"name": "Literal",
															"src": "5066:2:0"
														}
													],
													"id": 375,
													"name": "BinaryOperation",
													"src": "5062:6:0"
												}
											],
											"id": 376,
											"name": "ModifierInvocation",
											"src": "5046:23:0"
										},
										{
											"children": [
												{
													"attributes": {
														"assignments": [
															378
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "_allowance",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"typeName": null,
																"value": null,
																"visibility": "internal"
															},
															"children": [],
															"id": 378,
															"name": "VariableDeclaration",
															"src": "5080:14:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 379,
																			"name": "Identifier",
																			"src": "5097:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 380,
																			"name": "Identifier",
																			"src": "5105:5:0"
																		}
																	],
																	"id": 381,
																	"name": "IndexAccess",
																	"src": "5097:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 382,
																			"name": "Identifier",
																			"src": "5112:3:0"
																		}
																	],
																	"id": 383,
																	"name": "MemberAccess",
																	"src": "5112:10:0"
																}
															],
															"id": 384,
															"name": "IndexAccess",
															"src": "5097:26:0"
														}
													],
													"id": 385,
													"name": "VariableDeclarationStatement",
													"src": "5080:43:0"
												},
												{
													"attributes": {
														"assignments": [
															387
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "fee",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 386,
																	"name": "ElementaryTypeName",
																	"src": "5289:4:0"
																}
															],
															"id": 387,
															"name": "VariableDeclaration",
															"src": "5289:8:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "div",
																		"referencedDeclaration": 52,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "mul",
																								"referencedDeclaration": 34,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 370,
																										"type": "uint256",
																										"value": "_value"
																									},
																									"id": 388,
																									"name": "Identifier",
																									"src": "5301:6:0"
																								}
																							],
																							"id": 389,
																							"name": "MemberAccess",
																							"src": "5301:10:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 219,
																								"type": "uint256",
																								"value": "basisPointsRate"
																							},
																							"id": 390,
																							"name": "Identifier",
																							"src": "5312:15:0"
																						}
																					],
																					"id": 391,
																					"name": "FunctionCall",
																					"src": "5301:27:0"
																				}
																			],
																			"id": 392,
																			"name": "TupleExpression",
																			"src": "5300:29:0"
																		}
																	],
																	"id": 393,
																	"name": "MemberAccess",
																	"src": "5300:33:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "3130303030",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 10000",
																		"value": "10000"
																	},
																	"id": 394,
																	"name": "Literal",
																	"src": "5334:5:0"
																}
															],
															"id": 395,
															"name": "FunctionCall",
															"src": "5300:40:0"
														}
													],
													"id": 396,
													"name": "VariableDeclarationStatement",
													"src": "5289:51:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 397,
																	"name": "Identifier",
																	"src": "5354:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 398,
																	"name": "Identifier",
																	"src": "5360:10:0"
																}
															],
															"id": 399,
															"name": "BinaryOperation",
															"src": "5354:16:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 400,
																					"name": "Identifier",
																					"src": "5386:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 222,
																						"type": "uint256",
																						"value": "maximumFee"
																					},
																					"id": 401,
																					"name": "Identifier",
																					"src": "5392:10:0"
																				}
																			],
																			"id": 402,
																			"name": "Assignment",
																			"src": "5386:16:0"
																		}
																	],
																	"id": 403,
																	"name": "ExpressionStatement",
																	"src": "5386:16:0"
																}
															],
															"id": 404,
															"name": "Block",
															"src": "5372:41:0"
														}
													],
													"id": 405,
													"name": "IfStatement",
													"src": "5350:63:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "<",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 378,
																		"type": "uint256",
																		"value": "_allowance"
																	},
																	"id": 406,
																	"name": "Identifier",
																	"src": "5426:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 364,
																		"type": "uint256",
																		"value": "MAX_UINT"
																	},
																	"id": 407,
																	"name": "Identifier",
																	"src": "5439:8:0"
																}
															],
															"id": 408,
															"name": "BinaryOperation",
															"src": "5426:21:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "mapping(address => uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 357,
																										"type": "mapping(address => mapping(address => uint256))",
																										"value": "allowed"
																									},
																									"id": 409,
																									"name": "Identifier",
																									"src": "5463:7:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 366,
																										"type": "address",
																										"value": "_from"
																									},
																									"id": 410,
																									"name": "Identifier",
																									"src": "5471:5:0"
																								}
																							],
																							"id": 413,
																							"name": "IndexAccess",
																							"src": "5463:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sender",
																								"referencedDeclaration": null,
																								"type": "address"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 1145,
																										"type": "msg",
																										"value": "msg"
																									},
																									"id": 411,
																									"name": "Identifier",
																									"src": "5478:3:0"
																								}
																							],
																							"id": 412,
																							"name": "MemberAccess",
																							"src": "5478:10:0"
																						}
																					],
																					"id": 414,
																					"name": "IndexAccess",
																					"src": "5463:26:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "sub",
																								"referencedDeclaration": 72,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 378,
																										"type": "uint256",
																										"value": "_allowance"
																									},
																									"id": 415,
																									"name": "Identifier",
																									"src": "5492:10:0"
																								}
																							],
																							"id": 416,
																							"name": "MemberAccess",
																							"src": "5492:14:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 370,
																								"type": "uint256",
																								"value": "_value"
																							},
																							"id": 417,
																							"name": "Identifier",
																							"src": "5507:6:0"
																						}
																					],
																					"id": 418,
																					"name": "FunctionCall",
																					"src": "5492:22:0"
																				}
																			],
																			"id": 419,
																			"name": "Assignment",
																			"src": "5463:51:0"
																		}
																	],
																	"id": 420,
																	"name": "ExpressionStatement",
																	"src": "5463:51:0"
																}
															],
															"id": 421,
															"name": "Block",
															"src": "5449:76:0"
														}
													],
													"id": 422,
													"name": "IfStatement",
													"src": "5422:103:0"
												},
												{
													"attributes": {
														"assignments": [
															424
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "sendAmount",
																"scope": 481,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 423,
																	"name": "ElementaryTypeName",
																	"src": "5534:4:0"
																}
															],
															"id": 424,
															"name": "VariableDeclaration",
															"src": "5534:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sub",
																		"referencedDeclaration": 72,
																		"type": "function (uint256,uint256) pure returns (uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 425,
																			"name": "Identifier",
																			"src": "5552:6:0"
																		}
																	],
																	"id": 426,
																	"name": "MemberAccess",
																	"src": "5552:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 427,
																	"name": "Identifier",
																	"src": "5563:3:0"
																}
															],
															"id": 428,
															"name": "FunctionCall",
															"src": "5552:15:0"
														}
													],
													"id": 429,
													"name": "VariableDeclarationStatement",
													"src": "5534:33:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 430,
																			"name": "Identifier",
																			"src": "5577:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 366,
																				"type": "address",
																				"value": "_from"
																			},
																			"id": 431,
																			"name": "Identifier",
																			"src": "5586:5:0"
																		}
																	],
																	"id": 432,
																	"name": "IndexAccess",
																	"src": "5577:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "sub",
																				"referencedDeclaration": 72,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 433,
																							"name": "Identifier",
																							"src": "5595:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 366,
																								"type": "address",
																								"value": "_from"
																							},
																							"id": 434,
																							"name": "Identifier",
																							"src": "5604:5:0"
																						}
																					],
																					"id": 435,
																					"name": "IndexAccess",
																					"src": "5595:15:0"
																				}
																			],
																			"id": 436,
																			"name": "MemberAccess",
																			"src": "5595:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 370,
																				"type": "uint256",
																				"value": "_value"
																			},
																			"id": 437,
																			"name": "Identifier",
																			"src": "5615:6:0"
																		}
																	],
																	"id": 438,
																	"name": "FunctionCall",
																	"src": "5595:27:0"
																}
															],
															"id": 439,
															"name": "Assignment",
															"src": "5577:45:0"
														}
													],
													"id": 440,
													"name": "ExpressionStatement",
													"src": "5577:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 441,
																			"name": "Identifier",
																			"src": "5632:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 368,
																				"type": "address",
																				"value": "_to"
																			},
																			"id": 442,
																			"name": "Identifier",
																			"src": "5641:3:0"
																		}
																	],
																	"id": 443,
																	"name": "IndexAccess",
																	"src": "5632:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "add",
																				"referencedDeclaration": 96,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 444,
																							"name": "Identifier",
																							"src": "5648:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 368,
																								"type": "address",
																								"value": "_to"
																							},
																							"id": 445,
																							"name": "Identifier",
																							"src": "5657:3:0"
																						}
																					],
																					"id": 446,
																					"name": "IndexAccess",
																					"src": "5648:13:0"
																				}
																			],
																			"id": 447,
																			"name": "MemberAccess",
																			"src": "5648:17:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 424,
																				"type": "uint256",
																				"value": "sendAmount"
																			},
																			"id": 448,
																			"name": "Identifier",
																			"src": "5666:10:0"
																		}
																	],
																	"id": 449,
																	"name": "FunctionCall",
																	"src": "5648:29:0"
																}
															],
															"id": 450,
															"name": "Assignment",
															"src": "5632:45:0"
														}
													],
													"id": 451,
													"name": "ExpressionStatement",
													"src": "5632:45:0"
												},
												{
													"attributes": {
														"falseBody": null
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": ">",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 387,
																		"type": "uint256",
																		"value": "fee"
																	},
																	"id": 452,
																	"name": "Identifier",
																	"src": "5691:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 453,
																	"name": "Literal",
																	"src": "5697:1:0"
																}
															],
															"id": 454,
															"name": "BinaryOperation",
															"src": "5691:7:0"
														},
														{
															"children": [
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "=",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 455,
																							"name": "Identifier",
																							"src": "5714:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 456,
																							"name": "Identifier",
																							"src": "5723:5:0"
																						}
																					],
																					"id": 457,
																					"name": "IndexAccess",
																					"src": "5714:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"isStructConstructorCall": false,
																						"lValueRequested": false,
																						"names": [
																							null
																						],
																						"type": "uint256",
																						"type_conversion": false
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"member_name": "add",
																								"referencedDeclaration": 96,
																								"type": "function (uint256,uint256) pure returns (uint256)"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"type": "uint256"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 216,
																												"type": "mapping(address => uint256)",
																												"value": "balances"
																											},
																											"id": 458,
																											"name": "Identifier",
																											"src": "5732:8:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 99,
																												"type": "address",
																												"value": "owner"
																											},
																											"id": 459,
																											"name": "Identifier",
																											"src": "5741:5:0"
																										}
																									],
																									"id": 460,
																									"name": "IndexAccess",
																									"src": "5732:15:0"
																								}
																							],
																							"id": 461,
																							"name": "MemberAccess",
																							"src": "5732:19:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 387,
																								"type": "uint256",
																								"value": "fee"
																							},
																							"id": 462,
																							"name": "Identifier",
																							"src": "5752:3:0"
																						}
																					],
																					"id": 463,
																					"name": "FunctionCall",
																					"src": "5732:24:0"
																				}
																			],
																			"id": 464,
																			"name": "Assignment",
																			"src": "5714:42:0"
																		}
																	],
																	"id": 465,
																	"name": "ExpressionStatement",
																	"src": "5714:42:0"
																},
																{
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 168,
																						"type": "function (address,address,uint256)",
																						"value": "Transfer"
																					},
																					"id": 466,
																					"name": "Identifier",
																					"src": "5770:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 366,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 467,
																					"name": "Identifier",
																					"src": "5779:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 468,
																					"name": "Identifier",
																					"src": "5786:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 387,
																						"type": "uint256",
																						"value": "fee"
																					},
																					"id": 469,
																					"name": "Identifier",
																					"src": "5793:3:0"
																				}
																			],
																			"id": 470,
																			"name": "FunctionCall",
																			"src": "5770:27:0"
																		}
																	],
																	"id": 471,
																	"name": "ExpressionStatement",
																	"src": "5770:27:0"
																}
															],
															"id": 472,
															"name": "Block",
															"src": "5700:108:0"
														}
													],
													"id": 473,
													"name": "IfStatement",
													"src": "5687:121:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 168,
																		"type": "function (address,address,uint256)",
																		"value": "Transfer"
																	},
																	"id": 474,
																	"name": "Identifier",
																	"src": "5817:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 366,
																		"type": "address",
																		"value": "_from"
																	},
																	"id": 475,
																	"name": "Identifier",
																	"src": "5826:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 368,
																		"type": "address",
																		"value": "_to"
																	},
																	"id": 476,
																	"name": "Identifier",
																	"src": "5833:3:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 424,
																		"type": "uint256",
																		"value": "sendAmount"
																	},
																	"id": 477,
																	"name": "Identifier",
																	"src": "5838:10:0"
																}
															],
															"id": 478,
															"name": "FunctionCall",
															"src": "5817:32:0"
														}
													],
													"id": 479,
													"name": "ExpressionStatement",
													"src": "5817:32:0"
												}
											],
											"id": 480,
											"name": "Block",
											"src": "5070:786:0"
										}
									],
									"id": 481,
									"name": "FunctionDefinition",
									"src": "4976:880:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 546,
										"stateMutability": "nonpayable",
										"superFunction": 196,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 482,
															"name": "ElementaryTypeName",
															"src": "6113:7:0"
														}
													],
													"id": 483,
													"name": "VariableDeclaration",
													"src": "6113:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 529,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 484,
															"name": "ElementaryTypeName",
															"src": "6131:4:0"
														}
													],
													"id": 485,
													"name": "VariableDeclaration",
													"src": "6131:11:0"
												}
											],
											"id": 486,
											"name": "ParameterList",
											"src": "6112:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 492,
											"name": "ParameterList",
											"src": "6175:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 487,
													"name": "Identifier",
													"src": "6151:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 488,
															"name": "Literal",
															"src": "6167:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 489,
															"name": "Literal",
															"src": "6171:2:0"
														}
													],
													"id": 490,
													"name": "BinaryOperation",
													"src": "6167:6:0"
												}
											],
											"id": 491,
											"name": "ModifierInvocation",
											"src": "6151:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 493,
																	"name": "Identifier",
																	"src": "6490:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"operator": "&&",
																						"type": "bool"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"overloadedDeclarations": [
																													null
																												],
																												"referencedDeclaration": 485,
																												"type": "uint256",
																												"value": "_value"
																											},
																											"id": 494,
																											"name": "Identifier",
																											"src": "6501:6:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 495,
																											"name": "Literal",
																											"src": "6511:1:0"
																										}
																									],
																									"id": 496,
																									"name": "BinaryOperation",
																									"src": "6501:11:0"
																								}
																							],
																							"id": 497,
																							"name": "TupleExpression",
																							"src": "6500:13:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"type": "bool"
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"operator": "!=",
																										"type": "bool"
																									},
																									"children": [
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"type": "uint256"
																											},
																											"children": [
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"type": "mapping(address => uint256)"
																													},
																													"children": [
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"overloadedDeclarations": [
																																	null
																																],
																																"referencedDeclaration": 357,
																																"type": "mapping(address => mapping(address => uint256))",
																																"value": "allowed"
																															},
																															"id": 498,
																															"name": "Identifier",
																															"src": "6518:7:0"
																														},
																														{
																															"attributes": {
																																"argumentTypes": null,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"member_name": "sender",
																																"referencedDeclaration": null,
																																"type": "address"
																															},
																															"children": [
																																{
																																	"attributes": {
																																		"argumentTypes": null,
																																		"overloadedDeclarations": [
																																			null
																																		],
																																		"referencedDeclaration": 1145,
																																		"type": "msg",
																																		"value": "msg"
																																	},
																																	"id": 499,
																																	"name": "Identifier",
																																	"src": "6526:3:0"
																																}
																															],
																															"id": 500,
																															"name": "MemberAccess",
																															"src": "6526:10:0"
																														}
																													],
																													"id": 501,
																													"name": "IndexAccess",
																													"src": "6518:19:0"
																												},
																												{
																													"attributes": {
																														"argumentTypes": null,
																														"overloadedDeclarations": [
																															null
																														],
																														"referencedDeclaration": 483,
																														"type": "address",
																														"value": "_spender"
																													},
																													"id": 502,
																													"name": "Identifier",
																													"src": "6538:8:0"
																												}
																											],
																											"id": 503,
																											"name": "IndexAccess",
																											"src": "6518:29:0"
																										},
																										{
																											"attributes": {
																												"argumentTypes": null,
																												"hexvalue": "30",
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"subdenomination": null,
																												"token": "number",
																												"type": "int_const 0",
																												"value": "0"
																											},
																											"id": 504,
																											"name": "Literal",
																											"src": "6551:1:0"
																										}
																									],
																									"id": 505,
																									"name": "BinaryOperation",
																									"src": "6518:34:0"
																								}
																							],
																							"id": 506,
																							"name": "TupleExpression",
																							"src": "6517:36:0"
																						}
																					],
																					"id": 507,
																					"name": "BinaryOperation",
																					"src": "6500:53:0"
																				}
																			],
																			"id": 508,
																			"name": "TupleExpression",
																			"src": "6499:55:0"
																		}
																	],
																	"id": 509,
																	"name": "UnaryOperation",
																	"src": "6498:56:0"
																}
															],
															"id": 510,
															"name": "FunctionCall",
															"src": "6490:65:0"
														}
													],
													"id": 511,
													"name": "ExpressionStatement",
													"src": "6490:65:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "mapping(address => uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 357,
																						"type": "mapping(address => mapping(address => uint256))",
																						"value": "allowed"
																					},
																					"id": 512,
																					"name": "Identifier",
																					"src": "6566:7:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 513,
																							"name": "Identifier",
																							"src": "6574:3:0"
																						}
																					],
																					"id": 514,
																					"name": "MemberAccess",
																					"src": "6574:10:0"
																				}
																			],
																			"id": 516,
																			"name": "IndexAccess",
																			"src": "6566:19:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 483,
																				"type": "address",
																				"value": "_spender"
																			},
																			"id": 515,
																			"name": "Identifier",
																			"src": "6586:8:0"
																		}
																	],
																	"id": 517,
																	"name": "IndexAccess",
																	"src": "6566:29:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 518,
																	"name": "Identifier",
																	"src": "6598:6:0"
																}
															],
															"id": 519,
															"name": "Assignment",
															"src": "6566:38:0"
														}
													],
													"id": 520,
													"name": "ExpressionStatement",
													"src": "6566:38:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 204,
																		"type": "function (address,address,uint256)",
																		"value": "Approval"
																	},
																	"id": 521,
																	"name": "Identifier",
																	"src": "6614:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1145,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 522,
																			"name": "Identifier",
																			"src": "6623:3:0"
																		}
																	],
																	"id": 523,
																	"name": "MemberAccess",
																	"src": "6623:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 483,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 524,
																	"name": "Identifier",
																	"src": "6635:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 485,
																		"type": "uint256",
																		"value": "_value"
																	},
																	"id": 525,
																	"name": "Identifier",
																	"src": "6645:6:0"
																}
															],
															"id": 526,
															"name": "FunctionCall",
															"src": "6614:38:0"
														}
													],
													"id": 527,
													"name": "ExpressionStatement",
													"src": "6614:38:0"
												}
											],
											"id": 528,
											"name": "Block",
											"src": "6175:484:0"
										}
									],
									"id": 529,
									"name": "FunctionDefinition",
									"src": "6096:563:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 546,
										"stateMutability": "view",
										"superFunction": 180,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 530,
															"name": "ElementaryTypeName",
															"src": "7003:7:0"
														}
													],
													"id": 531,
													"name": "VariableDeclaration",
													"src": "7003:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 532,
															"name": "ElementaryTypeName",
															"src": "7019:7:0"
														}
													],
													"id": 533,
													"name": "VariableDeclaration",
													"src": "7019:16:0"
												}
											],
											"id": 534,
											"name": "ParameterList",
											"src": "7002:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 545,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 535,
															"name": "ElementaryTypeName",
															"src": "7062:4:0"
														}
													],
													"id": 536,
													"name": "VariableDeclaration",
													"src": "7062:14:0"
												}
											],
											"id": 537,
											"name": "ParameterList",
											"src": "7061:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 537
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "mapping(address => uint256)"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 357,
																				"type": "mapping(address => mapping(address => uint256))",
																				"value": "allowed"
																			},
																			"id": 538,
																			"name": "Identifier",
																			"src": "7095:7:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 531,
																				"type": "address",
																				"value": "_owner"
																			},
																			"id": 539,
																			"name": "Identifier",
																			"src": "7103:6:0"
																		}
																	],
																	"id": 540,
																	"name": "IndexAccess",
																	"src": "7095:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 533,
																		"type": "address",
																		"value": "_spender"
																	},
																	"id": 541,
																	"name": "Identifier",
																	"src": "7111:8:0"
																}
															],
															"id": 542,
															"name": "IndexAccess",
															"src": "7095:25:0"
														}
													],
													"id": 543,
													"name": "Return",
													"src": "7088:32:0"
												}
											],
											"id": 544,
											"name": "Block",
											"src": "7078:49:0"
										}
									],
									"id": 545,
									"name": "FunctionDefinition",
									"src": "6984:143:0"
								}
							],
							"id": 546,
							"name": "ContractDefinition",
							"src": "4533:2597:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139
								],
								"contractKind": "contract",
								"documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									603,
									139
								],
								"name": "Pausable",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 547,
											"name": "UserDefinedTypeName",
											"src": "7267:7:0"
										}
									],
									"id": 548,
									"name": "InheritanceSpecifier",
									"src": "7267:7:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Pause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 549,
											"name": "ParameterList",
											"src": "7290:2:0"
										}
									],
									"id": 550,
									"name": "EventDefinition",
									"src": "7279:14:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Unpause"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 551,
											"name": "ParameterList",
											"src": "7309:2:0"
										}
									],
									"id": 552,
									"name": "EventDefinition",
									"src": "7296:16:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "paused",
										"scope": 603,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 553,
											"name": "ElementaryTypeName",
											"src": "7316:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "66616c7365",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "bool",
												"type": "bool",
												"value": "false"
											},
											"id": 554,
											"name": "Literal",
											"src": "7337:5:0"
										}
									],
									"id": 555,
									"name": "VariableDeclaration",
									"src": "7316:26:0"
								},
								{
									"attributes": {
										"name": "whenNotPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 556,
											"name": "ParameterList",
											"src": "7467:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 557,
																	"name": "Identifier",
																	"src": "7476:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 555,
																				"type": "bool",
																				"value": "paused"
																			},
																			"id": 558,
																			"name": "Identifier",
																			"src": "7485:6:0"
																		}
																	],
																	"id": 559,
																	"name": "UnaryOperation",
																	"src": "7484:7:0"
																}
															],
															"id": 560,
															"name": "FunctionCall",
															"src": "7476:16:0"
														}
													],
													"id": 561,
													"name": "ExpressionStatement",
													"src": "7476:16:0"
												},
												{
													"id": 562,
													"name": "PlaceholderStatement",
													"src": "7498:1:0"
												}
											],
											"id": 563,
											"name": "Block",
											"src": "7470:34:0"
										}
									],
									"id": 564,
									"name": "ModifierDefinition",
									"src": "7445:59:0"
								},
								{
									"attributes": {
										"name": "whenPaused",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 565,
											"name": "ParameterList",
											"src": "7620:2:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 566,
																	"name": "Identifier",
																	"src": "7629:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 567,
																	"name": "Identifier",
																	"src": "7637:6:0"
																}
															],
															"id": 568,
															"name": "FunctionCall",
															"src": "7629:15:0"
														}
													],
													"id": 569,
													"name": "ExpressionStatement",
													"src": "7629:15:0"
												},
												{
													"id": 570,
													"name": "PlaceholderStatement",
													"src": "7650:1:0"
												}
											],
											"id": 571,
											"name": "Block",
											"src": "7623:33:0"
										}
									],
									"id": 572,
									"name": "ModifierDefinition",
									"src": "7601:55:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "pause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 573,
											"name": "ParameterList",
											"src": "7749:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 578,
											"name": "ParameterList",
											"src": "7783:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 574,
													"name": "Identifier",
													"src": "7752:9:0"
												}
											],
											"id": 575,
											"name": "ModifierInvocation",
											"src": "7752:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 576,
													"name": "Identifier",
													"src": "7762:13:0"
												}
											],
											"id": 577,
											"name": "ModifierInvocation",
											"src": "7762:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 579,
																	"name": "Identifier",
																	"src": "7789:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 580,
																	"name": "Literal",
																	"src": "7798:4:0"
																}
															],
															"id": 581,
															"name": "Assignment",
															"src": "7789:13:0"
														}
													],
													"id": 582,
													"name": "ExpressionStatement",
													"src": "7789:13:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 550,
																		"type": "function ()",
																		"value": "Pause"
																	},
																	"id": 583,
																	"name": "Identifier",
																	"src": "7808:5:0"
																}
															],
															"id": 584,
															"name": "FunctionCall",
															"src": "7808:7:0"
														}
													],
													"id": 585,
													"name": "ExpressionStatement",
													"src": "7808:7:0"
												}
											],
											"id": 586,
											"name": "Block",
											"src": "7783:37:0"
										}
									],
									"id": 587,
									"name": "FunctionDefinition",
									"src": "7735:85:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "unpause",
										"payable": false,
										"scope": 603,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 588,
											"name": "ParameterList",
											"src": "7918:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 593,
											"name": "ParameterList",
											"src": "7949:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 589,
													"name": "Identifier",
													"src": "7921:9:0"
												}
											],
											"id": 590,
											"name": "ModifierInvocation",
											"src": "7921:9:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 572,
														"type": "modifier ()",
														"value": "whenPaused"
													},
													"id": 591,
													"name": "Identifier",
													"src": "7931:10:0"
												}
											],
											"id": 592,
											"name": "ModifierInvocation",
											"src": "7931:10:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 555,
																		"type": "bool",
																		"value": "paused"
																	},
																	"id": 594,
																	"name": "Identifier",
																	"src": "7955:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 595,
																	"name": "Literal",
																	"src": "7964:5:0"
																}
															],
															"id": 596,
															"name": "Assignment",
															"src": "7955:14:0"
														}
													],
													"id": 597,
													"name": "ExpressionStatement",
													"src": "7955:14:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"arguments": [
																	null
																],
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			null
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 552,
																		"type": "function ()",
																		"value": "Unpause"
																	},
																	"id": 598,
																	"name": "Identifier",
																	"src": "7975:7:0"
																}
															],
															"id": 599,
															"name": "FunctionCall",
															"src": "7975:9:0"
														}
													],
													"id": 600,
													"name": "ExpressionStatement",
													"src": "7975:9:0"
												}
											],
											"id": 601,
											"name": "Block",
											"src": "7949:40:0"
										}
									],
									"id": 602,
									"name": "FunctionDefinition",
									"src": "7902:87:0"
								}
							],
							"id": 603,
							"name": "ContractDefinition",
							"src": "7246:745:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									139,
									347,
									169
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									717,
									347,
									169,
									139
								],
								"name": "BlackList",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Ownable",
												"referencedDeclaration": 139,
												"type": "contract Ownable"
											},
											"id": 604,
											"name": "UserDefinedTypeName",
											"src": "8015:7:0"
										}
									],
									"id": 605,
									"name": "InheritanceSpecifier",
									"src": "8015:7:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BasicToken",
												"referencedDeclaration": 347,
												"type": "contract BasicToken"
											},
											"id": 606,
											"name": "UserDefinedTypeName",
											"src": "8024:10:0"
										}
									],
									"id": 607,
									"name": "InheritanceSpecifier",
									"src": "8024:10:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getBlackListStatus",
										"payable": false,
										"scope": 717,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_maker",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 608,
															"name": "ElementaryTypeName",
															"src": "8189:7:0"
														}
													],
													"id": 609,
													"name": "VariableDeclaration",
													"src": "8189:14:0"
												}
											],
											"id": 610,
											"name": "ParameterList",
											"src": "8188:16:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 619,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "bool",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "bool",
																"type": "bool"
															},
															"id": 611,
															"name": "ElementaryTypeName",
															"src": "8232:4:0"
														}
													],
													"id": 612,
													"name": "VariableDeclaration",
													"src": "8232:4:0"
												}
											],
											"id": 613,
											"name": "ParameterList",
											"src": "8231:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 613
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 631,
																		"type": "mapping(address => bool)",
																		"value": "isBlackListed"
																	},
																	"id": 614,
																	"name": "Identifier",
																	"src": "8255:13:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 609,
																		"type": "address",
																		"value": "_maker"
																	},
																	"id": 615,
																	"name": "Identifier",
																	"src": "8269:6:0"
																}
															],
															"id": 616,
															"name": "IndexAccess",
															"src": "8255:21:0"
														}
													],
													"id": 617,
													"name": "Return",
													"src": "8248:28:0"
												}
											],
											"id": 618,
											"name": "Block",
											"src": "8238:45:0"
										}
									],
									"id": 619,
									"name": "FunctionDefinition",
									"src": "8161:122:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getOwner",
										"payable": false,
										"scope": 717,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "external"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 620,
											"name": "ParameterList",
											"src": "8306:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 627,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 621,
															"name": "ElementaryTypeName",
															"src": "8336:7:0"
														}
													],
													"id": 622,
													"name": "VariableDeclaration",
													"src": "8336:7:0"
												}
											],
											"id": 623,
											"name": "ParameterList",
											"src": "8335:9:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 623
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 99,
																"type": "address",
																"value": "owner"
															},
															"id": 624,
															"name": "Identifier",
															"src": "8362:5:0"
														}
													],
													"id": 625,
													"name": "Return",
													"src": "8355:12:0"
												}
											],
											"id": 626,
											"name": "Block",
											"src": "8345:29:0"
										}
									],
									"id": 627,
									"name": "FunctionDefinition",
									"src": "8289:85:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "isBlackListed",
										"scope": 717,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => bool)",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => bool)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 628,
													"name": "ElementaryTypeName",
													"src": "8389:7:0"
												},
												{
													"attributes": {
														"name": "bool",
														"type": "bool"
													},
													"id": 629,
													"name": "ElementaryTypeName",
													"src": "8400:4:0"
												}
											],
											"id": 630,
											"name": "Mapping",
											"src": "8380:25:0"
										}
									],
									"id": 631,
									"name": "VariableDeclaration",
									"src": "8380:46:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "addBlackList",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_evilUser",
														"scope": 649,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 632,
															"name": "ElementaryTypeName",
															"src": "8460:7:0"
														}
													],
													"id": 633,
													"name": "VariableDeclaration",
													"src": "8460:17:0"
												}
											],
											"id": 634,
											"name": "ParameterList",
											"src": "8459:19:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 637,
											"name": "ParameterList",
											"src": "8496:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 635,
													"name": "Identifier",
													"src": "8486:9:0"
												}
											],
											"id": 636,
											"name": "ModifierInvocation",
											"src": "8486:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 638,
																			"name": "Identifier",
																			"src": "8506:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 633,
																				"type": "address",
																				"value": "_evilUser"
																			},
																			"id": 639,
																			"name": "Identifier",
																			"src": "8520:9:0"
																		}
																	],
																	"id": 640,
																	"name": "IndexAccess",
																	"src": "8506:24:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 641,
																	"name": "Literal",
																	"src": "8533:4:0"
																}
															],
															"id": 642,
															"name": "Assignment",
															"src": "8506:31:0"
														}
													],
													"id": 643,
													"name": "ExpressionStatement",
													"src": "8506:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 712,
																		"type": "function (address)",
																		"value": "AddedBlackList"
																	},
																	"id": 644,
																	"name": "Identifier",
																	"src": "8547:14:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 633,
																		"type": "address",
																		"value": "_evilUser"
																	},
																	"id": 645,
																	"name": "Identifier",
																	"src": "8562:9:0"
																}
															],
															"id": 646,
															"name": "FunctionCall",
															"src": "8547:25:0"
														}
													],
													"id": 647,
													"name": "ExpressionStatement",
													"src": "8547:25:0"
												}
											],
											"id": 648,
											"name": "Block",
											"src": "8496:83:0"
										}
									],
									"id": 649,
									"name": "FunctionDefinition",
									"src": "8437:142:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "removeBlackList",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_clearedUser",
														"scope": 667,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 650,
															"name": "ElementaryTypeName",
															"src": "8611:7:0"
														}
													],
													"id": 651,
													"name": "VariableDeclaration",
													"src": "8611:20:0"
												}
											],
											"id": 652,
											"name": "ParameterList",
											"src": "8610:22:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 655,
											"name": "ParameterList",
											"src": "8650:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 653,
													"name": "Identifier",
													"src": "8640:9:0"
												}
											],
											"id": 654,
											"name": "ModifierInvocation",
											"src": "8640:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 656,
																			"name": "Identifier",
																			"src": "8660:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 651,
																				"type": "address",
																				"value": "_clearedUser"
																			},
																			"id": 657,
																			"name": "Identifier",
																			"src": "8674:12:0"
																		}
																	],
																	"id": 658,
																	"name": "IndexAccess",
																	"src": "8660:27:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 659,
																	"name": "Literal",
																	"src": "8690:5:0"
																}
															],
															"id": 660,
															"name": "Assignment",
															"src": "8660:35:0"
														}
													],
													"id": 661,
													"name": "ExpressionStatement",
													"src": "8660:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 716,
																		"type": "function (address)",
																		"value": "RemovedBlackList"
																	},
																	"id": 662,
																	"name": "Identifier",
																	"src": "8705:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 651,
																		"type": "address",
																		"value": "_clearedUser"
																	},
																	"id": 663,
																	"name": "Identifier",
																	"src": "8722:12:0"
																}
															],
															"id": 664,
															"name": "FunctionCall",
															"src": "8705:30:0"
														}
													],
													"id": 665,
													"name": "ExpressionStatement",
													"src": "8705:30:0"
												}
											],
											"id": 666,
											"name": "Block",
											"src": "8650:92:0"
										}
									],
									"id": 667,
									"name": "FunctionDefinition",
									"src": "8585:157:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "destroyBlackFunds",
										"payable": false,
										"scope": 717,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_blackListedUser",
														"scope": 702,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 668,
															"name": "ElementaryTypeName",
															"src": "8776:7:0"
														}
													],
													"id": 669,
													"name": "VariableDeclaration",
													"src": "8776:24:0"
												}
											],
											"id": 670,
											"name": "ParameterList",
											"src": "8775:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 673,
											"name": "ParameterList",
											"src": "8819:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 671,
													"name": "Identifier",
													"src": "8809:9:0"
												}
											],
											"id": 672,
											"name": "ModifierInvocation",
											"src": "8809:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 674,
																	"name": "Identifier",
																	"src": "8829:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 631,
																				"type": "mapping(address => bool)",
																				"value": "isBlackListed"
																			},
																			"id": 675,
																			"name": "Identifier",
																			"src": "8837:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 676,
																			"name": "Identifier",
																			"src": "8851:16:0"
																		}
																	],
																	"id": 677,
																	"name": "IndexAccess",
																	"src": "8837:31:0"
																}
															],
															"id": 678,
															"name": "FunctionCall",
															"src": "8829:40:0"
														}
													],
													"id": 679,
													"name": "ExpressionStatement",
													"src": "8829:40:0"
												},
												{
													"attributes": {
														"assignments": [
															681
														]
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "dirtyFunds",
																"scope": 702,
																"stateVariable": false,
																"storageLocation": "default",
																"type": "uint256",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"name": "uint",
																		"type": "uint256"
																	},
																	"id": 680,
																	"name": "ElementaryTypeName",
																	"src": "8879:4:0"
																}
															],
															"id": 681,
															"name": "VariableDeclaration",
															"src": "8879:15:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "uint256",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			346
																		],
																		"referencedDeclaration": 346,
																		"type": "function (address) view returns (uint256)",
																		"value": "balanceOf"
																	},
																	"id": 682,
																	"name": "Identifier",
																	"src": "8897:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 683,
																	"name": "Identifier",
																	"src": "8907:16:0"
																}
															],
															"id": 684,
															"name": "FunctionCall",
															"src": "8897:27:0"
														}
													],
													"id": 685,
													"name": "VariableDeclarationStatement",
													"src": "8879:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 686,
																			"name": "Identifier",
																			"src": "8934:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 669,
																				"type": "address",
																				"value": "_blackListedUser"
																			},
																			"id": 687,
																			"name": "Identifier",
																			"src": "8943:16:0"
																		}
																	],
																	"id": 688,
																	"name": "IndexAccess",
																	"src": "8934:26:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "30",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "number",
																		"type": "int_const 0",
																		"value": "0"
																	},
																	"id": 689,
																	"name": "Literal",
																	"src": "8963:1:0"
																}
															],
															"id": 690,
															"name": "Assignment",
															"src": "8934:30:0"
														}
													],
													"id": 691,
													"name": "ExpressionStatement",
													"src": "8934:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 692,
																	"name": "Identifier",
																	"src": "8974:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 693,
																	"name": "Identifier",
																	"src": "8990:10:0"
																}
															],
															"id": 694,
															"name": "Assignment",
															"src": "8974:26:0"
														}
													],
													"id": 695,
													"name": "ExpressionStatement",
													"src": "8974:26:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 708,
																		"type": "function (address,uint256)",
																		"value": "DestroyedBlackFunds"
																	},
																	"id": 696,
																	"name": "Identifier",
																	"src": "9010:19:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 669,
																		"type": "address",
																		"value": "_blackListedUser"
																	},
																	"id": 697,
																	"name": "Identifier",
																	"src": "9030:16:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 681,
																		"type": "uint256",
																		"value": "dirtyFunds"
																	},
																	"id": 698,
																	"name": "Identifier",
																	"src": "9048:10:0"
																}
															],
															"id": 699,
															"name": "FunctionCall",
															"src": "9010:49:0"
														}
													],
													"id": 700,
													"name": "ExpressionStatement",
													"src": "9010:49:0"
												}
											],
											"id": 701,
											"name": "Block",
											"src": "8819:247:0"
										}
									],
									"id": 702,
									"name": "FunctionDefinition",
									"src": "8748:318:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "DestroyedBlackFunds"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_blackListedUser",
														"scope": 708,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 703,
															"name": "ElementaryTypeName",
															"src": "9098:7:0"
														}
													],
													"id": 704,
													"name": "VariableDeclaration",
													"src": "9098:24:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_balance",
														"scope": 708,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 705,
															"name": "ElementaryTypeName",
															"src": "9124:4:0"
														}
													],
													"id": 706,
													"name": "VariableDeclaration",
													"src": "9124:13:0"
												}
											],
											"id": 707,
											"name": "ParameterList",
											"src": "9097:41:0"
										}
									],
									"id": 708,
									"name": "EventDefinition",
									"src": "9072:67:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "AddedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 712,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 709,
															"name": "ElementaryTypeName",
															"src": "9166:7:0"
														}
													],
													"id": 710,
													"name": "VariableDeclaration",
													"src": "9166:13:0"
												}
											],
											"id": 711,
											"name": "ParameterList",
											"src": "9165:15:0"
										}
									],
									"id": 712,
									"name": "EventDefinition",
									"src": "9145:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "RemovedBlackList"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "_user",
														"scope": 716,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 713,
															"name": "ElementaryTypeName",
															"src": "9210:7:0"
														}
													],
													"id": 714,
													"name": "VariableDeclaration",
													"src": "9210:13:0"
												}
											],
											"id": 715,
											"name": "ParameterList",
											"src": "9209:15:0"
										}
									],
									"id": 716,
									"name": "EventDefinition",
									"src": "9187:38:0"
								}
							],
							"id": 717,
							"name": "ContractDefinition",
							"src": "7993:1235:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									205,
									139,
									347,
									169,
									546
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": false,
								"linearizedBaseContracts": [
									749,
									546,
									205,
									347,
									169,
									139
								],
								"name": "UpgradedStandardToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 718,
											"name": "UserDefinedTypeName",
											"src": "9264:13:0"
										}
									],
									"id": 719,
									"name": "InheritanceSpecifier",
									"src": "9264:13:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 720,
															"name": "ElementaryTypeName",
															"src": "9430:7:0"
														}
													],
													"id": 721,
													"name": "VariableDeclaration",
													"src": "9430:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "to",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 722,
															"name": "ElementaryTypeName",
															"src": "9444:7:0"
														}
													],
													"id": 723,
													"name": "VariableDeclaration",
													"src": "9444:10:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 728,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 724,
															"name": "ElementaryTypeName",
															"src": "9456:4:0"
														}
													],
													"id": 725,
													"name": "VariableDeclaration",
													"src": "9456:10:0"
												}
											],
											"id": 726,
											"name": "ParameterList",
											"src": "9429:38:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 727,
											"name": "ParameterList",
											"src": "9474:0:0"
										}
									],
									"id": 728,
									"name": "FunctionDefinition",
									"src": "9404:71:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "transferFromByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "sender",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 729,
															"name": "ElementaryTypeName",
															"src": "9510:7:0"
														}
													],
													"id": 730,
													"name": "VariableDeclaration",
													"src": "9510:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 731,
															"name": "ElementaryTypeName",
															"src": "9526:7:0"
														}
													],
													"id": 732,
													"name": "VariableDeclaration",
													"src": "9526:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 733,
															"name": "ElementaryTypeName",
															"src": "9540:7:0"
														}
													],
													"id": 734,
													"name": "VariableDeclaration",
													"src": "9540:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 739,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 735,
															"name": "ElementaryTypeName",
															"src": "9557:4:0"
														}
													],
													"id": 736,
													"name": "VariableDeclaration",
													"src": "9557:10:0"
												}
											],
											"id": 737,
											"name": "ParameterList",
											"src": "9509:59:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 738,
											"name": "ParameterList",
											"src": "9575:0:0"
										}
									],
									"id": 739,
									"name": "FunctionDefinition",
									"src": "9480:96:0"
								},
								{
									"attributes": {
										"body": null,
										"constant": false,
										"implemented": false,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "approveByLegacy",
										"payable": false,
										"scope": 749,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "from",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 740,
															"name": "ElementaryTypeName",
															"src": "9606:7:0"
														}
													],
													"id": 741,
													"name": "VariableDeclaration",
													"src": "9606:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "spender",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 742,
															"name": "ElementaryTypeName",
															"src": "9620:7:0"
														}
													],
													"id": 743,
													"name": "VariableDeclaration",
													"src": "9620:15:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "value",
														"scope": 748,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 744,
															"name": "ElementaryTypeName",
															"src": "9637:4:0"
														}
													],
													"id": 745,
													"name": "VariableDeclaration",
													"src": "9637:10:0"
												}
											],
											"id": 746,
											"name": "ParameterList",
											"src": "9605:43:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 747,
											"name": "ParameterList",
											"src": "9655:0:0"
										}
									],
									"id": 748,
									"name": "FunctionDefinition",
									"src": "9581:75:0"
								}
							],
							"id": 749,
							"name": "ContractDefinition",
							"src": "9230:428:0"
						},
						{
							"attributes": {
								"contractDependencies": [
									205,
									139,
									347,
									169,
									546,
									603,
									717
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									1142,
									717,
									546,
									205,
									347,
									169,
									603,
									139
								],
								"name": "TetherToken",
								"scope": 1143
							},
							"children": [
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "Pausable",
												"referencedDeclaration": 603,
												"type": "contract Pausable"
											},
											"id": 750,
											"name": "UserDefinedTypeName",
											"src": "9684:8:0"
										}
									],
									"id": 751,
									"name": "InheritanceSpecifier",
									"src": "9684:8:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "StandardToken",
												"referencedDeclaration": 546,
												"type": "contract StandardToken"
											},
											"id": 752,
											"name": "UserDefinedTypeName",
											"src": "9694:13:0"
										}
									],
									"id": 753,
									"name": "InheritanceSpecifier",
									"src": "9694:13:0"
								},
								{
									"attributes": {
										"arguments": [
											null
										]
									},
									"children": [
										{
											"attributes": {
												"contractScope": null,
												"name": "BlackList",
												"referencedDeclaration": 717,
												"type": "contract BlackList"
											},
											"id": 754,
											"name": "UserDefinedTypeName",
											"src": "9709:9:0"
										}
									],
									"id": 755,
									"name": "InheritanceSpecifier",
									"src": "9709:9:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "name",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 756,
											"name": "ElementaryTypeName",
											"src": "9726:6:0"
										}
									],
									"id": 757,
									"name": "VariableDeclaration",
									"src": "9726:18:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "symbol",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "string storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "string",
												"type": "string storage pointer"
											},
											"id": 758,
											"name": "ElementaryTypeName",
											"src": "9750:6:0"
										}
									],
									"id": 759,
									"name": "VariableDeclaration",
									"src": "9750:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "decimals",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 760,
											"name": "ElementaryTypeName",
											"src": "9776:4:0"
										}
									],
									"id": 761,
									"name": "VariableDeclaration",
									"src": "9776:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "upgradedAddress",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 762,
											"name": "ElementaryTypeName",
											"src": "9802:7:0"
										}
									],
									"id": 763,
									"name": "VariableDeclaration",
									"src": "9802:30:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "deprecated",
										"scope": 1142,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "bool",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "bool",
												"type": "bool"
											},
											"id": 764,
											"name": "ElementaryTypeName",
											"src": "9838:4:0"
										}
									],
									"id": 765,
									"name": "VariableDeclaration",
									"src": "9838:22:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "TetherToken",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_initialSupply",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 766,
															"name": "ElementaryTypeName",
															"src": "10176:4:0"
														}
													],
													"id": 767,
													"name": "VariableDeclaration",
													"src": "10176:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_name",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 768,
															"name": "ElementaryTypeName",
															"src": "10197:6:0"
														}
													],
													"id": 769,
													"name": "VariableDeclaration",
													"src": "10197:12:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_symbol",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "string memory",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "string",
																"type": "string storage pointer"
															},
															"id": 770,
															"name": "ElementaryTypeName",
															"src": "10211:6:0"
														}
													],
													"id": 771,
													"name": "VariableDeclaration",
													"src": "10211:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_decimals",
														"scope": 803,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 772,
															"name": "ElementaryTypeName",
															"src": "10227:4:0"
														}
													],
													"id": 773,
													"name": "VariableDeclaration",
													"src": "10227:14:0"
												}
											],
											"id": 774,
											"name": "ParameterList",
											"src": "10175:67:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 775,
											"name": "ParameterList",
											"src": "10250:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 776,
																	"name": "Identifier",
																	"src": "10260:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 777,
																	"name": "Identifier",
																	"src": "10275:14:0"
																}
															],
															"id": 778,
															"name": "Assignment",
															"src": "10260:29:0"
														}
													],
													"id": 779,
													"name": "ExpressionStatement",
													"src": "10260:29:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 757,
																		"type": "string storage ref",
																		"value": "name"
																	},
																	"id": 780,
																	"name": "Identifier",
																	"src": "10299:4:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 769,
																		"type": "string memory",
																		"value": "_name"
																	},
																	"id": 781,
																	"name": "Identifier",
																	"src": "10306:5:0"
																}
															],
															"id": 782,
															"name": "Assignment",
															"src": "10299:12:0"
														}
													],
													"id": 783,
													"name": "ExpressionStatement",
													"src": "10299:12:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "string storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 759,
																		"type": "string storage ref",
																		"value": "symbol"
																	},
																	"id": 784,
																	"name": "Identifier",
																	"src": "10321:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 771,
																		"type": "string memory",
																		"value": "_symbol"
																	},
																	"id": 785,
																	"name": "Identifier",
																	"src": "10330:7:0"
																}
															],
															"id": 786,
															"name": "Assignment",
															"src": "10321:16:0"
														}
													],
													"id": 787,
													"name": "ExpressionStatement",
													"src": "10321:16:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 761,
																		"type": "uint256",
																		"value": "decimals"
																	},
																	"id": 788,
																	"name": "Identifier",
																	"src": "10347:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 773,
																		"type": "uint256",
																		"value": "_decimals"
																	},
																	"id": 789,
																	"name": "Identifier",
																	"src": "10358:9:0"
																}
															],
															"id": 790,
															"name": "Assignment",
															"src": "10347:20:0"
														}
													],
													"id": 791,
													"name": "ExpressionStatement",
													"src": "10347:20:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 792,
																			"name": "Identifier",
																			"src": "10377:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 793,
																			"name": "Identifier",
																			"src": "10386:5:0"
																		}
																	],
																	"id": 794,
																	"name": "IndexAccess",
																	"src": "10377:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 767,
																		"type": "uint256",
																		"value": "_initialSupply"
																	},
																	"id": 795,
																	"name": "Identifier",
																	"src": "10395:14:0"
																}
															],
															"id": 796,
															"name": "Assignment",
															"src": "10377:32:0"
														}
													],
													"id": 797,
													"name": "ExpressionStatement",
													"src": "10377:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 765,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 798,
																	"name": "Identifier",
																	"src": "10419:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "66616c7365",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "false"
																	},
																	"id": 799,
																	"name": "Literal",
																	"src": "10432:5:0"
																}
															],
															"id": 800,
															"name": "Assignment",
															"src": "10419:18:0"
														}
													],
													"id": 801,
													"name": "ExpressionStatement",
													"src": "10419:18:0"
												}
											],
											"id": 802,
											"name": "Block",
											"src": "10250:194:0"
										}
									],
									"id": 803,
									"name": "FunctionDefinition",
									"src": "10155:289:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transfer",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 334,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 841,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 804,
															"name": "ElementaryTypeName",
															"src": "10544:7:0"
														}
													],
													"id": 805,
													"name": "VariableDeclaration",
													"src": "10544:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 841,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 806,
															"name": "ElementaryTypeName",
															"src": "10557:4:0"
														}
													],
													"id": 807,
													"name": "VariableDeclaration",
													"src": "10557:11:0"
												}
											],
											"id": 808,
											"name": "ParameterList",
											"src": "10543:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 811,
											"name": "ParameterList",
											"src": "10591:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 809,
													"name": "Identifier",
													"src": "10577:13:0"
												}
											],
											"id": 810,
											"name": "ModifierInvocation",
											"src": "10577:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 812,
																	"name": "Identifier",
																	"src": "10601:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 813,
																					"name": "Identifier",
																					"src": "10610:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 814,
																							"name": "Identifier",
																							"src": "10624:3:0"
																						}
																					],
																					"id": 815,
																					"name": "MemberAccess",
																					"src": "10624:10:0"
																				}
																			],
																			"id": 816,
																			"name": "IndexAccess",
																			"src": "10610:25:0"
																		}
																	],
																	"id": 817,
																	"name": "UnaryOperation",
																	"src": "10609:26:0"
																}
															],
															"id": 818,
															"name": "FunctionCall",
															"src": "10601:35:0"
														}
													],
													"id": 819,
													"name": "ExpressionStatement",
													"src": "10601:35:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 820,
															"name": "Identifier",
															"src": "10650:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 811
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferByLegacy",
																						"referencedDeclaration": 728,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 821,
																									"name": "Identifier",
																									"src": "10683:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 822,
																									"name": "Identifier",
																									"src": "10705:15:0"
																								}
																							],
																							"id": 823,
																							"name": "FunctionCall",
																							"src": "10683:38:0"
																						}
																					],
																					"id": 824,
																					"name": "MemberAccess",
																					"src": "10683:55:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 825,
																							"name": "Identifier",
																							"src": "10739:3:0"
																						}
																					],
																					"id": 826,
																					"name": "MemberAccess",
																					"src": "10739:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 805,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 827,
																					"name": "Identifier",
																					"src": "10751:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 807,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 828,
																					"name": "Identifier",
																					"src": "10756:6:0"
																				}
																			],
																			"id": 829,
																			"name": "FunctionCall",
																			"src": "10683:80:0"
																		}
																	],
																	"id": 830,
																	"name": "Return",
																	"src": "10676:87:0"
																}
															],
															"id": 831,
															"name": "Block",
															"src": "10662:112:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 811
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transfer",
																						"referencedDeclaration": 334,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 832,
																							"name": "Identifier",
																							"src": "10801:5:0"
																						}
																					],
																					"id": 833,
																					"name": "MemberAccess",
																					"src": "10801:14:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 805,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 834,
																					"name": "Identifier",
																					"src": "10816:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 807,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 835,
																					"name": "Identifier",
																					"src": "10821:6:0"
																				}
																			],
																			"id": 836,
																			"name": "FunctionCall",
																			"src": "10801:27:0"
																		}
																	],
																	"id": 837,
																	"name": "Return",
																	"src": "10794:34:0"
																}
															],
															"id": 838,
															"name": "Block",
															"src": "10780:59:0"
														}
													],
													"id": 839,
													"name": "IfStatement",
													"src": "10646:193:0"
												}
											],
											"id": 840,
											"name": "Block",
											"src": "10591:254:0"
										}
									],
									"id": 841,
									"name": "FunctionDefinition",
									"src": "10526:319:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "transferFrom",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 481,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_from",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 842,
															"name": "ElementaryTypeName",
															"src": "10949:7:0"
														}
													],
													"id": 843,
													"name": "VariableDeclaration",
													"src": "10949:13:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_to",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 844,
															"name": "ElementaryTypeName",
															"src": "10964:7:0"
														}
													],
													"id": 845,
													"name": "VariableDeclaration",
													"src": "10964:11:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 882,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 846,
															"name": "ElementaryTypeName",
															"src": "10977:4:0"
														}
													],
													"id": 847,
													"name": "VariableDeclaration",
													"src": "10977:11:0"
												}
											],
											"id": 848,
											"name": "ParameterList",
											"src": "10948:41:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 851,
											"name": "ParameterList",
											"src": "11011:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 564,
														"type": "modifier ()",
														"value": "whenNotPaused"
													},
													"id": 849,
													"name": "Identifier",
													"src": "10997:13:0"
												}
											],
											"id": 850,
											"name": "ModifierInvocation",
											"src": "10997:13:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 852,
																	"name": "Identifier",
																	"src": "11021:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "!",
																		"prefix": true,
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "bool"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 631,
																						"type": "mapping(address => bool)",
																						"value": "isBlackListed"
																					},
																					"id": 853,
																					"name": "Identifier",
																					"src": "11030:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 854,
																					"name": "Identifier",
																					"src": "11044:5:0"
																				}
																			],
																			"id": 855,
																			"name": "IndexAccess",
																			"src": "11030:20:0"
																		}
																	],
																	"id": 856,
																	"name": "UnaryOperation",
																	"src": "11029:21:0"
																}
															],
															"id": 857,
															"name": "FunctionCall",
															"src": "11021:30:0"
														}
													],
													"id": 858,
													"name": "ExpressionStatement",
													"src": "11021:30:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 859,
															"name": "Identifier",
															"src": "11065:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 851
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFromByLegacy",
																						"referencedDeclaration": 739,
																						"type": "function (address,address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 860,
																									"name": "Identifier",
																									"src": "11098:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 861,
																									"name": "Identifier",
																									"src": "11120:15:0"
																								}
																							],
																							"id": 862,
																							"name": "FunctionCall",
																							"src": "11098:38:0"
																						}
																					],
																					"id": 863,
																					"name": "MemberAccess",
																					"src": "11098:59:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 864,
																							"name": "Identifier",
																							"src": "11158:3:0"
																						}
																					],
																					"id": 865,
																					"name": "MemberAccess",
																					"src": "11158:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 866,
																					"name": "Identifier",
																					"src": "11170:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 845,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 867,
																					"name": "Identifier",
																					"src": "11177:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 847,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 868,
																					"name": "Identifier",
																					"src": "11182:6:0"
																				}
																			],
																			"id": 869,
																			"name": "FunctionCall",
																			"src": "11098:91:0"
																		}
																	],
																	"id": 870,
																	"name": "Return",
																	"src": "11091:98:0"
																}
															],
															"id": 871,
															"name": "Block",
															"src": "11077:123:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 851
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "transferFrom",
																						"referencedDeclaration": 481,
																						"type": "function (address,address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 872,
																							"name": "Identifier",
																							"src": "11227:5:0"
																						}
																					],
																					"id": 873,
																					"name": "MemberAccess",
																					"src": "11227:18:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 843,
																						"type": "address",
																						"value": "_from"
																					},
																					"id": 874,
																					"name": "Identifier",
																					"src": "11246:5:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 845,
																						"type": "address",
																						"value": "_to"
																					},
																					"id": 875,
																					"name": "Identifier",
																					"src": "11253:3:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 847,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 876,
																					"name": "Identifier",
																					"src": "11258:6:0"
																				}
																			],
																			"id": 877,
																			"name": "FunctionCall",
																			"src": "11227:38:0"
																		}
																	],
																	"id": 878,
																	"name": "Return",
																	"src": "11220:45:0"
																}
															],
															"id": 879,
															"name": "Block",
															"src": "11206:70:0"
														}
													],
													"id": 880,
													"name": "IfStatement",
													"src": "11061:215:0"
												}
											],
											"id": 881,
											"name": "Block",
											"src": "11011:271:0"
										}
									],
									"id": 882,
									"name": "FunctionDefinition",
									"src": "10927:355:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "balanceOf",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 346,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "who",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 883,
															"name": "ElementaryTypeName",
															"src": "11383:7:0"
														}
													],
													"id": 884,
													"name": "VariableDeclaration",
													"src": "11383:11:0"
												}
											],
											"id": 885,
											"name": "ParameterList",
											"src": "11382:13:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 906,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 886,
															"name": "ElementaryTypeName",
															"src": "11421:4:0"
														}
													],
													"id": 887,
													"name": "VariableDeclaration",
													"src": "11421:4:0"
												}
											],
											"id": 888,
											"name": "ParameterList",
											"src": "11420:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 889,
															"name": "Identifier",
															"src": "11441:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 888
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 890,
																									"name": "Identifier",
																									"src": "11474:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 891,
																									"name": "Identifier",
																									"src": "11496:15:0"
																								}
																							],
																							"id": 892,
																							"name": "FunctionCall",
																							"src": "11474:38:0"
																						}
																					],
																					"id": 893,
																					"name": "MemberAccess",
																					"src": "11474:48:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 884,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 894,
																					"name": "Identifier",
																					"src": "11523:3:0"
																				}
																			],
																			"id": 895,
																			"name": "FunctionCall",
																			"src": "11474:53:0"
																		}
																	],
																	"id": 896,
																	"name": "Return",
																	"src": "11467:60:0"
																}
															],
															"id": 897,
															"name": "Block",
															"src": "11453:85:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 888
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "balanceOf",
																						"referencedDeclaration": 346,
																						"type": "function (address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 898,
																							"name": "Identifier",
																							"src": "11565:5:0"
																						}
																					],
																					"id": 899,
																					"name": "MemberAccess",
																					"src": "11565:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 884,
																						"type": "address",
																						"value": "who"
																					},
																					"id": 900,
																					"name": "Identifier",
																					"src": "11581:3:0"
																				}
																			],
																			"id": 901,
																			"name": "FunctionCall",
																			"src": "11565:20:0"
																		}
																	],
																	"id": 902,
																	"name": "Return",
																	"src": "11558:27:0"
																}
															],
															"id": 903,
															"name": "Block",
															"src": "11544:52:0"
														}
													],
													"id": 904,
													"name": "IfStatement",
													"src": "11437:159:0"
												}
											],
											"id": 905,
											"name": "Block",
											"src": "11427:175:0"
										}
									],
									"id": 906,
									"name": "FunctionDefinition",
									"src": "11364:238:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "approve",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": 529,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 939,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 907,
															"name": "ElementaryTypeName",
															"src": "11701:7:0"
														}
													],
													"id": 908,
													"name": "VariableDeclaration",
													"src": "11701:16:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_value",
														"scope": 939,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 909,
															"name": "ElementaryTypeName",
															"src": "11719:4:0"
														}
													],
													"id": 910,
													"name": "VariableDeclaration",
													"src": "11719:11:0"
												}
											],
											"id": 911,
											"name": "ParameterList",
											"src": "11700:31:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 917,
											"name": "ParameterList",
											"src": "11763:0:0"
										},
										{
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 240,
														"type": "modifier (uint256)",
														"value": "onlyPayloadSize"
													},
													"id": 912,
													"name": "Identifier",
													"src": "11739:15:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"operator": "*",
														"type": "int_const 64"
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "32",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 2",
																"value": "2"
															},
															"id": 913,
															"name": "Literal",
															"src": "11755:1:0"
														},
														{
															"attributes": {
																"argumentTypes": null,
																"hexvalue": "3332",
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"subdenomination": null,
																"token": "number",
																"type": "int_const 32",
																"value": "32"
															},
															"id": 914,
															"name": "Literal",
															"src": "11759:2:0"
														}
													],
													"id": 915,
													"name": "BinaryOperation",
													"src": "11755:6:0"
												}
											],
											"id": 916,
											"name": "ModifierInvocation",
											"src": "11739:23:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 918,
															"name": "Identifier",
															"src": "11777:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 917
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approveByLegacy",
																						"referencedDeclaration": 748,
																						"type": "function (address,address,uint256) external"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract UpgradedStandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 749,
																										"type": "type(contract UpgradedStandardToken)",
																										"value": "UpgradedStandardToken"
																									},
																									"id": 919,
																									"name": "Identifier",
																									"src": "11810:21:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 920,
																									"name": "Identifier",
																									"src": "11832:15:0"
																								}
																							],
																							"id": 921,
																							"name": "FunctionCall",
																							"src": "11810:38:0"
																						}
																					],
																					"id": 922,
																					"name": "MemberAccess",
																					"src": "11810:54:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "sender",
																						"referencedDeclaration": null,
																						"type": "address"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1145,
																								"type": "msg",
																								"value": "msg"
																							},
																							"id": 923,
																							"name": "Identifier",
																							"src": "11865:3:0"
																						}
																					],
																					"id": 924,
																					"name": "MemberAccess",
																					"src": "11865:10:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 908,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 925,
																					"name": "Identifier",
																					"src": "11877:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 910,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 926,
																					"name": "Identifier",
																					"src": "11887:6:0"
																				}
																			],
																			"id": 927,
																			"name": "FunctionCall",
																			"src": "11810:84:0"
																		}
																	],
																	"id": 928,
																	"name": "Return",
																	"src": "11803:91:0"
																}
															],
															"id": 929,
															"name": "Block",
															"src": "11789:116:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 917
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "tuple()",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "approve",
																						"referencedDeclaration": 529,
																						"type": "function (address,uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 930,
																							"name": "Identifier",
																							"src": "11932:5:0"
																						}
																					],
																					"id": 931,
																					"name": "MemberAccess",
																					"src": "11932:13:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 908,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 932,
																					"name": "Identifier",
																					"src": "11946:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 910,
																						"type": "uint256",
																						"value": "_value"
																					},
																					"id": 933,
																					"name": "Identifier",
																					"src": "11956:6:0"
																				}
																			],
																			"id": 934,
																			"name": "FunctionCall",
																			"src": "11932:31:0"
																		}
																	],
																	"id": 935,
																	"name": "Return",
																	"src": "11925:38:0"
																}
															],
															"id": 936,
															"name": "Block",
															"src": "11911:63:0"
														}
													],
													"id": 937,
													"name": "IfStatement",
													"src": "11773:201:0"
												}
											],
											"id": 938,
											"name": "Block",
											"src": "11763:217:0"
										}
									],
									"id": 939,
									"name": "FunctionDefinition",
									"src": "11684:296:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "allowance",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 545,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_owner",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 940,
															"name": "ElementaryTypeName",
															"src": "12081:7:0"
														}
													],
													"id": 941,
													"name": "VariableDeclaration",
													"src": "12081:14:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "_spender",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 942,
															"name": "ElementaryTypeName",
															"src": "12097:7:0"
														}
													],
													"id": 943,
													"name": "VariableDeclaration",
													"src": "12097:16:0"
												}
											],
											"id": 944,
											"name": "ParameterList",
											"src": "12080:34:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "remaining",
														"scope": 967,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 945,
															"name": "ElementaryTypeName",
															"src": "12140:4:0"
														}
													],
													"id": 946,
													"name": "VariableDeclaration",
													"src": "12140:14:0"
												}
											],
											"id": 947,
											"name": "ParameterList",
											"src": "12139:16:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 948,
															"name": "Identifier",
															"src": "12170:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 947
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 949,
																									"name": "Identifier",
																									"src": "12203:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 950,
																									"name": "Identifier",
																									"src": "12217:15:0"
																								}
																							],
																							"id": 951,
																							"name": "FunctionCall",
																							"src": "12203:30:0"
																						}
																					],
																					"id": 952,
																					"name": "MemberAccess",
																					"src": "12203:40:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 941,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 953,
																					"name": "Identifier",
																					"src": "12244:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 943,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 954,
																					"name": "Identifier",
																					"src": "12252:8:0"
																				}
																			],
																			"id": 955,
																			"name": "FunctionCall",
																			"src": "12203:58:0"
																		}
																	],
																	"id": 956,
																	"name": "Return",
																	"src": "12196:65:0"
																}
															],
															"id": 957,
															"name": "Block",
															"src": "12182:90:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 947
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "allowance",
																						"referencedDeclaration": 545,
																						"type": "function (address,address) view returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 1184,
																								"type": "contract super TetherToken",
																								"value": "super"
																							},
																							"id": 958,
																							"name": "Identifier",
																							"src": "12299:5:0"
																						}
																					],
																					"id": 959,
																					"name": "MemberAccess",
																					"src": "12299:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 941,
																						"type": "address",
																						"value": "_owner"
																					},
																					"id": 960,
																					"name": "Identifier",
																					"src": "12315:6:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 943,
																						"type": "address",
																						"value": "_spender"
																					},
																					"id": 961,
																					"name": "Identifier",
																					"src": "12323:8:0"
																				}
																			],
																			"id": 962,
																			"name": "FunctionCall",
																			"src": "12299:33:0"
																		}
																	],
																	"id": 963,
																	"name": "Return",
																	"src": "12292:40:0"
																}
															],
															"id": 964,
															"name": "Block",
															"src": "12278:65:0"
														}
													],
													"id": 965,
													"name": "IfStatement",
													"src": "12166:177:0"
												}
											],
											"id": 966,
											"name": "Block",
											"src": "12156:193:0"
										}
									],
									"id": 967,
									"name": "FunctionDefinition",
									"src": "12062:287:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "deprecate",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "_upgradedAddress",
														"scope": 987,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 968,
															"name": "ElementaryTypeName",
															"src": "12431:7:0"
														}
													],
													"id": 969,
													"name": "VariableDeclaration",
													"src": "12431:24:0"
												}
											],
											"id": 970,
											"name": "ParameterList",
											"src": "12430:26:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 973,
											"name": "ParameterList",
											"src": "12474:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 971,
													"name": "Identifier",
													"src": "12464:9:0"
												}
											],
											"id": 972,
											"name": "ModifierInvocation",
											"src": "12464:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "bool"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 765,
																		"type": "bool",
																		"value": "deprecated"
																	},
																	"id": 974,
																	"name": "Identifier",
																	"src": "12484:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"hexvalue": "74727565",
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"subdenomination": null,
																		"token": "bool",
																		"type": "bool",
																		"value": "true"
																	},
																	"id": 975,
																	"name": "Literal",
																	"src": "12497:4:0"
																}
															],
															"id": 976,
															"name": "Assignment",
															"src": "12484:17:0"
														}
													],
													"id": 977,
													"name": "ExpressionStatement",
													"src": "12484:17:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 763,
																		"type": "address",
																		"value": "upgradedAddress"
																	},
																	"id": 978,
																	"name": "Identifier",
																	"src": "12511:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 969,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 979,
																	"name": "Identifier",
																	"src": "12529:16:0"
																}
															],
															"id": 980,
															"name": "Assignment",
															"src": "12511:34:0"
														}
													],
													"id": 981,
													"name": "ExpressionStatement",
													"src": "12511:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1135,
																		"type": "function (address)",
																		"value": "Deprecate"
																	},
																	"id": 982,
																	"name": "Identifier",
																	"src": "12555:9:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 969,
																		"type": "address",
																		"value": "_upgradedAddress"
																	},
																	"id": 983,
																	"name": "Identifier",
																	"src": "12565:16:0"
																}
															],
															"id": 984,
															"name": "FunctionCall",
															"src": "12555:27:0"
														}
													],
													"id": 985,
													"name": "ExpressionStatement",
													"src": "12555:27:0"
												}
											],
											"id": 986,
											"name": "Block",
											"src": "12474:115:0"
										}
									],
									"id": 987,
									"name": "FunctionDefinition",
									"src": "12412:177:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "totalSupply",
										"payable": false,
										"scope": 1142,
										"stateMutability": "view",
										"superFunction": 146,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 988,
											"name": "ParameterList",
											"src": "12672:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 1005,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 989,
															"name": "ElementaryTypeName",
															"src": "12700:4:0"
														}
													],
													"id": 990,
													"name": "VariableDeclaration",
													"src": "12700:4:0"
												}
											],
											"id": 991,
											"name": "ParameterList",
											"src": "12699:6:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 765,
																"type": "bool",
																"value": "deprecated"
															},
															"id": 992,
															"name": "Identifier",
															"src": "12720:10:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 991
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"arguments": [
																					null
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"isStructConstructorCall": false,
																				"lValueRequested": false,
																				"names": [
																					null
																				],
																				"type": "uint256",
																				"type_conversion": false
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": [
																							null
																						],
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"member_name": "totalSupply",
																						"referencedDeclaration": 146,
																						"type": "function () view external returns (uint256)"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"isStructConstructorCall": false,
																								"lValueRequested": false,
																								"names": [
																									null
																								],
																								"type": "contract StandardToken",
																								"type_conversion": true
																							},
																							"children": [
																								{
																									"attributes": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 546,
																										"type": "type(contract StandardToken)",
																										"value": "StandardToken"
																									},
																									"id": 993,
																									"name": "Identifier",
																									"src": "12753:13:0"
																								},
																								{
																									"attributes": {
																										"argumentTypes": null,
																										"overloadedDeclarations": [
																											null
																										],
																										"referencedDeclaration": 763,
																										"type": "address",
																										"value": "upgradedAddress"
																									},
																									"id": 994,
																									"name": "Identifier",
																									"src": "12767:15:0"
																								}
																							],
																							"id": 995,
																							"name": "FunctionCall",
																							"src": "12753:30:0"
																						}
																					],
																					"id": 996,
																					"name": "MemberAccess",
																					"src": "12753:42:0"
																				}
																			],
																			"id": 997,
																			"name": "FunctionCall",
																			"src": "12753:44:0"
																		}
																	],
																	"id": 998,
																	"name": "Return",
																	"src": "12746:51:0"
																}
															],
															"id": 999,
															"name": "Block",
															"src": "12732:76:0"
														},
														{
															"children": [
																{
																	"attributes": {
																		"functionReturnParameters": 991
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1000,
																			"name": "Identifier",
																			"src": "12835:12:0"
																		}
																	],
																	"id": 1001,
																	"name": "Return",
																	"src": "12828:19:0"
																}
															],
															"id": 1002,
															"name": "Block",
															"src": "12814:44:0"
														}
													],
													"id": 1003,
													"name": "IfStatement",
													"src": "12716:142:0"
												}
											],
											"id": 1004,
											"name": "Block",
											"src": "12706:158:0"
										}
									],
									"id": 1005,
									"name": "FunctionDefinition",
									"src": "12652:212:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "issue",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1047,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1006,
															"name": "ElementaryTypeName",
															"src": "13037:4:0"
														}
													],
													"id": 1007,
													"name": "VariableDeclaration",
													"src": "13037:11:0"
												}
											],
											"id": 1008,
											"name": "ParameterList",
											"src": "13036:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1011,
											"name": "ParameterList",
											"src": "13067:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1009,
													"name": "Identifier",
													"src": "13057:9:0"
												}
											],
											"id": 1010,
											"name": "ModifierInvocation",
											"src": "13057:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1012,
																	"name": "Identifier",
																	"src": "13077:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 141,
																						"type": "uint256",
																						"value": "_totalSupply"
																					},
																					"id": 1013,
																					"name": "Identifier",
																					"src": "13085:12:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1007,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1014,
																					"name": "Identifier",
																					"src": "13100:6:0"
																				}
																			],
																			"id": 1015,
																			"name": "BinaryOperation",
																			"src": "13085:21:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1016,
																			"name": "Identifier",
																			"src": "13109:12:0"
																		}
																	],
																	"id": 1017,
																	"name": "BinaryOperation",
																	"src": "13085:36:0"
																}
															],
															"id": 1018,
															"name": "FunctionCall",
															"src": "13077:45:0"
														}
													],
													"id": 1019,
													"name": "ExpressionStatement",
													"src": "13077:45:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1020,
																	"name": "Identifier",
																	"src": "13132:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "+",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"type": "uint256"
																					},
																					"children": [
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 216,
																								"type": "mapping(address => uint256)",
																								"value": "balances"
																							},
																							"id": 1021,
																							"name": "Identifier",
																							"src": "13140:8:0"
																						},
																						{
																							"attributes": {
																								"argumentTypes": null,
																								"overloadedDeclarations": [
																									null
																								],
																								"referencedDeclaration": 99,
																								"type": "address",
																								"value": "owner"
																							},
																							"id": 1022,
																							"name": "Identifier",
																							"src": "13149:5:0"
																						}
																					],
																					"id": 1023,
																					"name": "IndexAccess",
																					"src": "13140:15:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1007,
																						"type": "uint256",
																						"value": "amount"
																					},
																					"id": 1024,
																					"name": "Identifier",
																					"src": "13158:6:0"
																				}
																			],
																			"id": 1025,
																			"name": "BinaryOperation",
																			"src": "13140:24:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1026,
																					"name": "Identifier",
																					"src": "13167:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1027,
																					"name": "Identifier",
																					"src": "13176:5:0"
																				}
																			],
																			"id": 1028,
																			"name": "IndexAccess",
																			"src": "13167:15:0"
																		}
																	],
																	"id": 1029,
																	"name": "BinaryOperation",
																	"src": "13140:42:0"
																}
															],
															"id": 1030,
															"name": "FunctionCall",
															"src": "13132:51:0"
														}
													],
													"id": 1031,
													"name": "ExpressionStatement",
													"src": "13132:51:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1032,
																			"name": "Identifier",
																			"src": "13194:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1033,
																			"name": "Identifier",
																			"src": "13203:5:0"
																		}
																	],
																	"id": 1034,
																	"name": "IndexAccess",
																	"src": "13194:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1035,
																	"name": "Identifier",
																	"src": "13213:6:0"
																}
															],
															"id": 1036,
															"name": "Assignment",
															"src": "13194:25:0"
														}
													],
													"id": 1037,
													"name": "ExpressionStatement",
													"src": "13194:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "+=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1038,
																	"name": "Identifier",
																	"src": "13229:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1039,
																	"name": "Identifier",
																	"src": "13245:6:0"
																}
															],
															"id": 1040,
															"name": "Assignment",
															"src": "13229:22:0"
														}
													],
													"id": 1041,
													"name": "ExpressionStatement",
													"src": "13229:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1127,
																		"type": "function (uint256)",
																		"value": "Issue"
																	},
																	"id": 1042,
																	"name": "Identifier",
																	"src": "13261:5:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1007,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1043,
																	"name": "Identifier",
																	"src": "13267:6:0"
																}
															],
															"id": 1044,
															"name": "FunctionCall",
															"src": "13261:13:0"
														}
													],
													"id": 1045,
													"name": "ExpressionStatement",
													"src": "13261:13:0"
												}
											],
											"id": 1046,
											"name": "Block",
											"src": "13067:214:0"
										}
									],
									"id": 1047,
									"name": "FunctionDefinition",
									"src": "13022:259:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "redeem",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "amount",
														"scope": 1083,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1048,
															"name": "ElementaryTypeName",
															"src": "13521:4:0"
														}
													],
													"id": 1049,
													"name": "VariableDeclaration",
													"src": "13521:11:0"
												}
											],
											"id": 1050,
											"name": "ParameterList",
											"src": "13520:13:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1053,
											"name": "ParameterList",
											"src": "13551:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1051,
													"name": "Identifier",
													"src": "13541:9:0"
												}
											],
											"id": 1052,
											"name": "ModifierInvocation",
											"src": "13541:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1054,
																	"name": "Identifier",
																	"src": "13561:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 141,
																				"type": "uint256",
																				"value": "_totalSupply"
																			},
																			"id": 1055,
																			"name": "Identifier",
																			"src": "13569:12:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1049,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1056,
																			"name": "Identifier",
																			"src": "13585:6:0"
																		}
																	],
																	"id": 1057,
																	"name": "BinaryOperation",
																	"src": "13569:22:0"
																}
															],
															"id": 1058,
															"name": "FunctionCall",
															"src": "13561:31:0"
														}
													],
													"id": 1059,
													"name": "ExpressionStatement",
													"src": "13561:31:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1060,
																	"name": "Identifier",
																	"src": "13602:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": ">=",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 216,
																						"type": "mapping(address => uint256)",
																						"value": "balances"
																					},
																					"id": 1061,
																					"name": "Identifier",
																					"src": "13610:8:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 99,
																						"type": "address",
																						"value": "owner"
																					},
																					"id": 1062,
																					"name": "Identifier",
																					"src": "13619:5:0"
																				}
																			],
																			"id": 1063,
																			"name": "IndexAccess",
																			"src": "13610:15:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1049,
																				"type": "uint256",
																				"value": "amount"
																			},
																			"id": 1064,
																			"name": "Identifier",
																			"src": "13629:6:0"
																		}
																	],
																	"id": 1065,
																	"name": "BinaryOperation",
																	"src": "13610:25:0"
																}
															],
															"id": 1066,
															"name": "FunctionCall",
															"src": "13602:34:0"
														}
													],
													"id": 1067,
													"name": "ExpressionStatement",
													"src": "13602:34:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 141,
																		"type": "uint256",
																		"value": "_totalSupply"
																	},
																	"id": 1068,
																	"name": "Identifier",
																	"src": "13647:12:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1069,
																	"name": "Identifier",
																	"src": "13663:6:0"
																}
															],
															"id": 1070,
															"name": "Assignment",
															"src": "13647:22:0"
														}
													],
													"id": 1071,
													"name": "ExpressionStatement",
													"src": "13647:22:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "-=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 216,
																				"type": "mapping(address => uint256)",
																				"value": "balances"
																			},
																			"id": 1072,
																			"name": "Identifier",
																			"src": "13679:8:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 99,
																				"type": "address",
																				"value": "owner"
																			},
																			"id": 1073,
																			"name": "Identifier",
																			"src": "13688:5:0"
																		}
																	],
																	"id": 1074,
																	"name": "IndexAccess",
																	"src": "13679:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1075,
																	"name": "Identifier",
																	"src": "13698:6:0"
																}
															],
															"id": 1076,
															"name": "Assignment",
															"src": "13679:25:0"
														}
													],
													"id": 1077,
													"name": "ExpressionStatement",
													"src": "13679:25:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1131,
																		"type": "function (uint256)",
																		"value": "Redeem"
																	},
																	"id": 1078,
																	"name": "Identifier",
																	"src": "13714:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1049,
																		"type": "uint256",
																		"value": "amount"
																	},
																	"id": 1079,
																	"name": "Identifier",
																	"src": "13721:6:0"
																}
															],
															"id": 1080,
															"name": "FunctionCall",
															"src": "13714:14:0"
														}
													],
													"id": 1081,
													"name": "ExpressionStatement",
													"src": "13714:14:0"
												}
											],
											"id": 1082,
											"name": "Block",
											"src": "13551:184:0"
										}
									],
									"id": 1083,
									"name": "FunctionDefinition",
									"src": "13505:230:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"name": "setParams",
										"payable": false,
										"scope": 1142,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "newBasisPoints",
														"scope": 1123,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1084,
															"name": "ElementaryTypeName",
															"src": "13760:4:0"
														}
													],
													"id": 1085,
													"name": "VariableDeclaration",
													"src": "13760:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"name": "newMaxFee",
														"scope": 1123,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1086,
															"name": "ElementaryTypeName",
															"src": "13781:4:0"
														}
													],
													"id": 1087,
													"name": "VariableDeclaration",
													"src": "13781:14:0"
												}
											],
											"id": 1088,
											"name": "ParameterList",
											"src": "13759:37:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 1091,
											"name": "ParameterList",
											"src": "13814:0:0"
										},
										{
											"attributes": {
												"arguments": [
													null
												]
											},
											"children": [
												{
													"attributes": {
														"argumentTypes": null,
														"overloadedDeclarations": [
															null
														],
														"referencedDeclaration": 119,
														"type": "modifier ()",
														"value": "onlyOwner"
													},
													"id": 1089,
													"name": "Identifier",
													"src": "13804:9:0"
												}
											],
											"id": 1090,
											"name": "ModifierInvocation",
											"src": "13804:9:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1092,
																	"name": "Identifier",
																	"src": "13912:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1085,
																				"type": "uint256",
																				"value": "newBasisPoints"
																			},
																			"id": 1093,
																			"name": "Identifier",
																			"src": "13920:14:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3230",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 20",
																				"value": "20"
																			},
																			"id": 1094,
																			"name": "Literal",
																			"src": "13937:2:0"
																		}
																	],
																	"id": 1095,
																	"name": "BinaryOperation",
																	"src": "13920:19:0"
																}
															],
															"id": 1096,
															"name": "FunctionCall",
															"src": "13912:28:0"
														}
													],
													"id": 1097,
													"name": "ExpressionStatement",
													"src": "13912:28:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1163,
																		"type": "function (bool) pure",
																		"value": "require"
																	},
																	"id": 1098,
																	"name": "Identifier",
																	"src": "13950:7:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "<",
																		"type": "bool"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 1087,
																				"type": "uint256",
																				"value": "newMaxFee"
																			},
																			"id": 1099,
																			"name": "Identifier",
																			"src": "13958:9:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "3530",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 50",
																				"value": "50"
																			},
																			"id": 1100,
																			"name": "Literal",
																			"src": "13970:2:0"
																		}
																	],
																	"id": 1101,
																	"name": "BinaryOperation",
																	"src": "13958:14:0"
																}
															],
															"id": 1102,
															"name": "FunctionCall",
															"src": "13950:23:0"
														}
													],
													"id": 1103,
													"name": "ExpressionStatement",
													"src": "13950:23:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1104,
																	"name": "Identifier",
																	"src": "13984:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1085,
																		"type": "uint256",
																		"value": "newBasisPoints"
																	},
																	"id": 1105,
																	"name": "Identifier",
																	"src": "14002:14:0"
																}
															],
															"id": 1106,
															"name": "Assignment",
															"src": "13984:32:0"
														}
													],
													"id": 1107,
													"name": "ExpressionStatement",
													"src": "13984:32:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1108,
																	"name": "Identifier",
																	"src": "14026:10:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": false,
																		"lValueRequested": false,
																		"names": [
																			null
																		],
																		"type": "uint256",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"member_name": "mul",
																				"referencedDeclaration": 34,
																				"type": "function (uint256,uint256) pure returns (uint256)"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 1087,
																						"type": "uint256",
																						"value": "newMaxFee"
																					},
																					"id": 1109,
																					"name": "Identifier",
																					"src": "14039:9:0"
																				}
																			],
																			"id": 1110,
																			"name": "MemberAccess",
																			"src": "14039:13:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"operator": "**",
																				"type": "uint256"
																			},
																			"children": [
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"hexvalue": "3130",
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"subdenomination": null,
																						"token": "number",
																						"type": "int_const 10",
																						"value": "10"
																					},
																					"id": 1111,
																					"name": "Literal",
																					"src": "14053:2:0"
																				},
																				{
																					"attributes": {
																						"argumentTypes": null,
																						"overloadedDeclarations": [
																							null
																						],
																						"referencedDeclaration": 761,
																						"type": "uint256",
																						"value": "decimals"
																					},
																					"id": 1112,
																					"name": "Identifier",
																					"src": "14057:8:0"
																				}
																			],
																			"id": 1113,
																			"name": "BinaryOperation",
																			"src": "14053:12:0"
																		}
																	],
																	"id": 1114,
																	"name": "FunctionCall",
																	"src": "14039:27:0"
																}
															],
															"id": 1115,
															"name": "Assignment",
															"src": "14026:40:0"
														}
													],
													"id": 1116,
													"name": "ExpressionStatement",
													"src": "14026:40:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"isStructConstructorCall": false,
																"lValueRequested": false,
																"names": [
																	null
																],
																"type": "tuple()",
																"type_conversion": false
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 1141,
																		"type": "function (uint256,uint256)",
																		"value": "Params"
																	},
																	"id": 1117,
																	"name": "Identifier",
																	"src": "14077:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 219,
																		"type": "uint256",
																		"value": "basisPointsRate"
																	},
																	"id": 1118,
																	"name": "Identifier",
																	"src": "14084:15:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 222,
																		"type": "uint256",
																		"value": "maximumFee"
																	},
																	"id": 1119,
																	"name": "Identifier",
																	"src": "14101:10:0"
																}
															],
															"id": 1120,
															"name": "FunctionCall",
															"src": "14077:35:0"
														}
													],
													"id": 1121,
													"name": "ExpressionStatement",
													"src": "14077:35:0"
												}
											],
											"id": 1122,
											"name": "Block",
											"src": "13814:305:0"
										}
									],
									"id": 1123,
									"name": "FunctionDefinition",
									"src": "13741:378:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Issue"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1127,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1124,
															"name": "ElementaryTypeName",
															"src": "14177:4:0"
														}
													],
													"id": 1125,
													"name": "VariableDeclaration",
													"src": "14177:11:0"
												}
											],
											"id": 1126,
											"name": "ParameterList",
											"src": "14176:13:0"
										}
									],
									"id": 1127,
									"name": "EventDefinition",
									"src": "14165:25:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Redeem"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "amount",
														"scope": 1131,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1128,
															"name": "ElementaryTypeName",
															"src": "14248:4:0"
														}
													],
													"id": 1129,
													"name": "VariableDeclaration",
													"src": "14248:11:0"
												}
											],
											"id": 1130,
											"name": "ParameterList",
											"src": "14247:13:0"
										}
									],
									"id": 1131,
									"name": "EventDefinition",
									"src": "14235:26:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Deprecate"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "newAddress",
														"scope": 1135,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "address",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "address",
																"type": "address"
															},
															"id": 1132,
															"name": "ElementaryTypeName",
															"src": "14325:7:0"
														}
													],
													"id": 1133,
													"name": "VariableDeclaration",
													"src": "14325:18:0"
												}
											],
											"id": 1134,
											"name": "ParameterList",
											"src": "14324:20:0"
										}
									],
									"id": 1135,
									"name": "EventDefinition",
									"src": "14309:36:0"
								},
								{
									"attributes": {
										"anonymous": false,
										"name": "Params"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "feeBasisPoints",
														"scope": 1141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1136,
															"name": "ElementaryTypeName",
															"src": "14405:4:0"
														}
													],
													"id": 1137,
													"name": "VariableDeclaration",
													"src": "14405:19:0"
												},
												{
													"attributes": {
														"constant": false,
														"indexed": false,
														"name": "maxFee",
														"scope": 1141,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 1138,
															"name": "ElementaryTypeName",
															"src": "14426:4:0"
														}
													],
													"id": 1139,
													"name": "VariableDeclaration",
													"src": "14426:11:0"
												}
											],
											"id": 1140,
											"name": "ParameterList",
											"src": "14404:34:0"
										}
									],
									"id": 1141,
									"name": "EventDefinition",
									"src": "14392:47:0"
								}
							],
							"id": 1142,
							"name": "ContractDefinition",
							"src": "9660:4781:0"
						}
					],
					"id": 1143,
					"name": "SourceUnit",
					"src": "0:14441:0"
				}
			}
		}
	}
}