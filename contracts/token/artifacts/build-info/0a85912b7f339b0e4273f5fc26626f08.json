{
	"id": "0a85912b7f339b0e4273f5fc26626f08",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/StrangeUSDT.sol": {
				"content": "pragma solidity ^0.4.18;\n\nimport \"./SafeMath.sol\";\nimport \"./Owned.sol\";\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StrangeUSDT is Owned {\n\n  using SafeMath for uint256;\n\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n  event Mint(address indexed to, uint256 amount);\n  event MintFinished();\n\n  mapping (address => mapping (address => uint256)) internal allowed;\n  mapping(address => uint256) balances;\n\n  uint256 totalSupply_;\n  bool public mintingFinished = false;\n  string public constant symbol = \"Strange USDT\";\n  uint8  public decimals = 18;\n\n  constructor(address _to, uint256 _amount) public {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n  }\n\n  /**\n  * @dev total number of tokens in existence\n  */\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  /**\n  * @dev transfer token for a specified address\n  * @param _to The address to transfer to.\n  * @param _value The amount to be transferred.\n  */\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0),\"Only allow send to other.\");\n    require(_value <= balances[msg.sender], \"Insufficient fund\");\n\n    balances[msg.sender] = balances[msg.sender].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    emit Transfer(msg.sender, _to, _value);\n    return true;\n  }\n\n  /**\n  * @dev Gets the balance of the specified address.\n  * @param _owner The address to query the the balance of.\n  * @return An uint256 representing the amount owned by the passed address.\n  */\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n\n\n  /**\n   * @dev Transfer tokens from one address to another\n   * @param _from address The address which you want to send tokens from\n   * @param _to address The address which you want to transfer to\n   * @param _value uint256 the amount of tokens to be transferred\n   */\n  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[_from]);\n    require(_value <= allowed[_from][msg.sender]);\n\n    balances[_from] = balances[_from].sub(_value);\n    balances[_to] = balances[_to].add(_value);\n    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n    emit Transfer(_from, _to, _value);\n    return true;\n  }\n\n  /**\n   * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   *\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\n   * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n   * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * @param _spender The address which will spend the funds.\n   * @param _value The amount of tokens to be spent.\n   */\n  function approve(address _spender, uint256 _value) public returns (bool) {\n    allowed[msg.sender][_spender] = _value;\n    emit Approval(msg.sender, _spender, _value);\n    return true;\n  }\n\n  /**\n   * @dev Function to check the amount of tokens that an owner allowed to a spender.\n   * @param _owner address The address which owns the funds.\n   * @param _spender address The address which will spend the funds.\n   * @return A uint256 specifying the amount of tokens still available for the spender.\n   */\n  function allowance(address _owner, address _spender) public view returns (uint256) {\n    return allowed[_owner][_spender];\n  }\n\n  /**\n   * @dev Increase the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To increment\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _addedValue The amount of tokens to increase the allowance by.\n   */\n  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {\n    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n  /**\n   * @dev Decrease the amount of tokens that an owner allowed to a spender.\n   *\n   * approve should be called when allowed[_spender] == 0. To decrement\n   * allowed value is better to use this function to avoid 2 calls (and wait until\n   * the first transaction is mined)\n   * From MonolithDAO Token.sol\n   * @param _spender The address which will spend the funds.\n   * @param _subtractedValue The amount of tokens to decrease the allowance by.\n   */\n  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {\n    uint oldValue = allowed[msg.sender][_spender];\n    if (_subtractedValue > oldValue) {\n      allowed[msg.sender][_spender] = 0;\n    } else {\n      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n    }\n    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n    return true;\n  }\n\n\n\n\n  modifier canMint() {\n    require(!mintingFinished);\n    _;\n  }\n\n  /**\n   * @dev Function to mint tokens\n   * @param _to The address that will receive the minted tokens.\n   * @param _amount The amount of tokens to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {\n    totalSupply_ = totalSupply_.add(_amount);\n    balances[_to] = balances[_to].add(_amount);\n    emit Mint(_to, _amount);\n    emit Transfer(address(0), _to, _amount);\n    return true;\n  }\n\n  /**\n   * @dev Function to stop minting new tokens.\n   * @return True if the operation was successful.\n   */\n  function finishMinting() onlyOwner canMint public returns (bool) {\n    mintingFinished = true;\n    emit MintFinished();\n    return true;\n  }\n\n}"
			},
			"contracts/token/Owned.sol": {
				"content": "pragma solidity 0.4.24;\n\ncontract Owned {\n    address public owner;\n\n    event SetOwner(address indexed previousOwner, address indexed newOwner);\n\n    modifier onlyOwner {\n        require(msg.sender == owner);\n        _;\n    }\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    function setOwner(address newOwner) public onlyOwner {\n        emit SetOwner(owner, newOwner);\n        owner = newOwner;\n    }\n}"
			},
			"contracts/token/SafeMath.sol": {
				"content": "pragma solidity 0.4.24;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n\tfunction mul(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a * b;\n\t\tassert(a == 0 || c / a == b);\n\t\treturn c;\n\t}\n\n\tfunction div(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a / b;\n\t\treturn c;\n\t}\n\n\tfunction sub(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tassert(b <= a);\n\t\treturn a - b;\n\t}\n\n\tfunction add(uint256 a, uint256 b) internal pure returns (uint256) {\n\t\tuint256 c = a + b;\n\t\tassert(c >= a);\n\t\treturn c;\n\t}\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/token/Owned.sol": {
				"Owned": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "SetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/token/Owned.sol\":25:422  contract Owned {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/Owned.sol\":232:288  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/token/Owned.sol\":232:288  constructor() public {... */\n  pop\n    /* \"contracts/token/Owned.sol\":271:281  msg.sender */\n  caller\n    /* \"contracts/token/Owned.sol\":263:268  owner */\n  0x0\n  dup1\n    /* \"contracts/token/Owned.sol\":263:281  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/Owned.sol\":25:422  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/Owned.sol\":25:422  contract Owned {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x13af4035\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n      pop\n      tag_5\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_6)\n    tag_5:\n      stop\n        /* \"contracts/token/Owned.sol\":46:66  address public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"contracts/token/Owned.sol\":46:66  address public owner */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n    tag_6:\n        /* \"contracts/token/Owned.sol\":202:207  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:198  msg.sender */\n      caller\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/Owned.sol\":180:208  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_11\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_11:\n        /* \"contracts/token/Owned.sol\":378:386  newOwner */\n      dup1\n        /* \"contracts/token/Owned.sol\":362:387  SetOwner(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":371:376  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":362:387  SetOwner(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c663\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/Owned.sol\":405:413  newOwner */\n      dup1\n        /* \"contracts/token/Owned.sol\":397:402  owner */\n      0x0\n      dup1\n        /* \"contracts/token/Owned.sol\":397:413  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/token/Owned.sol\":46:66  address public owner */\n    tag_9:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058201ed840b2d9d84f09c606d26475f213e0ebe817b7a67295de4ff0983bb1636dcb0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610255806100606000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100515780638da5cb5b14610094575b600080fd5b34801561005d57600080fd5b50610092600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100eb565b005b3480156100a057600080fd5b506100a9610204565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c66360405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058201ed840b2d9d84f09c606d26475f213e0ebe817b7a67295de4ff0983bb1636dcb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x255 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBF985117192C8F614A58AAF97226BB80A754772F5F6EDF06F87C675F2E6C663 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1e 0xd8 BLOCKHASH 0xb2 0xd9 0xd8 0x4f MULMOD 0xc6 MOD 0xd2 PUSH5 0x75F213E0EB 0xe8 OR 0xb7 0xa6 PUSH19 0x95DE4FF0983BB1636DCB002900000000000000 ",
							"sourceMap": "25:397:0:-;;;232:56;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:56:0;271:10;263:5;;:18;;;;;;;;;;;;;;;;;;25:397;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313af4035146100515780638da5cb5b14610094575b600080fd5b34801561005d57600080fd5b50610092600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100eb565b005b3480156100a057600080fd5b506100a9610204565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c66360405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a723058201ed840b2d9d84f09c606d26475f213e0ebe817b7a67295de4ff0983bb1636dcb0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x92 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9 PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBF985117192C8F614A58AAF97226BB80A754772F5F6EDF06F87C675F2E6C663 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1e 0xd8 BLOCKHASH 0xb2 0xd9 0xd8 0x4f MULMOD 0xc6 MOD 0xd2 PUSH5 0x75F213E0EB 0xe8 OR 0xb7 0xa6 PUSH19 0x95DE4FF0983BB1636DCB002900000000000000 ",
							"sourceMap": "25:397:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;46:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;294:126;202:5;;;;;;;;;;;188:19;;:10;:19;;;180:28;;;;;;;;378:8;362:25;;371:5;;;;;;;;;;;362:25;;;;;;;;;;;;405:8;397:5;;:16;;;;;;;;;;;;;;;;;;294:126;:::o;46:20::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "119400",
								"executionCost": "20431",
								"totalCost": "139831"
							},
							"external": {
								"owner()": "464",
								"setOwner(address)": "22521"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 422,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "MSTORE"
								},
								{
									"begin": 232,
									"end": 288,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 232,
									"end": 288,
									"name": "POP"
								},
								{
									"begin": 271,
									"end": 281,
									"name": "CALLER"
								},
								{
									"begin": 263,
									"end": 268,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 263,
									"end": 268,
									"name": "DUP1"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "EXP"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "DUP2"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SLOAD"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "DUP2"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "MUL"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "NOT"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "AND"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "DUP4"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "AND"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "MUL"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "OR"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SSTORE"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 422,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201ed840b2d9d84f09c606d26475f213e0ebe817b7a67295de4ff0983bb1636dcb0029",
									".code": [
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 422,
											"name": "REVERT"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "AND"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP3"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP2"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "STOP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP3"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SUB"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "RETURN"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SLOAD"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "EXP"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DIV"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 198,
											"name": "CALLER"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "EQ"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "REVERT"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPDEST"
										},
										{
											"begin": 378,
											"end": 386,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SLOAD"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "EXP"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DIV"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "CBF985117192C8F614A58AAF97226BB80A754772F5F6EDF06F87C675F2E6C663"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "MLOAD"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "MLOAD"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "SWAP2"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "SUB"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "LOG3"
										},
										{
											"begin": 405,
											"end": 413,
											"name": "DUP1"
										},
										{
											"begin": 397,
											"end": 402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 397,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "EXP"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "DUP2"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SLOAD"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "DUP2"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "MUL"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "NOT"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "AND"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "DUP4"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "AND"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "MUL"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "OR"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SSTORE"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SLOAD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "EXP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DIV"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/token/Owned.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/Owned.sol\":{\"keccak256\":\"0xe581564b579e296a5a9faa087fddccd001c831f3189cffaeeb725803f5f2dbaa\",\"urls\":[\"bzzr://32f898c33c3db67a6a35c83821124d087c51afc832e71b1cd92917f3f1c42383\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/token/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {},
						"title": "SafeMath"
					},
					"evm": {
						"assembly": "    /* \"contracts/token/SafeMath.sol\":115:613  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/SafeMath.sol\":115:613  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a723058207573013c98b79ff94fb60bcf9efef79422372e0154111b72ad8289fb2bb89e2f0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058207573013c98b79ff94fb60bcf9efef79422372e0154111b72ad8289fb2bb89e2f0029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH22 0x73013C98B79FF94FB60BCF9EFEF79422372E0154111B PUSH19 0xAD8289FB2BB89E2F0029000000000000000000 ",
							"sourceMap": "115:498:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a723058207573013c98b79ff94fb60bcf9efef79422372e0154111b72ad8289fb2bb89e2f0029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH22 0x73013C98B79FF94FB60BCF9EFEF79422372E0154111B PUSH19 0xAD8289FB2BB89E2F0029000000000000000000 ",
							"sourceMap": "115:498:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 613,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 613,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058207573013c98b79ff94fb60bcf9efef79422372e0154111b72ad8289fb2bb89e2f0029",
									".code": [
										{
											"begin": 115,
											"end": 613,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "ADDRESS"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "EQ"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "MSTORE"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "DUP1"
										},
										{
											"begin": 115,
											"end": 613,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{},\"title\":\"SafeMath\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/token/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/SafeMath.sol\":{\"keccak256\":\"0x8e1254f51ec01c97ecf7f715db2b8b9ed88b26cd2a164e3d271824c4a9142b29\",\"urls\":[\"bzzr://d31544e66309fecf6eeaa8f6dda1b3422bf93bef1344d2a8cbbd69224358eeed\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/token/StrangeUSDT.sol": {
				"StrangeUSDT": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "mintingFinished",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_from",
									"type": "address"
								},
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "finishMinting",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_spender",
									"type": "address"
								},
								{
									"name": "_addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								},
								{
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "MintFinished",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "SetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Function to check the amount of tokens that an owner allowed to a spender.",
								"params": {
									"_owner": "address The address which owns the funds.",
									"_spender": "address The address which will spend the funds."
								},
								"return": "A uint256 specifying the amount of tokens still available for the spender."
							},
							"approve(address,uint256)": {
								"details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_value": "The amount of tokens to be spent."
								}
							},
							"balanceOf(address)": {
								"details": "Gets the balance of the specified address.",
								"params": {
									"_owner": "The address to query the the balance of."
								},
								"return": "An uint256 representing the amount owned by the passed address."
							},
							"decreaseApproval(address,uint256)": {
								"details": "Decrease the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
								"params": {
									"_spender": "The address which will spend the funds.",
									"_subtractedValue": "The amount of tokens to decrease the allowance by."
								}
							},
							"finishMinting()": {
								"details": "Function to stop minting new tokens.",
								"return": "True if the operation was successful."
							},
							"increaseApproval(address,uint256)": {
								"details": "Increase the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
								"params": {
									"_addedValue": "The amount of tokens to increase the allowance by.",
									"_spender": "The address which will spend the funds."
								}
							},
							"mint(address,uint256)": {
								"details": "Function to mint tokens",
								"params": {
									"_amount": "The amount of tokens to mint.",
									"_to": "The address that will receive the minted tokens."
								},
								"return": "A boolean that indicates if the operation was successful."
							},
							"totalSupply()": {
								"details": "total number of tokens in existence"
							},
							"transfer(address,uint256)": {
								"details": "transfer token for a specified address",
								"params": {
									"_to": "The address to transfer to.",
									"_value": "The amount to be transferred."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfer tokens from one address to another",
								"params": {
									"_from": "address The address which you want to send tokens from",
									"_to": "address The address which you want to transfer to",
									"_value": "uint256 the amount of tokens to be transferred"
								}
							}
						},
						"title": "Standard ERC20 token"
					},
					"evm": {
						"assembly": "    /* \"contracts/token/StrangeUSDT.sol\":341:6406  contract StrangeUSDT is Owned {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/StrangeUSDT.sol\":803:808  false */\n  0x0\n    /* \"contracts/token/StrangeUSDT.sol\":773:808  bool public mintingFinished = false */\n  0x4\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/StrangeUSDT.sol\":887:889  18 */\n  0x12\n    /* \"contracts/token/StrangeUSDT.sol\":862:889  uint8  public decimals = 18 */\n  0x4\n  exp(0x100, 0x1)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/StrangeUSDT.sol\":894:1042  constructor(address _to, uint256 _amount) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/token/StrangeUSDT.sol\":894:1042  constructor(address _to, uint256 _amount) public {... */\n  pop\n  mload(0x40)\n  0x40\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/token/Owned.sol\":271:281  msg.sender */\n  caller\n    /* \"contracts/token/Owned.sol\":263:268  owner */\n  0x0\n  dup1\n    /* \"contracts/token/Owned.sol\":263:281  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/StrangeUSDT.sol\":964:989  totalSupply_.add(_amount) */\n  tag_6\n    /* \"contracts/token/StrangeUSDT.sol\":981:988  _amount */\n  dup2\n    /* \"contracts/token/StrangeUSDT.sol\":964:976  totalSupply_ */\n  sload(0x3)\n    /* \"contracts/token/StrangeUSDT.sol\":964:980  totalSupply_.add */\n  or(tag_0_78, mul(0x100000000, tag_7))\n  swap1\n    /* \"contracts/token/StrangeUSDT.sol\":964:989  totalSupply_.add(_amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_6:\n    /* \"contracts/token/StrangeUSDT.sol\":949:961  totalSupply_ */\n  0x3\n    /* \"contracts/token/StrangeUSDT.sol\":949:989  totalSupply_ = totalSupply_.add(_amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/StrangeUSDT.sol\":1011:1037  balances[_to].add(_amount) */\n  tag_8\n    /* \"contracts/token/StrangeUSDT.sol\":1029:1036  _amount */\n  dup2\n    /* \"contracts/token/StrangeUSDT.sol\":1011:1019  balances */\n  0x2\n    /* \"contracts/token/StrangeUSDT.sol\":1011:1024  balances[_to] */\n  0x0\n    /* \"contracts/token/StrangeUSDT.sol\":1020:1023  _to */\n  dup6\n    /* \"contracts/token/StrangeUSDT.sol\":1011:1024  balances[_to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n  sload\n    /* \"contracts/token/StrangeUSDT.sol\":1011:1028  balances[_to].add */\n  or(tag_0_78, mul(0x100000000, tag_7))\n  swap1\n    /* \"contracts/token/StrangeUSDT.sol\":1011:1037  balances[_to].add(_amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_8:\n    /* \"contracts/token/StrangeUSDT.sol\":995:1003  balances */\n  0x2\n    /* \"contracts/token/StrangeUSDT.sol\":995:1008  balances[_to] */\n  0x0\n    /* \"contracts/token/StrangeUSDT.sol\":1004:1007  _to */\n  dup5\n    /* \"contracts/token/StrangeUSDT.sol\":995:1008  balances[_to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/token/StrangeUSDT.sol\":995:1037  balances[_to] = balances[_to].add(_amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/StrangeUSDT.sol\":894:1042  constructor(address _to, uint256 _amount) public {... */\n  pop\n  pop\n    /* \"contracts/token/StrangeUSDT.sol\":341:6406  contract StrangeUSDT is Owned {... */\n  jump(tag_9)\n    /* \"contracts/token/SafeMath.sol\":489:611  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_7:\n    /* \"contracts/token/SafeMath.sol\":547:554  uint256 */\n  0x0\n    /* \"contracts/token/SafeMath.sol\":560:569  uint256 c */\n  dup1\n    /* \"contracts/token/SafeMath.sol\":576:577  b */\n  dup3\n    /* \"contracts/token/SafeMath.sol\":572:573  a */\n  dup5\n    /* \"contracts/token/SafeMath.sol\":572:577  a + b */\n  add\n    /* \"contracts/token/SafeMath.sol\":560:577  uint256 c = a + b */\n  swap1\n  pop\n    /* \"contracts/token/SafeMath.sol\":593:594  a */\n  dup4\n    /* \"contracts/token/SafeMath.sol\":588:589  c */\n  dup2\n    /* \"contracts/token/SafeMath.sol\":588:594  c >= a */\n  lt\n  iszero\n    /* \"contracts/token/SafeMath.sol\":581:595  assert(c >= a) */\n  iszero\n  iszero\n  tag_11\n  jumpi\n  invalid\ntag_11:\n    /* \"contracts/token/SafeMath.sol\":606:607  c */\n  dup1\n    /* \"contracts/token/SafeMath.sol\":599:607  return c */\n  swap2\n  pop\n    /* \"contracts/token/SafeMath.sol\":489:611  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/token/StrangeUSDT.sol\":341:6406  contract StrangeUSDT is Owned {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/StrangeUSDT.sol\":341:6406  contract StrangeUSDT is Owned {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x5d2035b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13af4035\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x66188463\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7d64bcb4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd73dd623\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/token/StrangeUSDT.sol\":773:808  bool public mintingFinished = false */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"contracts/token/StrangeUSDT.sol\":773:808  bool public mintingFinished = false */\n      pop\n      tag_18\n      jump(tag_19)\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":3353:3541  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/token/StrangeUSDT.sol\":3353:3541  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      pop\n      tag_21\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_22)\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n      pop\n      tag_24\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_25)\n    tag_24:\n      stop\n        /* \"contracts/token/StrangeUSDT.sol\":1102:1185  function totalSupply() public view returns (uint256) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"contracts/token/StrangeUSDT.sol\":1102:1185  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_27\n      jump(tag_28)\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":2286:2730  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"contracts/token/StrangeUSDT.sol\":2286:2730  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n      pop\n      tag_30\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_31)\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":862:889  uint8  public decimals = 18 */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"contracts/token/StrangeUSDT.sol\":862:889  uint8  public decimals = 18 */\n      pop\n      tag_33\n      jump(tag_34)\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":5875:6149  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"contracts/token/StrangeUSDT.sol\":5875:6149  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n      pop\n      tag_36\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_37)\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":5167:5570  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_38\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_38:\n        /* \"contracts/token/StrangeUSDT.sol\":5167:5570  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {... */\n      pop\n      tag_39\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_40)\n    tag_39:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":1911:2010  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n        /* \"contracts/token/StrangeUSDT.sol\":1911:2010  function balanceOf(address _owner) public view returns (uint256) {... */\n      pop\n      tag_42\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_43)\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":6263:6403  function finishMinting() onlyOwner canMint public returns (bool) {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_44:\n        /* \"contracts/token/StrangeUSDT.sol\":6263:6403  function finishMinting() onlyOwner canMint public returns (bool) {... */\n      pop\n      tag_45\n      jump(tag_46)\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/Owned.sol\":46:66  address public owner */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_47:\n        /* \"contracts/token/Owned.sol\":46:66  address public owner */\n      pop\n      tag_48\n      jump(tag_49)\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":812:858  string public constant symbol = \"Strange USDT\" */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_50\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_50:\n        /* \"contracts/token/StrangeUSDT.sol\":812:858  string public constant symbol = \"Strange USDT\" */\n      pop\n      tag_51\n      jump(tag_52)\n    tag_51:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_53:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_53)\n    tag_54:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":812:858  string public constant symbol = \"Strange USDT\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_56\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_56:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":1339:1709  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_57:\n        /* \"contracts/token/StrangeUSDT.sol\":1339:1709  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      pop\n      tag_58\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_59)\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":4443:4705  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_60:\n        /* \"contracts/token/StrangeUSDT.sol\":4443:4705  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {... */\n      pop\n      tag_61\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_62)\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":3860:3986  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_63:\n        /* \"contracts/token/StrangeUSDT.sol\":3860:3986  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n      pop\n      tag_64\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_65)\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/StrangeUSDT.sol\":773:808  bool public mintingFinished = false */\n    tag_19:\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":3353:3541  function approve(address _spender, uint256 _value) public returns (bool) {... */\n    tag_22:\n        /* \"contracts/token/StrangeUSDT.sol\":3420:3424  bool */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":3464:3470  _value */\n      dup2\n        /* \"contracts/token/StrangeUSDT.sol\":3432:3439  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":3432:3451  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":3440:3450  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":3432:3451  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":3432:3461  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":3452:3460  _spender */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":3432:3461  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":3432:3470  allowed[msg.sender][_spender] = _value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":3502:3510  _spender */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":3481:3519  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":3490:3500  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":3481:3519  Approval(msg.sender, _spender, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/token/StrangeUSDT.sol\":3512:3518  _value */\n      dup5\n        /* \"contracts/token/StrangeUSDT.sol\":3481:3519  Approval(msg.sender, _spender, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/StrangeUSDT.sol\":3532:3536  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":3525:3536  return true */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":3353:3541  function approve(address _spender, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n    tag_25:\n        /* \"contracts/token/Owned.sol\":202:207  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:198  msg.sender */\n      caller\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/Owned.sol\":180:208  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_68\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/token/Owned.sol\":378:386  newOwner */\n      dup1\n        /* \"contracts/token/Owned.sol\":362:387  SetOwner(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":371:376  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":362:387  SetOwner(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c663\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/Owned.sol\":405:413  newOwner */\n      dup1\n        /* \"contracts/token/Owned.sol\":397:402  owner */\n      0x0\n      dup1\n        /* \"contracts/token/Owned.sol\":397:413  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/Owned.sol\":294:420  function setOwner(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":1102:1185  function totalSupply() public view returns (uint256) {... */\n    tag_28:\n        /* \"contracts/token/StrangeUSDT.sol\":1146:1153  uint256 */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1168:1180  totalSupply_ */\n      sload(0x3)\n        /* \"contracts/token/StrangeUSDT.sol\":1161:1180  return totalSupply_ */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":1102:1185  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":2286:2730  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n    tag_31:\n        /* \"contracts/token/StrangeUSDT.sol\":2368:2372  bool */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2403:2404  0 */\n      dup1\n        /* \"contracts/token/StrangeUSDT.sol\":2388:2405  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":2388:2391  _to */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":2388:2405  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/token/StrangeUSDT.sol\":2380:2406  require(_to != address(0)) */\n      iszero\n      iszero\n      tag_72\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_72:\n        /* \"contracts/token/StrangeUSDT.sol\":2430:2438  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":2430:2445  balances[_from] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2439:2444  _from */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":2430:2445  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":2420:2426  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":2420:2445  _value <= balances[_from] */\n      gt\n      iszero\n        /* \"contracts/token/StrangeUSDT.sol\":2412:2446  require(_value <= balances[_from]) */\n      iszero\n      iszero\n      tag_73\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_73:\n        /* \"contracts/token/StrangeUSDT.sol\":2470:2477  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":2470:2484  allowed[_from] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2478:2483  _from */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":2470:2484  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":2470:2496  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2485:2495  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":2470:2496  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":2460:2466  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":2460:2496  _value <= allowed[_from][msg.sender] */\n      gt\n      iszero\n        /* \"contracts/token/StrangeUSDT.sol\":2452:2497  require(_value <= allowed[_from][msg.sender]) */\n      iszero\n      iszero\n      tag_74\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_74:\n        /* \"contracts/token/StrangeUSDT.sol\":2522:2549  balances[_from].sub(_value) */\n      tag_75\n        /* \"contracts/token/StrangeUSDT.sol\":2542:2548  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":2522:2530  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":2522:2537  balances[_from] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2531:2536  _from */\n      dup8\n        /* \"contracts/token/StrangeUSDT.sol\":2522:2537  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":2522:2541  balances[_from].sub */\n      tag_76\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":2522:2549  balances[_from].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"contracts/token/StrangeUSDT.sol\":2504:2512  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":2504:2519  balances[_from] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2513:2518  _from */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":2504:2519  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":2504:2549  balances[_from] = balances[_from].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":2571:2596  balances[_to].add(_value) */\n      tag_77\n        /* \"contracts/token/StrangeUSDT.sol\":2589:2595  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":2571:2579  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":2571:2584  balances[_to] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2580:2583  _to */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":2571:2584  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":2571:2588  balances[_to].add */\n      tag_78\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":2571:2596  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"contracts/token/StrangeUSDT.sol\":2555:2563  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":2555:2568  balances[_to] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2564:2567  _to */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":2555:2568  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":2555:2596  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2669  allowed[_from][msg.sender].sub(_value) */\n      tag_79\n        /* \"contracts/token/StrangeUSDT.sol\":2662:2668  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2638  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2645  allowed[_from] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2639:2644  _from */\n      dup8\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2645  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2657  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2646:2656  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2657  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2661  allowed[_from][msg.sender].sub */\n      tag_76\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":2631:2669  allowed[_from][msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"contracts/token/StrangeUSDT.sol\":2602:2609  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":2602:2616  allowed[_from] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2610:2615  _from */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":2602:2616  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":2602:2628  allowed[_from][msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":2617:2627  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":2602:2628  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":2602:2669  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":2696:2699  _to */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":2680:2708  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":2689:2694  _from */\n      dup5\n        /* \"contracts/token/StrangeUSDT.sol\":2680:2708  Transfer(_from, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token/StrangeUSDT.sol\":2701:2707  _value */\n      dup5\n        /* \"contracts/token/StrangeUSDT.sol\":2680:2708  Transfer(_from, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/StrangeUSDT.sol\":2721:2725  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":2714:2725  return true */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":2286:2730  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":862:889  uint8  public decimals = 18 */\n    tag_34:\n      0x4\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":5875:6149  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n    tag_37:\n        /* \"contracts/token/StrangeUSDT.sol\":5953:5957  bool */\n      0x0\n        /* \"contracts/token/Owned.sol\":202:207  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:198  msg.sender */\n      caller\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/Owned.sol\":180:208  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_81\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_81:\n        /* \"contracts/token/StrangeUSDT.sol\":5611:5626  mintingFinished */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":5610:5626  !mintingFinished */\n      iszero\n        /* \"contracts/token/StrangeUSDT.sol\":5602:5627  require(!mintingFinished) */\n      iszero\n      iszero\n      tag_83\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_83:\n        /* \"contracts/token/StrangeUSDT.sol\":5980:6005  totalSupply_.add(_amount) */\n      tag_85\n        /* \"contracts/token/StrangeUSDT.sol\":5997:6004  _amount */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":5980:5992  totalSupply_ */\n      sload(0x3)\n        /* \"contracts/token/StrangeUSDT.sol\":5980:5996  totalSupply_.add */\n      tag_78\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":5980:6005  totalSupply_.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/token/StrangeUSDT.sol\":5965:5977  totalSupply_ */\n      0x3\n        /* \"contracts/token/StrangeUSDT.sol\":5965:6005  totalSupply_ = totalSupply_.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":6027:6053  balances[_to].add(_amount) */\n      tag_86\n        /* \"contracts/token/StrangeUSDT.sol\":6045:6052  _amount */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":6027:6035  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":6027:6040  balances[_to] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":6036:6039  _to */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":6027:6040  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":6027:6044  balances[_to].add */\n      tag_78\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":6027:6053  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/token/StrangeUSDT.sol\":6011:6019  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":6011:6024  balances[_to] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":6020:6023  _to */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":6011:6024  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":6011:6053  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":6069:6072  _to */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":6064:6082  Mint(_to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n        /* \"contracts/token/StrangeUSDT.sol\":6074:6081  _amount */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":6064:6082  Mint(_to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token/StrangeUSDT.sol\":6114:6117  _to */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":6093:6127  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":6110:6111  0 */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":6093:6127  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token/StrangeUSDT.sol\":6119:6126  _amount */\n      dup5\n        /* \"contracts/token/StrangeUSDT.sol\":6093:6127  Transfer(address(0), _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/StrangeUSDT.sol\":6140:6144  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":6133:6144  return true */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":5875:6149  function mint(address _to, uint256 _amount) onlyOwner canMint public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":5167:5570  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {... */\n    tag_40:\n        /* \"contracts/token/StrangeUSDT.sol\":5250:5254  bool */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5262:5275  uint oldValue */\n      dup1\n        /* \"contracts/token/StrangeUSDT.sol\":5278:5285  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":5278:5297  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5286:5296  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":5278:5297  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":5278:5307  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5298:5306  _spender */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":5278:5307  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":5262:5307  uint oldValue = allowed[msg.sender][_spender] */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":5336:5344  oldValue */\n      dup1\n        /* \"contracts/token/StrangeUSDT.sol\":5317:5333  _subtractedValue */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":5317:5344  _subtractedValue > oldValue */\n      gt\n        /* \"contracts/token/StrangeUSDT.sol\":5313:5477  if (_subtractedValue > oldValue) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"contracts/token/StrangeUSDT.sol\":5386:5387  0 */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5354:5361  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":5354:5373  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5362:5372  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":5354:5373  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":5354:5383  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5374:5382  _spender */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":5354:5383  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":5354:5387  allowed[msg.sender][_spender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":5313:5477  if (_subtractedValue > oldValue) {... */\n      jump(tag_89)\n    tag_88:\n        /* \"contracts/token/StrangeUSDT.sol\":5440:5470  oldValue.sub(_subtractedValue) */\n      tag_90\n        /* \"contracts/token/StrangeUSDT.sol\":5453:5469  _subtractedValue */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":5440:5448  oldValue */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":5440:5452  oldValue.sub */\n      tag_76\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":5440:5470  oldValue.sub(_subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"contracts/token/StrangeUSDT.sol\":5408:5415  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":5408:5427  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5416:5426  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":5408:5427  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":5408:5437  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5428:5436  _spender */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":5408:5437  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":5408:5470  allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":5313:5477  if (_subtractedValue > oldValue) {... */\n    tag_89:\n        /* \"contracts/token/StrangeUSDT.sol\":5508:5516  _spender */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":5487:5548  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":5496:5506  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":5487:5548  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/token/StrangeUSDT.sol\":5518:5525  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":5518:5537  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5526:5536  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":5518:5537  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":5518:5547  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":5538:5546  _spender */\n      dup9\n        /* \"contracts/token/StrangeUSDT.sol\":5518:5547  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":5487:5548  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/StrangeUSDT.sol\":5561:5565  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":5554:5565  return true */\n      swap2\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":5167:5570  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":1911:2010  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_43:\n        /* \"contracts/token/StrangeUSDT.sol\":1967:1974  uint256 */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1989:1997  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":1989:2005  balances[_owner] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1998:2004  _owner */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":1989:2005  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":1982:2005  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":1911:2010  function balanceOf(address _owner) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":6263:6403  function finishMinting() onlyOwner canMint public returns (bool) {... */\n    tag_46:\n        /* \"contracts/token/StrangeUSDT.sol\":6322:6326  bool */\n      0x0\n        /* \"contracts/token/Owned.sol\":202:207  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/Owned.sol\":188:198  msg.sender */\n      caller\n        /* \"contracts/token/Owned.sol\":188:207  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/token/Owned.sol\":180:208  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_93\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/token/StrangeUSDT.sol\":5611:5626  mintingFinished */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":5610:5626  !mintingFinished */\n      iszero\n        /* \"contracts/token/StrangeUSDT.sol\":5602:5627  require(!mintingFinished) */\n      iszero\n      iszero\n      tag_95\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_95:\n        /* \"contracts/token/StrangeUSDT.sol\":6352:6356  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":6334:6349  mintingFinished */\n      0x4\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":6334:6356  mintingFinished = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":6367:6381  MintFinished() */\n      0xae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa08\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/token/StrangeUSDT.sol\":6394:6398  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":6387:6398  return true */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":6263:6403  function finishMinting() onlyOwner canMint public returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/token/Owned.sol\":46:66  address public owner */\n    tag_49:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":812:858  string public constant symbol = \"Strange USDT\" */\n    tag_52:\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0xc\n      dup2\n      mstore\n      0x20\n      add\n      0x537472616e676520555344540000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":1339:1709  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_59:\n        /* \"contracts/token/StrangeUSDT.sol\":1402:1406  bool */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1437:1438  0 */\n      dup1\n        /* \"contracts/token/StrangeUSDT.sol\":1422:1439  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":1422:1425  _to */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":1422:1439  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/token/StrangeUSDT.sol\":1414:1468  require(_to != address(0),\"Only allow send to other.\") */\n      iszero\n      iszero\n      tag_98\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f6e6c7920616c6c6f772073656e6420746f206f746865722e00000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/token/StrangeUSDT.sol\":1492:1500  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":1492:1512  balances[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1501:1511  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":1492:1512  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":1482:1488  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":1482:1512  _value <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"contracts/token/StrangeUSDT.sol\":1474:1534  require(_value <= balances[msg.sender], \"Insufficient fund\") */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x496e73756666696369656e742066756e64000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/token/StrangeUSDT.sol\":1564:1596  balances[msg.sender].sub(_value) */\n      tag_100\n        /* \"contracts/token/StrangeUSDT.sol\":1589:1595  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":1564:1572  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":1564:1584  balances[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1573:1583  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":1564:1584  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":1564:1588  balances[msg.sender].sub */\n      tag_76\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":1564:1596  balances[msg.sender].sub(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"contracts/token/StrangeUSDT.sol\":1541:1549  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":1541:1561  balances[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1550:1560  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":1541:1561  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":1541:1596  balances[msg.sender] = balances[msg.sender].sub(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":1618:1643  balances[_to].add(_value) */\n      tag_101\n        /* \"contracts/token/StrangeUSDT.sol\":1636:1642  _value */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":1618:1626  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":1618:1631  balances[_to] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1627:1630  _to */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":1618:1631  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":1618:1635  balances[_to].add */\n      tag_78\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":1618:1643  balances[_to].add(_value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/token/StrangeUSDT.sol\":1602:1610  balances */\n      0x2\n        /* \"contracts/token/StrangeUSDT.sol\":1602:1615  balances[_to] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":1611:1614  _to */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":1602:1615  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":1602:1643  balances[_to] = balances[_to].add(_value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":1675:1678  _to */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":1654:1687  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":1663:1673  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":1654:1687  Transfer(msg.sender, _to, _value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/token/StrangeUSDT.sol\":1680:1686  _value */\n      dup5\n        /* \"contracts/token/StrangeUSDT.sol\":1654:1687  Transfer(msg.sender, _to, _value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/StrangeUSDT.sol\":1700:1704  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":1693:1704  return true */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":1339:1709  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":4443:4705  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {... */\n    tag_62:\n        /* \"contracts/token/StrangeUSDT.sol\":4521:4525  bool */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4611  allowed[msg.sender][_spender].add(_addedValue) */\n      tag_103\n        /* \"contracts/token/StrangeUSDT.sol\":4599:4610  _addedValue */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4572  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4584  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":4573:4583  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4584  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4594  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":4585:4593  _spender */\n      dup7\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4594  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4598  allowed[msg.sender][_spender].add */\n      tag_78\n      swap1\n        /* \"contracts/token/StrangeUSDT.sol\":4565:4611  allowed[msg.sender][_spender].add(_addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/token/StrangeUSDT.sol\":4533:4540  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":4533:4552  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":4541:4551  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":4533:4552  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":4533:4562  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":4553:4561  _spender */\n      dup6\n        /* \"contracts/token/StrangeUSDT.sol\":4533:4562  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":4533:4611  allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":4643:4651  _spender */\n      dup3\n        /* \"contracts/token/StrangeUSDT.sol\":4622:4683  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/StrangeUSDT.sol\":4631:4641  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":4622:4683  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/token/StrangeUSDT.sol\":4653:4660  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":4653:4672  allowed[msg.sender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":4661:4671  msg.sender */\n      caller\n        /* \"contracts/token/StrangeUSDT.sol\":4653:4672  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":4653:4682  allowed[msg.sender][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":4673:4681  _spender */\n      dup8\n        /* \"contracts/token/StrangeUSDT.sol\":4653:4682  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":4622:4683  Approval(msg.sender, _spender, allowed[msg.sender][_spender]) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/StrangeUSDT.sol\":4696:4700  true */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":4689:4700  return true */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":4443:4705  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/StrangeUSDT.sol\":3860:3986  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n    tag_65:\n        /* \"contracts/token/StrangeUSDT.sol\":3934:3941  uint256 */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":3956:3963  allowed */\n      0x1\n        /* \"contracts/token/StrangeUSDT.sol\":3956:3971  allowed[_owner] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":3964:3970  _owner */\n      dup5\n        /* \"contracts/token/StrangeUSDT.sol\":3956:3971  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/token/StrangeUSDT.sol\":3956:3981  allowed[_owner][_spender] */\n      0x0\n        /* \"contracts/token/StrangeUSDT.sol\":3972:3980  _spender */\n      dup4\n        /* \"contracts/token/StrangeUSDT.sol\":3956:3981  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/token/StrangeUSDT.sol\":3949:3981  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/token/StrangeUSDT.sol\":3860:3986  function allowance(address _owner, address _spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SafeMath.sol\":381:486  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"contracts/token/SafeMath.sol\":439:446  uint256 */\n      0x0\n        /* \"contracts/token/SafeMath.sol\":464:465  a */\n      dup3\n        /* \"contracts/token/SafeMath.sol\":459:460  b */\n      dup3\n        /* \"contracts/token/SafeMath.sol\":459:465  b <= a */\n      gt\n      iszero\n        /* \"contracts/token/SafeMath.sol\":452:466  assert(b <= a) */\n      iszero\n      iszero\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n        /* \"contracts/token/SafeMath.sol\":481:482  b */\n      dup2\n        /* \"contracts/token/SafeMath.sol\":477:478  a */\n      dup4\n        /* \"contracts/token/SafeMath.sol\":477:482  a - b */\n      sub\n        /* \"contracts/token/SafeMath.sol\":470:482  return a - b */\n      swap1\n      pop\n        /* \"contracts/token/SafeMath.sol\":381:486  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/SafeMath.sol\":489:611  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_78:\n        /* \"contracts/token/SafeMath.sol\":547:554  uint256 */\n      0x0\n        /* \"contracts/token/SafeMath.sol\":560:569  uint256 c */\n      dup1\n        /* \"contracts/token/SafeMath.sol\":576:577  b */\n      dup3\n        /* \"contracts/token/SafeMath.sol\":572:573  a */\n      dup5\n        /* \"contracts/token/SafeMath.sol\":572:577  a + b */\n      add\n        /* \"contracts/token/SafeMath.sol\":560:577  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/token/SafeMath.sol\":593:594  a */\n      dup4\n        /* \"contracts/token/SafeMath.sol\":588:589  c */\n      dup2\n        /* \"contracts/token/SafeMath.sol\":588:594  c >= a */\n      lt\n      iszero\n        /* \"contracts/token/SafeMath.sol\":581:595  assert(c >= a) */\n      iszero\n      iszero\n      tag_108\n      jumpi\n      invalid\n    tag_108:\n        /* \"contracts/token/SafeMath.sol\":606:607  c */\n      dup1\n        /* \"contracts/token/SafeMath.sol\":599:607  return c */\n      swap2\n      pop\n        /* \"contracts/token/SafeMath.sol\":489:611  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820923250a92a7cffbdd4e94ed89dbf7391510dcc1c3570c34d853221dd5673cedf0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000600460006101000a81548160ff0219169083151502179055506012600460016101000a81548160ff021916908360ff16021790555034801561004757600080fd5b50604051604080620019808339810180604052810190808051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100d78160035461018664010000000002611782179091906401000000009004565b60038190555061013c81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461018664010000000002611782179091906401000000009004565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050506101a4565b600080828401905083811015151561019a57fe5b8091505092915050565b6117cc80620001b46000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b146100e0578063095ea7b31461010f57806313af40351461017457806318160ddd146101b757806323b872dd146101e2578063313ce5671461026757806340c10f191461029857806366188463146102fd57806370a08231146103625780637d64bcb4146103b95780638da5cb5b146103e857806395d89b411461043f578063a9059cbb146104cf578063d73dd62314610534578063dd62ed3e14610599575b600080fd5b3480156100ec57600080fd5b506100f5610610565b604051808215151515815260200191505060405180910390f35b34801561011b57600080fd5b5061015a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610623565b604051808215151515815260200191505060405180910390f35b34801561018057600080fd5b506101b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610715565b005b3480156101c357600080fd5b506101cc61082e565b6040518082815260200191505060405180910390f35b3480156101ee57600080fd5b5061024d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610838565b604051808215151515815260200191505060405180910390f35b34801561027357600080fd5b5061027c610bf7565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102a457600080fd5b506102e3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c0a565b604051808215151515815260200191505060405180910390f35b34801561030957600080fd5b50610348600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df1565b604051808215151515815260200191505060405180910390f35b34801561036e57600080fd5b506103a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611082565b6040518082815260200191505060405180910390f35b3480156103c557600080fd5b506103ce6110cb565b604051808215151515815260200191505060405180910390f35b3480156103f457600080fd5b506103fd611192565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044b57600080fd5b506104546111b7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104db57600080fd5b5061051a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111f0565b604051808215151515815260200191505060405180910390f35b34801561054057600080fd5b5061057f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114e6565b604051808215151515815260200191505060405180910390f35b3480156105a557600080fd5b506105fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e2565b6040518082815260200191505060405180910390f35b600460009054906101000a900460ff1681565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561077057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c66360405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600354905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561087557600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156108c357600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561094e57600080fd5b6109a082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176990919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a3582600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b0782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176990919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600460019054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c6757600080fd5b600460009054906101000a900460ff16151515610c8357600080fd5b610c988260035461178290919063ffffffff16565b600381905550610cf082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610f02576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f96565b610f15838261176990919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561112857600080fd5b600460009054906101000a900460ff1615151561114457600080fd5b6001600460006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600c81526020017f537472616e67652055534454000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611296576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4f6e6c7920616c6c6f772073656e6420746f206f746865722e0000000000000081525060200191505060405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561134d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e73756666696369656e742066756e6400000000000000000000000000000081525060200191505060405180910390fd5b61139f82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061143482600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600061157782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561177757fe5b818303905092915050565b600080828401905083811015151561179657fe5b80915050929150505600a165627a7a72305820923250a92a7cffbdd4e94ed89dbf7391510dcc1c3570c34d853221dd5673cedf0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x40 DUP1 PUSH3 0x1980 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xD7 DUP2 PUSH1 0x3 SLOAD PUSH2 0x186 PUSH5 0x100000000 MUL PUSH2 0x1782 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x13C DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x186 PUSH5 0x100000000 MUL PUSH2 0x1782 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x19A JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CC DUP1 PUSH3 0x1B4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5D2035B EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x599 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x494 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x479 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBF985117192C8F614A58AAF97226BB80A754772F5F6EDF06F87C675F2E6C663 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A0 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA35 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB07 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC98 DUP3 PUSH1 0x3 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xCF0 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0xF02 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF96 JUMP JUMPDEST PUSH2 0xF15 DUP4 DUP3 PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537472616E676520555344540000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1296 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920616C6C6F772073656E6420746F206F746865722E00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x134D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139F DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1434 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1577 DUP3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x1777 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1796 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP3 ORIGIN POP 0xa9 0x2a PUSH29 0xFFBDD4E94ED89DBF7391510DCC1C3570C34D853221DD5673CEDF002900 ",
							"sourceMap": "341:6065:2:-;;;803:5;773:35;;;;;;;;;;;;;;;;;;;;887:2;862:27;;;;;;;;;;;;;;;;;;;;894:148;8:9:-1;5:2;;;30:1;27;20:12;5:2;894:148:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:10:0;263:5;;:18;;;;;;;;;;;;;;;;;;964:25:2;981:7;964:12;;:16;;;;;;:25;;;;;:::i;:::-;949:12;:40;;;;1011:26;1029:7;1011:8;:13;1020:3;1011:13;;;;;;;;;;;;;;;;:17;;;;;;:26;;;;;:::i;:::-;995:8;:13;1004:3;995:13;;;;;;;;;;;;;;;:42;;;;894:148;;341:6065;;489:122:1;547:7;560:9;576:1;572;:5;560:17;;593:1;588;:6;;581:14;;;;;;606:1;599:8;;489:122;;;;;:::o;341:6065:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305d2035b146100e0578063095ea7b31461010f57806313af40351461017457806318160ddd146101b757806323b872dd146101e2578063313ce5671461026757806340c10f191461029857806366188463146102fd57806370a08231146103625780637d64bcb4146103b95780638da5cb5b146103e857806395d89b411461043f578063a9059cbb146104cf578063d73dd62314610534578063dd62ed3e14610599575b600080fd5b3480156100ec57600080fd5b506100f5610610565b604051808215151515815260200191505060405180910390f35b34801561011b57600080fd5b5061015a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610623565b604051808215151515815260200191505060405180910390f35b34801561018057600080fd5b506101b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610715565b005b3480156101c357600080fd5b506101cc61082e565b6040518082815260200191505060405180910390f35b3480156101ee57600080fd5b5061024d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610838565b604051808215151515815260200191505060405180910390f35b34801561027357600080fd5b5061027c610bf7565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102a457600080fd5b506102e3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c0a565b604051808215151515815260200191505060405180910390f35b34801561030957600080fd5b50610348600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610df1565b604051808215151515815260200191505060405180910390f35b34801561036e57600080fd5b506103a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611082565b6040518082815260200191505060405180910390f35b3480156103c557600080fd5b506103ce6110cb565b604051808215151515815260200191505060405180910390f35b3480156103f457600080fd5b506103fd611192565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044b57600080fd5b506104546111b7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104db57600080fd5b5061051a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111f0565b604051808215151515815260200191505060405180910390f35b34801561054057600080fd5b5061057f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114e6565b604051808215151515815260200191505060405180910390f35b3480156105a557600080fd5b506105fa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116e2565b6040518082815260200191505060405180910390f35b600460009054906101000a900460ff1681565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561077057600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fcbf985117192c8f614a58aaf97226bb80a754772f5f6edf06f87c675f2e6c66360405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600354905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561087557600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156108c357600080fd5b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561094e57600080fd5b6109a082600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176990919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a3582600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b0782600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176990919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600460019054906101000a900460ff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c6757600080fd5b600460009054906101000a900460ff16151515610c8357600080fd5b610c988260035461178290919063ffffffff16565b600381905550610cf082600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040518082815260200191505060405180910390a28273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610f02576000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f96565b610f15838261176990919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561112857600080fd5b600460009054906101000a900460ff1615151561114457600080fd5b6001600460006101000a81548160ff0219169083151502179055507fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0860405160405180910390a16001905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040805190810160405280600c81526020017f537472616e67652055534454000000000000000000000000000000000000000081525081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611296576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4f6e6c7920616c6c6f772073656e6420746f206f746865722e0000000000000081525060200191505060405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561134d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f496e73756666696369656e742066756e6400000000000000000000000000000081525060200191505060405180910390fd5b61139f82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461176990919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061143482600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b600061157782600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461178290919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115151561177757fe5b818303905092915050565b600080828401905083811015151561179657fe5b80915050929150505600a165627a7a72305820923250a92a7cffbdd4e94ed89dbf7391510dcc1c3570c34d853221dd5673cedf0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDB JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5D2035B EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x66188463 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x7D64BCB4 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xD73DD623 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x599 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x715 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x309 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CE PUSH2 0x10CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x454 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x494 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x479 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x770 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCBF985117192C8F614A58AAF97226BB80A754772F5F6EDF06F87C675F2E6C663 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x8C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A0 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA35 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB07 DUP3 PUSH1 0x1 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0xC83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC98 DUP3 PUSH1 0x3 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0xCF0 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0xF02 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF96 JUMP JUMPDEST PUSH2 0xF15 DUP4 DUP3 PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537472616E676520555344540000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1296 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F6E6C7920616C6C6F772073656E6420746F206F746865722E00000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x134D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x496E73756666696369656E742066756E64000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139F DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1769 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1434 DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1577 DUP3 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1782 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x1777 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1796 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP3 ORIGIN POP 0xa9 0x2a PUSH29 0xFFBDD4E94ED89DBF7391510DCC1C3570C34D853221DD5673CEDF002900 ",
							"sourceMap": "341:6065:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;773:35:2;;;;;;;;;;;;;;;;;;;;;;;;;;;3353:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3353:188:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:126:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;294:126:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1102:83:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1102:83:2;;;;;;;;;;;;;;;;;;;;;;;2286:444;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2286:444:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;862:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;862:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;5875:274;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5875:274:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5167:403;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5167:403:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1911:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1911:99:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6263:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6263:140:2;;;;;;;;;;;;;;;;;;;;;;;;;;;46:20:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;812:46:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;812:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;812:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:370;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1339:370:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:262;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4443:262:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3860:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3860:126:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:35;;;;;;;;;;;;;:::o;3353:188::-;3420:4;3464:6;3432:7;:19;3440:10;3432:19;;;;;;;;;;;;;;;:29;3452:8;3432:29;;;;;;;;;;;;;;;:38;;;;3502:8;3481:38;;3490:10;3481:38;;;3512:6;3481:38;;;;;;;;;;;;;;;;;;3532:4;3525:11;;3353:188;;;;:::o;294:126:0:-;202:5;;;;;;;;;;;188:19;;:10;:19;;;180:28;;;;;;;;378:8;362:25;;371:5;;;;;;;;;;;362:25;;;;;;;;;;;;405:8;397:5;;:16;;;;;;;;;;;;;;;;;;294:126;:::o;1102:83:2:-;1146:7;1168:12;;1161:19;;1102:83;:::o;2286:444::-;2368:4;2403:1;2388:17;;:3;:17;;;;2380:26;;;;;;;;2430:8;:15;2439:5;2430:15;;;;;;;;;;;;;;;;2420:6;:25;;2412:34;;;;;;;;2470:7;:14;2478:5;2470:14;;;;;;;;;;;;;;;:26;2485:10;2470:26;;;;;;;;;;;;;;;;2460:6;:36;;2452:45;;;;;;;;2522:27;2542:6;2522:8;:15;2531:5;2522:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;2504:8;:15;2513:5;2504:15;;;;;;;;;;;;;;;:45;;;;2571:25;2589:6;2571:8;:13;2580:3;2571:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;2555:8;:13;2564:3;2555:13;;;;;;;;;;;;;;;:41;;;;2631:38;2662:6;2631:7;:14;2639:5;2631:14;;;;;;;;;;;;;;;:26;2646:10;2631:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;2602:7;:14;2610:5;2602:14;;;;;;;;;;;;;;;:26;2617:10;2602:26;;;;;;;;;;;;;;;:67;;;;2696:3;2680:28;;2689:5;2680:28;;;2701:6;2680:28;;;;;;;;;;;;;;;;;;2721:4;2714:11;;2286:444;;;;;:::o;862:27::-;;;;;;;;;;;;;:::o;5875:274::-;5953:4;202:5:0;;;;;;;;;;;188:19;;:10;:19;;;180:28;;;;;;;;5611:15:2;;;;;;;;;;;5610:16;5602:25;;;;;;;;5980;5997:7;5980:12;;:16;;:25;;;;:::i;:::-;5965:12;:40;;;;6027:26;6045:7;6027:8;:13;6036:3;6027:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;6011:8;:13;6020:3;6011:13;;;;;;;;;;;;;;;:42;;;;6069:3;6064:18;;;6074:7;6064:18;;;;;;;;;;;;;;;;;;6114:3;6093:34;;6110:1;6093:34;;;6119:7;6093:34;;;;;;;;;;;;;;;;;;6140:4;6133:11;;5875:274;;;;:::o;5167:403::-;5250:4;5262:13;5278:7;:19;5286:10;5278:19;;;;;;;;;;;;;;;:29;5298:8;5278:29;;;;;;;;;;;;;;;;5262:45;;5336:8;5317:16;:27;5313:164;;;5386:1;5354:7;:19;5362:10;5354:19;;;;;;;;;;;;;;;:29;5374:8;5354:29;;;;;;;;;;;;;;;:33;;;;5313:164;;;5440:30;5453:16;5440:8;:12;;:30;;;;:::i;:::-;5408:7;:19;5416:10;5408:19;;;;;;;;;;;;;;;:29;5428:8;5408:29;;;;;;;;;;;;;;;:62;;;;5313:164;5508:8;5487:61;;5496:10;5487:61;;;5518:7;:19;5526:10;5518:19;;;;;;;;;;;;;;;:29;5538:8;5518:29;;;;;;;;;;;;;;;;5487:61;;;;;;;;;;;;;;;;;;5561:4;5554:11;;5167:403;;;;;:::o;1911:99::-;1967:7;1989:8;:16;1998:6;1989:16;;;;;;;;;;;;;;;;1982:23;;1911:99;;;:::o;6263:140::-;6322:4;202:5:0;;;;;;;;;;;188:19;;:10;:19;;;180:28;;;;;;;;5611:15:2;;;;;;;;;;;5610:16;5602:25;;;;;;;;6352:4;6334:15;;:22;;;;;;;;;;;;;;;;;;6367:14;;;;;;;;;;6394:4;6387:11;;6263:140;:::o;46:20:0:-;;;;;;;;;;;;;:::o;812:46:2:-;;;;;;;;;;;;;;;;;;;;:::o;1339:370::-;1402:4;1437:1;1422:17;;:3;:17;;;;1414:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1492:8;:20;1501:10;1492:20;;;;;;;;;;;;;;;;1482:6;:30;;1474:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1564:32;1589:6;1564:8;:20;1573:10;1564:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1541:8;:20;1550:10;1541:20;;;;;;;;;;;;;;;:55;;;;1618:25;1636:6;1618:8;:13;1627:3;1618:13;;;;;;;;;;;;;;;;:17;;:25;;;;:::i;:::-;1602:8;:13;1611:3;1602:13;;;;;;;;;;;;;;;:41;;;;1675:3;1654:33;;1663:10;1654:33;;;1680:6;1654:33;;;;;;;;;;;;;;;;;;1700:4;1693:11;;1339:370;;;;:::o;4443:262::-;4521:4;4565:46;4599:11;4565:7;:19;4573:10;4565:19;;;;;;;;;;;;;;;:29;4585:8;4565:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;4533:7;:19;4541:10;4533:19;;;;;;;;;;;;;;;:29;4553:8;4533:29;;;;;;;;;;;;;;;:78;;;;4643:8;4622:61;;4631:10;4622:61;;;4653:7;:19;4661:10;4653:19;;;;;;;;;;;;;;;:29;4673:8;4653:29;;;;;;;;;;;;;;;;4622:61;;;;;;;;;;;;;;;;;;4696:4;4689:11;;4443:262;;;;:::o;3860:126::-;3934:7;3956;:15;3964:6;3956:15;;;;;;;;;;;;;;;:25;3972:8;3956:25;;;;;;;;;;;;;;;;3949:32;;3860:126;;;;:::o;381:105:1:-;439:7;464:1;459;:6;;452:14;;;;;;481:1;477;:5;470:12;;381:105;;;;:::o;489:122::-;547:7;560:9;576:1;572;:5;560:17;;593:1;588;:6;;581:14;;;;;;606:1;599:8;;489:122;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1218400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "992",
								"approve(address,uint256)": "22353",
								"balanceOf(address)": "735",
								"decimals()": "602",
								"decreaseApproval(address,uint256)": "infinite",
								"finishMinting()": "21994",
								"increaseApproval(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"mintingFinished()": "442",
								"owner()": "662",
								"setOwner(address)": "22565",
								"symbol()": "infinite",
								"totalSupply()": "468",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 6406,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "MSTORE"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "EXP"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "SLOAD"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "DUP2"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "MUL"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "NOT"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "AND"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "DUP4"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "ISZERO"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "ISZERO"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "MUL"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "OR"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "SSTORE"
								},
								{
									"begin": 773,
									"end": 808,
									"name": "POP"
								},
								{
									"begin": 887,
									"end": 889,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "EXP"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "DUP2"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "SLOAD"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "DUP2"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "MUL"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "NOT"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "AND"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "SWAP1"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "DUP4"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "AND"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "MUL"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "OR"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "SWAP1"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "SSTORE"
								},
								{
									"begin": 862,
									"end": 889,
									"name": "POP"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "POP"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "MLOAD"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "PUSHSIZE"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP4"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "CODECOPY"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP2"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "ADD"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "MSTORE"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP2"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "ADD"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "MLOAD"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "ADD"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP3"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP2"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "DUP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "MLOAD"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "ADD"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP3"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP2"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "POP"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "POP"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "POP"
								},
								{
									"begin": 271,
									"end": 281,
									"name": "CALLER"
								},
								{
									"begin": 263,
									"end": 268,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 263,
									"end": 268,
									"name": "DUP1"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "EXP"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "DUP2"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SLOAD"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "DUP2"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "MUL"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "NOT"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "AND"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "DUP4"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "AND"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "MUL"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "OR"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SWAP1"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "SSTORE"
								},
								{
									"begin": 263,
									"end": 281,
									"name": "POP"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 981,
									"end": 988,
									"name": "DUP2"
								},
								{
									"begin": 964,
									"end": 976,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 964,
									"end": 976,
									"name": "SLOAD"
								},
								{
									"begin": 964,
									"end": 980,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 964,
									"end": 980,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 964,
									"end": 980,
									"name": "MUL"
								},
								{
									"begin": 964,
									"end": 980,
									"name": "PUSH [tag]",
									"value": "18446744073709551694"
								},
								{
									"begin": 964,
									"end": 980,
									"name": "OR"
								},
								{
									"begin": 964,
									"end": 980,
									"name": "SWAP1"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "SWAP2"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "SWAP1"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "SWAP1"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "DIV"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 964,
									"end": 989,
									"name": "JUMPDEST"
								},
								{
									"begin": 949,
									"end": 961,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 949,
									"end": 989,
									"name": "DUP2"
								},
								{
									"begin": 949,
									"end": 989,
									"name": "SWAP1"
								},
								{
									"begin": 949,
									"end": 989,
									"name": "SSTORE"
								},
								{
									"begin": 949,
									"end": 989,
									"name": "POP"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1029,
									"end": 1036,
									"name": "DUP2"
								},
								{
									"begin": 1011,
									"end": 1019,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1020,
									"end": 1023,
									"name": "DUP6"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "AND"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "AND"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "DUP2"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "MSTORE"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "ADD"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "SWAP1"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "DUP2"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "MSTORE"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "ADD"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "KECCAK256"
								},
								{
									"begin": 1011,
									"end": 1024,
									"name": "SLOAD"
								},
								{
									"begin": 1011,
									"end": 1028,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 1011,
									"end": 1028,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1011,
									"end": 1028,
									"name": "MUL"
								},
								{
									"begin": 1011,
									"end": 1028,
									"name": "PUSH [tag]",
									"value": "18446744073709551694"
								},
								{
									"begin": 1011,
									"end": 1028,
									"name": "OR"
								},
								{
									"begin": 1011,
									"end": 1028,
									"name": "SWAP1"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "SWAP2"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "SWAP1"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "SWAP1"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "DIV"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1011,
									"end": 1037,
									"name": "JUMPDEST"
								},
								{
									"begin": 995,
									"end": 1003,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1004,
									"end": 1007,
									"name": "DUP5"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "AND"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "AND"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "DUP2"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "MSTORE"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "ADD"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "SWAP1"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "DUP2"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "MSTORE"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "ADD"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "KECCAK256"
								},
								{
									"begin": 995,
									"end": 1037,
									"name": "DUP2"
								},
								{
									"begin": 995,
									"end": 1037,
									"name": "SWAP1"
								},
								{
									"begin": 995,
									"end": 1037,
									"name": "SSTORE"
								},
								{
									"begin": 995,
									"end": 1037,
									"name": "POP"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "POP"
								},
								{
									"begin": 894,
									"end": 1042,
									"name": "POP"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "JUMP"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "JUMPDEST"
								},
								{
									"begin": 547,
									"end": 554,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 560,
									"end": 569,
									"name": "DUP1"
								},
								{
									"begin": 576,
									"end": 577,
									"name": "DUP3"
								},
								{
									"begin": 572,
									"end": 573,
									"name": "DUP5"
								},
								{
									"begin": 572,
									"end": 577,
									"name": "ADD"
								},
								{
									"begin": 560,
									"end": 577,
									"name": "SWAP1"
								},
								{
									"begin": 560,
									"end": 577,
									"name": "POP"
								},
								{
									"begin": 593,
									"end": 594,
									"name": "DUP4"
								},
								{
									"begin": 588,
									"end": 589,
									"name": "DUP2"
								},
								{
									"begin": 588,
									"end": 594,
									"name": "LT"
								},
								{
									"begin": 588,
									"end": 594,
									"name": "ISZERO"
								},
								{
									"begin": 581,
									"end": 595,
									"name": "ISZERO"
								},
								{
									"begin": 581,
									"end": 595,
									"name": "ISZERO"
								},
								{
									"begin": 581,
									"end": 595,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 581,
									"end": 595,
									"name": "JUMPI"
								},
								{
									"begin": 581,
									"end": 595,
									"name": "INVALID"
								},
								{
									"begin": 581,
									"end": 595,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 581,
									"end": 595,
									"name": "JUMPDEST"
								},
								{
									"begin": 606,
									"end": 607,
									"name": "DUP1"
								},
								{
									"begin": 599,
									"end": 607,
									"name": "SWAP2"
								},
								{
									"begin": 599,
									"end": 607,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "SWAP3"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "SWAP2"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 611,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "JUMPDEST"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "DUP1"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "CODECOPY"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 341,
									"end": 6406,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820923250a92a7cffbdd4e94ed89dbf7391510dcc1c3570c34d853221dd5673cedf0029",
									".code": [
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "MSTORE"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "LT"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "SWAP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DIV"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "AND"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "5D2035B"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "13AF4035"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "40C10F19"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "66188463"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "7D64BCB4"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "D73DD623"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "EQ"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPI"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 6406,
											"name": "REVERT"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "JUMP"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "DUP3"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "ISZERO"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "ISZERO"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "ISZERO"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "ISZERO"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "MSTORE"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "ADD"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "POP"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "MLOAD"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SWAP2"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SUB"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "RETURN"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "JUMPDEST"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SUB"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP2"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ADD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "AND"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ADD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP3"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP2"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ADD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP3"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP2"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "JUMP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "JUMPDEST"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "MLOAD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP3"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ISZERO"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ISZERO"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ISZERO"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ISZERO"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP2"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "MSTORE"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "ADD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP2"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "MLOAD"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "DUP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP2"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SUB"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "RETURN"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SUB"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP2"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "DUP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "AND"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "ADD"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP3"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP2"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "STOP"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "JUMP"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "MLOAD"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "DUP3"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "DUP2"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "MSTORE"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "ADD"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "SWAP2"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "MLOAD"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "SWAP2"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "SUB"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "RETURN"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "JUMPDEST"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SUB"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "AND"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP3"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "AND"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP3"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP3"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "JUMP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "JUMPDEST"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "MLOAD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP3"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ISZERO"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP2"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "MSTORE"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "MLOAD"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "DUP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP2"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SUB"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "RETURN"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "JUMP"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "MLOAD"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "DUP3"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "AND"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "AND"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "MSTORE"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "ADD"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "MLOAD"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP2"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SUB"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "RETURN"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "JUMPDEST"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SUB"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP2"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ADD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "AND"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ADD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP3"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP2"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ADD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP3"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP2"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "JUMP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "JUMPDEST"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "MLOAD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP3"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ISZERO"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ISZERO"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ISZERO"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ISZERO"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP2"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "MSTORE"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "ADD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP2"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "MLOAD"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "DUP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP2"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SUB"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP1"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "RETURN"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "JUMPDEST"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SUB"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "AND"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP3"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP3"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "JUMP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "JUMPDEST"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "MLOAD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP3"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ISZERO"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ISZERO"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ISZERO"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ISZERO"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP2"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "MSTORE"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "ADD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "MLOAD"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "DUP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SUB"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP1"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "RETURN"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SUB"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP2"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "ADD"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "AND"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "ADD"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP3"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP2"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "JUMP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "JUMPDEST"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "MLOAD"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP3"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP2"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "MSTORE"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "ADD"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP2"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "MLOAD"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "DUP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP2"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SUB"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "RETURN"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "JUMP"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "JUMPDEST"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "MLOAD"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "DUP1"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "DUP3"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "ISZERO"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "ISZERO"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "ISZERO"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "ISZERO"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "DUP2"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "MSTORE"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "ADD"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "SWAP2"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "MLOAD"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "DUP1"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "SWAP2"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "SUB"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "RETURN"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP3"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "MSTORE"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "ADD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "POP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "MLOAD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SUB"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "RETURN"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "JUMP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP3"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SUB"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP3"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP4"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP4"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "AND"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ISZERO"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "JUMPI"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP3"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SUB"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP4"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SUB"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "EXP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SUB"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "NOT"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "AND"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP3"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SUB"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "RETURN"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "JUMPDEST"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SUB"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP2"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ADD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "AND"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ADD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP3"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ADD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP3"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "JUMP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "JUMPDEST"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "MLOAD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP3"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ISZERO"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP2"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "MSTORE"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "ADD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "MLOAD"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SUB"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP1"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "RETURN"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "JUMPDEST"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SUB"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP2"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ADD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "AND"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ADD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP3"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP2"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ADD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP3"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP2"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "JUMP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "JUMPDEST"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "MLOAD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP3"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ISZERO"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ISZERO"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ISZERO"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ISZERO"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP2"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "MSTORE"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "ADD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP2"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "MLOAD"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "DUP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP2"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SUB"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP1"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "RETURN"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "JUMPDEST"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SUB"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP2"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "ADD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "AND"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "ADD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP3"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "AND"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "ADD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP3"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "JUMP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "JUMPDEST"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "MLOAD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP3"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP2"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "MSTORE"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "ADD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "MLOAD"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SUB"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "RETURN"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SLOAD"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "EXP"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "DIV"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "AND"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "DUP2"
										},
										{
											"begin": 773,
											"end": 808,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "JUMPDEST"
										},
										{
											"begin": 3420,
											"end": 3424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3450,
											"name": "CALLER"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "AND"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "AND"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "MSTORE"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "ADD"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "SWAP1"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "MSTORE"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "ADD"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "KECCAK256"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3460,
											"name": "DUP6"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "AND"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "AND"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "MSTORE"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3461,
											"name": "KECCAK256"
										},
										{
											"begin": 3432,
											"end": 3470,
											"name": "DUP2"
										},
										{
											"begin": 3432,
											"end": 3470,
											"name": "SWAP1"
										},
										{
											"begin": 3432,
											"end": 3470,
											"name": "SSTORE"
										},
										{
											"begin": 3432,
											"end": 3470,
											"name": "POP"
										},
										{
											"begin": 3502,
											"end": 3510,
											"name": "DUP3"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "AND"
										},
										{
											"begin": 3490,
											"end": 3500,
											"name": "CALLER"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "AND"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP5"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP3"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP2"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MSTORE"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "ADD"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP2"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "POP"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "MLOAD"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "DUP1"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP2"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SUB"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "SWAP1"
										},
										{
											"begin": 3481,
											"end": 3519,
											"name": "LOG3"
										},
										{
											"begin": 3532,
											"end": 3536,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "SWAP1"
										},
										{
											"begin": 3525,
											"end": 3536,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP3"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "SWAP2"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "POP"
										},
										{
											"begin": 3353,
											"end": 3541,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMPDEST"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SLOAD"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "EXP"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DIV"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 198,
											"name": "CALLER"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "EQ"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "REVERT"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPDEST"
										},
										{
											"begin": 378,
											"end": 386,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SLOAD"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "EXP"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SWAP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DIV"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "CBF985117192C8F614A58AAF97226BB80A754772F5F6EDF06F87C675F2E6C663"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "MLOAD"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "MLOAD"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "SWAP2"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "SUB"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 387,
											"name": "LOG3"
										},
										{
											"begin": 405,
											"end": 413,
											"name": "DUP1"
										},
										{
											"begin": 397,
											"end": 402,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 397,
											"end": 402,
											"name": "DUP1"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "EXP"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "DUP2"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SLOAD"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "DUP2"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "MUL"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "NOT"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "AND"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "DUP4"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "AND"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "MUL"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "OR"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "SSTORE"
										},
										{
											"begin": 397,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 420,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "JUMPDEST"
										},
										{
											"begin": 1146,
											"end": 1153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1180,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1180,
											"name": "SLOAD"
										},
										{
											"begin": 1161,
											"end": 1180,
											"name": "SWAP1"
										},
										{
											"begin": 1161,
											"end": 1180,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1102,
											"end": 1185,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "JUMPDEST"
										},
										{
											"begin": 2368,
											"end": 2372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "DUP1"
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "AND"
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP4"
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "AND"
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "EQ"
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "ISZERO"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "JUMPI"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "DUP1"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "REVERT"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "JUMPDEST"
										},
										{
											"begin": 2430,
											"end": 2438,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2444,
											"name": "DUP6"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "AND"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "AND"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "DUP2"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "MSTORE"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "ADD"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "SWAP1"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "DUP2"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "MSTORE"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "ADD"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "KECCAK256"
										},
										{
											"begin": 2430,
											"end": 2445,
											"name": "SLOAD"
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP3"
										},
										{
											"begin": 2420,
											"end": 2445,
											"name": "GT"
										},
										{
											"begin": 2420,
											"end": 2445,
											"name": "ISZERO"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "ISZERO"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "ISZERO"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "JUMPI"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "DUP1"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "REVERT"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "JUMPDEST"
										},
										{
											"begin": 2470,
											"end": 2477,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2483,
											"name": "DUP6"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "AND"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "AND"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "DUP2"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "MSTORE"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "ADD"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "SWAP1"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "DUP2"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "MSTORE"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "ADD"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "KECCAK256"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2495,
											"name": "CALLER"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "AND"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "AND"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "DUP2"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "MSTORE"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "ADD"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SWAP1"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "DUP2"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "MSTORE"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "ADD"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "KECCAK256"
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SLOAD"
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP3"
										},
										{
											"begin": 2460,
											"end": 2496,
											"name": "GT"
										},
										{
											"begin": 2460,
											"end": 2496,
											"name": "ISZERO"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "ISZERO"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "ISZERO"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "JUMPI"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "DUP1"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "REVERT"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2452,
											"end": 2497,
											"name": "JUMPDEST"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2542,
											"end": 2548,
											"name": "DUP3"
										},
										{
											"begin": 2522,
											"end": 2530,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2536,
											"name": "DUP8"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "AND"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "AND"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "DUP2"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "MSTORE"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "ADD"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "SWAP1"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "DUP2"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "MSTORE"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "ADD"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "KECCAK256"
										},
										{
											"begin": 2522,
											"end": 2537,
											"name": "SLOAD"
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "SWAP1"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "SWAP2"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "AND"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2522,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2504,
											"end": 2512,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2518,
											"name": "DUP7"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "AND"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "AND"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "DUP2"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "MSTORE"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "SWAP1"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "DUP2"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "MSTORE"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "ADD"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2519,
											"name": "KECCAK256"
										},
										{
											"begin": 2504,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2504,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2504,
											"end": 2549,
											"name": "SSTORE"
										},
										{
											"begin": 2504,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "DUP3"
										},
										{
											"begin": 2571,
											"end": 2579,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2583,
											"name": "DUP7"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "AND"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "DUP2"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "MSTORE"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "ADD"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "SWAP1"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "DUP2"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "MSTORE"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "ADD"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "KECCAK256"
										},
										{
											"begin": 2571,
											"end": 2584,
											"name": "SLOAD"
										},
										{
											"begin": 2571,
											"end": 2588,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2571,
											"end": 2588,
											"name": "SWAP1"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "SWAP2"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2571,
											"end": 2596,
											"name": "JUMPDEST"
										},
										{
											"begin": 2555,
											"end": 2563,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2567,
											"name": "DUP6"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "AND"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "AND"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "DUP2"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "MSTORE"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "ADD"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "SWAP1"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "DUP2"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "MSTORE"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "ADD"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2568,
											"name": "KECCAK256"
										},
										{
											"begin": 2555,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2555,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2555,
											"end": 2596,
											"name": "SSTORE"
										},
										{
											"begin": 2555,
											"end": 2596,
											"name": "POP"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2662,
											"end": 2668,
											"name": "DUP3"
										},
										{
											"begin": 2631,
											"end": 2638,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2644,
											"name": "DUP8"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "AND"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "AND"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP2"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MSTORE"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "SWAP1"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "DUP2"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "MSTORE"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "ADD"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2645,
											"name": "KECCAK256"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2656,
											"name": "CALLER"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "AND"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "AND"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "DUP2"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "MSTORE"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "ADD"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "SWAP1"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "DUP2"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "MSTORE"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "ADD"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "KECCAK256"
										},
										{
											"begin": 2631,
											"end": 2657,
											"name": "SLOAD"
										},
										{
											"begin": 2631,
											"end": 2661,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2631,
											"end": 2661,
											"name": "SWAP1"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "SWAP2"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "AND"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2631,
											"end": 2669,
											"name": "JUMPDEST"
										},
										{
											"begin": 2602,
											"end": 2609,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DUP7"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2616,
											"name": "KECCAK256"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2627,
											"name": "CALLER"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "AND"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "MSTORE"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "ADD"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2628,
											"name": "KECCAK256"
										},
										{
											"begin": 2602,
											"end": 2669,
											"name": "DUP2"
										},
										{
											"begin": 2602,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2602,
											"end": 2669,
											"name": "SSTORE"
										},
										{
											"begin": 2602,
											"end": 2669,
											"name": "POP"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "DUP3"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "AND"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP5"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "AND"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP5"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "MLOAD"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "DUP1"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "DUP3"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "DUP2"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "MSTORE"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "ADD"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "SWAP2"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "POP"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "POP"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "MLOAD"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "DUP1"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "SWAP2"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "SUB"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "SWAP1"
										},
										{
											"begin": 2680,
											"end": 2708,
											"name": "LOG3"
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "SWAP1"
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP4"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "SWAP3"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "POP"
										},
										{
											"begin": 2286,
											"end": 2730,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SLOAD"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "EXP"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "DIV"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "AND"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "DUP2"
										},
										{
											"begin": 862,
											"end": 889,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "JUMPDEST"
										},
										{
											"begin": 5953,
											"end": 5957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SLOAD"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "EXP"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DIV"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 198,
											"name": "CALLER"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "EQ"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "REVERT"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPDEST"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SWAP1"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SLOAD"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SWAP1"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "EXP"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SWAP1"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "DIV"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "AND"
										},
										{
											"begin": 5610,
											"end": 5626,
											"name": "ISZERO"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "ISZERO"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "ISZERO"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "JUMPI"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "DUP1"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "REVERT"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "JUMPDEST"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5997,
											"end": 6004,
											"name": "DUP3"
										},
										{
											"begin": 5980,
											"end": 5992,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5980,
											"end": 5992,
											"name": "SLOAD"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5980,
											"end": 5996,
											"name": "SWAP1"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "SWAP2"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "AND"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 5980,
											"end": 6005,
											"name": "JUMPDEST"
										},
										{
											"begin": 5965,
											"end": 5977,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5965,
											"end": 6005,
											"name": "DUP2"
										},
										{
											"begin": 5965,
											"end": 6005,
											"name": "SWAP1"
										},
										{
											"begin": 5965,
											"end": 6005,
											"name": "SSTORE"
										},
										{
											"begin": 5965,
											"end": 6005,
											"name": "POP"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 6045,
											"end": 6052,
											"name": "DUP3"
										},
										{
											"begin": 6027,
											"end": 6035,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6039,
											"name": "DUP7"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "DUP2"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "MSTORE"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "ADD"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "DUP2"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "MSTORE"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "ADD"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "KECCAK256"
										},
										{
											"begin": 6027,
											"end": 6040,
											"name": "SLOAD"
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 6027,
											"end": 6044,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "SWAP2"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "SWAP1"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "AND"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "JUMPDEST"
										},
										{
											"begin": 6011,
											"end": 6019,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6023,
											"name": "DUP6"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "AND"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "AND"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "DUP2"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "MSTORE"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "ADD"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "SWAP1"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "DUP2"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "MSTORE"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "ADD"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6024,
											"name": "KECCAK256"
										},
										{
											"begin": 6011,
											"end": 6053,
											"name": "DUP2"
										},
										{
											"begin": 6011,
											"end": 6053,
											"name": "SWAP1"
										},
										{
											"begin": 6011,
											"end": 6053,
											"name": "SSTORE"
										},
										{
											"begin": 6011,
											"end": 6053,
											"name": "POP"
										},
										{
											"begin": 6069,
											"end": 6072,
											"name": "DUP3"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "AND"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 6074,
											"end": 6081,
											"name": "DUP4"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "MLOAD"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "DUP1"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "DUP3"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "DUP2"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "ADD"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "POP"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "POP"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "MLOAD"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "DUP1"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "SUB"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "LOG2"
										},
										{
											"begin": 6114,
											"end": 6117,
											"name": "DUP3"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "AND"
										},
										{
											"begin": 6110,
											"end": 6111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "AND"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6119,
											"end": 6126,
											"name": "DUP5"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "MLOAD"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP1"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP3"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP2"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "MSTORE"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "ADD"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SWAP2"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "POP"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "POP"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "MLOAD"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "DUP1"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SWAP2"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SUB"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "SWAP1"
										},
										{
											"begin": 6093,
											"end": 6127,
											"name": "LOG3"
										},
										{
											"begin": 6140,
											"end": 6144,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6133,
											"end": 6144,
											"name": "SWAP1"
										},
										{
											"begin": 6133,
											"end": 6144,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP3"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "SWAP2"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "POP"
										},
										{
											"begin": 5875,
											"end": 6149,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "JUMPDEST"
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5275,
											"name": "DUP1"
										},
										{
											"begin": 5278,
											"end": 5285,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5296,
											"name": "CALLER"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "AND"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "AND"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "DUP2"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "ADD"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "SWAP1"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "DUP2"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "ADD"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5297,
											"name": "KECCAK256"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5306,
											"name": "DUP6"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "AND"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "AND"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "DUP2"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "MSTORE"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "ADD"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "SWAP1"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "DUP2"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "MSTORE"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "ADD"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "KECCAK256"
										},
										{
											"begin": 5278,
											"end": 5307,
											"name": "SLOAD"
										},
										{
											"begin": 5262,
											"end": 5307,
											"name": "SWAP1"
										},
										{
											"begin": 5262,
											"end": 5307,
											"name": "POP"
										},
										{
											"begin": 5336,
											"end": 5344,
											"name": "DUP1"
										},
										{
											"begin": 5317,
											"end": 5333,
											"name": "DUP4"
										},
										{
											"begin": 5317,
											"end": 5344,
											"name": "GT"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "ISZERO"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "JUMPI"
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "CALLER"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "AND"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "AND"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "DUP2"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "MSTORE"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "ADD"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "SWAP1"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "DUP2"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "MSTORE"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "ADD"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5373,
											"name": "KECCAK256"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5382,
											"name": "DUP7"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "AND"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "AND"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "DUP2"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "MSTORE"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "ADD"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "SWAP1"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "DUP2"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "MSTORE"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "ADD"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5354,
											"end": 5383,
											"name": "KECCAK256"
										},
										{
											"begin": 5354,
											"end": 5387,
											"name": "DUP2"
										},
										{
											"begin": 5354,
											"end": 5387,
											"name": "SWAP1"
										},
										{
											"begin": 5354,
											"end": 5387,
											"name": "SSTORE"
										},
										{
											"begin": 5354,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "JUMP"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "JUMPDEST"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 5453,
											"end": 5469,
											"name": "DUP4"
										},
										{
											"begin": 5440,
											"end": 5448,
											"name": "DUP3"
										},
										{
											"begin": 5440,
											"end": 5452,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 5440,
											"end": 5452,
											"name": "SWAP1"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "SWAP2"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "SWAP1"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "AND"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 5440,
											"end": 5470,
											"name": "JUMPDEST"
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5416,
											"end": 5426,
											"name": "CALLER"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "AND"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "AND"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "SWAP1"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5427,
											"name": "KECCAK256"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5436,
											"name": "DUP7"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "AND"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "AND"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "SWAP1"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5437,
											"name": "KECCAK256"
										},
										{
											"begin": 5408,
											"end": 5470,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5470,
											"name": "SWAP1"
										},
										{
											"begin": 5408,
											"end": 5470,
											"name": "SSTORE"
										},
										{
											"begin": 5408,
											"end": 5470,
											"name": "POP"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 5313,
											"end": 5477,
											"name": "JUMPDEST"
										},
										{
											"begin": 5508,
											"end": 5516,
											"name": "DUP4"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "AND"
										},
										{
											"begin": 5496,
											"end": 5506,
											"name": "CALLER"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "AND"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5536,
											"name": "CALLER"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "AND"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP2"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "ADD"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "SWAP1"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "DUP2"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "MSTORE"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "ADD"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5537,
											"name": "KECCAK256"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5538,
											"end": 5546,
											"name": "DUP9"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "AND"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "AND"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "DUP2"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "MSTORE"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "ADD"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "SWAP1"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "DUP2"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "MSTORE"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "ADD"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "KECCAK256"
										},
										{
											"begin": 5518,
											"end": 5547,
											"name": "SLOAD"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "MLOAD"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "DUP3"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "DUP2"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "MSTORE"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "ADD"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "POP"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "POP"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "MLOAD"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "DUP1"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "SWAP2"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "SUB"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "SWAP1"
										},
										{
											"begin": 5487,
											"end": 5548,
											"name": "LOG3"
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5554,
											"end": 5565,
											"name": "SWAP2"
										},
										{
											"begin": 5554,
											"end": 5565,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP3"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "SWAP2"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "POP"
										},
										{
											"begin": 5167,
											"end": 5570,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "JUMPDEST"
										},
										{
											"begin": 1967,
											"end": 1974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 1997,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP4"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "AND"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "DUP2"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "MSTORE"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "ADD"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "SWAP1"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "DUP2"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "MSTORE"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "ADD"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "KECCAK256"
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "SLOAD"
										},
										{
											"begin": 1982,
											"end": 2005,
											"name": "SWAP1"
										},
										{
											"begin": 1982,
											"end": 2005,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP2"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 2010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "JUMPDEST"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DUP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SLOAD"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "EXP"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "SWAP1"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "DIV"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 202,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 198,
											"name": "CALLER"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "AND"
										},
										{
											"begin": 188,
											"end": 207,
											"name": "EQ"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "ISZERO"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPI"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "REVERT"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 180,
											"end": 208,
											"name": "JUMPDEST"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SWAP1"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SLOAD"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SWAP1"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "EXP"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "SWAP1"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "DIV"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "AND"
										},
										{
											"begin": 5610,
											"end": 5626,
											"name": "ISZERO"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "ISZERO"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "ISZERO"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "JUMPI"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "DUP1"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "REVERT"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5602,
											"end": 5627,
											"name": "JUMPDEST"
										},
										{
											"begin": 6352,
											"end": 6356,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6334,
											"end": 6349,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6334,
											"end": 6349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "EXP"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "DUP2"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "SLOAD"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "DUP2"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "MUL"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "NOT"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "AND"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "DUP4"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "ISZERO"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "ISZERO"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "MUL"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "OR"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "SWAP1"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "SSTORE"
										},
										{
											"begin": 6334,
											"end": 6356,
											"name": "POP"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "PUSH",
											"value": "AE5184FBA832CB2B1F702ACA6117B8D265EAF03AD33EB133F19DDE0F5920FA08"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "MLOAD"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "MLOAD"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "DUP1"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "SWAP2"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "SUB"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "SWAP1"
										},
										{
											"begin": 6367,
											"end": 6381,
											"name": "LOG1"
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6387,
											"end": 6398,
											"name": "SWAP1"
										},
										{
											"begin": 6387,
											"end": 6398,
											"name": "POP"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "SWAP1"
										},
										{
											"begin": 6263,
											"end": 6403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMPDEST"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SLOAD"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "EXP"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "SWAP1"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DIV"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "AND"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "DUP2"
										},
										{
											"begin": 46,
											"end": 66,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MLOAD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "ADD"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "PUSH",
											"value": "537472616E676520555344540000000000000000000000000000000000000000"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "MSTORE"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "DUP2"
										},
										{
											"begin": 812,
											"end": 858,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "JUMPDEST"
										},
										{
											"begin": 1402,
											"end": 1406,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1438,
											"name": "DUP1"
										},
										{
											"begin": 1422,
											"end": 1439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1439,
											"name": "AND"
										},
										{
											"begin": 1422,
											"end": 1425,
											"name": "DUP4"
										},
										{
											"begin": 1422,
											"end": 1439,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1439,
											"name": "AND"
										},
										{
											"begin": 1422,
											"end": 1439,
											"name": "EQ"
										},
										{
											"begin": 1422,
											"end": 1439,
											"name": "ISZERO"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "ISZERO"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "ISZERO"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "JUMPI"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "MLOAD"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "MSTORE"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP3"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "SUB"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP3"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "MSTORE"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "MSTORE"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "4F6E6C7920616C6C6F772073656E6420746F206F746865722E00000000000000"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "MSTORE"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "ADD"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "SWAP2"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "MLOAD"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "SWAP2"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "SUB"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "SWAP1"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "REVERT"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 1414,
											"end": 1468,
											"name": "JUMPDEST"
										},
										{
											"begin": 1492,
											"end": 1500,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1511,
											"name": "CALLER"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "AND"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "AND"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "DUP2"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "MSTORE"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "SWAP1"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "DUP2"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "MSTORE"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "KECCAK256"
										},
										{
											"begin": 1492,
											"end": 1512,
											"name": "SLOAD"
										},
										{
											"begin": 1482,
											"end": 1488,
											"name": "DUP3"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "GT"
										},
										{
											"begin": 1482,
											"end": 1512,
											"name": "ISZERO"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "ISZERO"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "ISZERO"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "JUMPI"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP3"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "496E73756666696369656E742066756E64000000000000000000000000000000"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP2"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "MSTORE"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "ADD"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "POP"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "MLOAD"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "DUP1"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "SWAP2"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "SUB"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "SWAP1"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "REVERT"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 1474,
											"end": 1534,
											"name": "JUMPDEST"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1589,
											"end": 1595,
											"name": "DUP3"
										},
										{
											"begin": 1564,
											"end": 1572,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1583,
											"name": "CALLER"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "AND"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "AND"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "DUP2"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "MSTORE"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "ADD"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "DUP2"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "MSTORE"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "ADD"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "KECCAK256"
										},
										{
											"begin": 1564,
											"end": 1584,
											"name": "SLOAD"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1564,
											"end": 1588,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "SWAP2"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "SWAP1"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "AND"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1564,
											"end": 1596,
											"name": "JUMPDEST"
										},
										{
											"begin": 1541,
											"end": 1549,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "CALLER"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "AND"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "AND"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "DUP2"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "MSTORE"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "ADD"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "SWAP1"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "DUP2"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "MSTORE"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "ADD"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "KECCAK256"
										},
										{
											"begin": 1541,
											"end": 1596,
											"name": "DUP2"
										},
										{
											"begin": 1541,
											"end": 1596,
											"name": "SWAP1"
										},
										{
											"begin": 1541,
											"end": 1596,
											"name": "SSTORE"
										},
										{
											"begin": 1541,
											"end": 1596,
											"name": "POP"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP3"
										},
										{
											"begin": 1618,
											"end": 1626,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1630,
											"name": "DUP7"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "AND"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "AND"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "DUP2"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "MSTORE"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "ADD"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "SWAP1"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "DUP2"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "MSTORE"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "ADD"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "KECCAK256"
										},
										{
											"begin": 1618,
											"end": 1631,
											"name": "SLOAD"
										},
										{
											"begin": 1618,
											"end": 1635,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1618,
											"end": 1635,
											"name": "SWAP1"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "SWAP2"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "AND"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 1618,
											"end": 1643,
											"name": "JUMPDEST"
										},
										{
											"begin": 1602,
											"end": 1610,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1614,
											"name": "DUP6"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "AND"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "AND"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "MSTORE"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "ADD"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1615,
											"name": "KECCAK256"
										},
										{
											"begin": 1602,
											"end": 1643,
											"name": "DUP2"
										},
										{
											"begin": 1602,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 1602,
											"end": 1643,
											"name": "SSTORE"
										},
										{
											"begin": 1602,
											"end": 1643,
											"name": "POP"
										},
										{
											"begin": 1675,
											"end": 1678,
											"name": "DUP3"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "AND"
										},
										{
											"begin": 1663,
											"end": 1673,
											"name": "CALLER"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "AND"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP5"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "MLOAD"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "DUP3"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "DUP2"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "MSTORE"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "ADD"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "SWAP2"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "MLOAD"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "SWAP2"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "SUB"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1654,
											"end": 1687,
											"name": "LOG3"
										},
										{
											"begin": 1700,
											"end": 1704,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1693,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1693,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP3"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "SWAP2"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1339,
											"end": 1709,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "JUMPDEST"
										},
										{
											"begin": 4521,
											"end": 4525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 4599,
											"end": 4610,
											"name": "DUP3"
										},
										{
											"begin": 4565,
											"end": 4572,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "CALLER"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "AND"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "AND"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "DUP2"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "MSTORE"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "ADD"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "SWAP1"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "DUP2"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "MSTORE"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "ADD"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4584,
											"name": "KECCAK256"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "DUP7"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "AND"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "AND"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "DUP2"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "MSTORE"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "ADD"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "SWAP1"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "DUP2"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "MSTORE"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "ADD"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "KECCAK256"
										},
										{
											"begin": 4565,
											"end": 4594,
											"name": "SLOAD"
										},
										{
											"begin": 4565,
											"end": 4598,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4565,
											"end": 4598,
											"name": "SWAP1"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "SWAP2"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "SWAP1"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "AND"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 4565,
											"end": 4611,
											"name": "JUMPDEST"
										},
										{
											"begin": 4533,
											"end": 4540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4551,
											"name": "CALLER"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "AND"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "AND"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "DUP2"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "MSTORE"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "ADD"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "SWAP1"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "DUP2"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "MSTORE"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "ADD"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4552,
											"name": "KECCAK256"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4553,
											"end": 4561,
											"name": "DUP6"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "AND"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "AND"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "DUP2"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "MSTORE"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "ADD"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "SWAP1"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "DUP2"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "MSTORE"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "ADD"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4562,
											"name": "KECCAK256"
										},
										{
											"begin": 4533,
											"end": 4611,
											"name": "DUP2"
										},
										{
											"begin": 4533,
											"end": 4611,
											"name": "SWAP1"
										},
										{
											"begin": 4533,
											"end": 4611,
											"name": "SSTORE"
										},
										{
											"begin": 4533,
											"end": 4611,
											"name": "POP"
										},
										{
											"begin": 4643,
											"end": 4651,
											"name": "DUP3"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "AND"
										},
										{
											"begin": 4631,
											"end": 4641,
											"name": "CALLER"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "AND"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4653,
											"end": 4660,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4671,
											"name": "CALLER"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "AND"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "AND"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "DUP2"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "MSTORE"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "ADD"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "SWAP1"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "DUP2"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "MSTORE"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "ADD"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "KECCAK256"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4681,
											"name": "DUP8"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "AND"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "AND"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "DUP2"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "MSTORE"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "SWAP1"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "DUP2"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "MSTORE"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "ADD"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "KECCAK256"
										},
										{
											"begin": 4653,
											"end": 4682,
											"name": "SLOAD"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "MLOAD"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "DUP1"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "DUP3"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "DUP2"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "MSTORE"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "ADD"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "SWAP2"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "POP"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "POP"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "MLOAD"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "DUP1"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "SWAP2"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "SUB"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "SWAP1"
										},
										{
											"begin": 4622,
											"end": 4683,
											"name": "LOG3"
										},
										{
											"begin": 4696,
											"end": 4700,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "SWAP1"
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP3"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "SWAP2"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "POP"
										},
										{
											"begin": 4443,
											"end": 4705,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "JUMPDEST"
										},
										{
											"begin": 3934,
											"end": 3941,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3963,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "DUP5"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "AND"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "DUP2"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "MSTORE"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "ADD"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "SWAP1"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "DUP2"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "MSTORE"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "ADD"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3971,
											"name": "KECCAK256"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3980,
											"name": "DUP4"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "AND"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "AND"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "DUP2"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "MSTORE"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "ADD"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "SWAP1"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "DUP2"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "MSTORE"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "ADD"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "KECCAK256"
										},
										{
											"begin": 3956,
											"end": 3981,
											"name": "SLOAD"
										},
										{
											"begin": 3949,
											"end": 3981,
											"name": "SWAP1"
										},
										{
											"begin": 3949,
											"end": 3981,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP3"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3860,
											"end": 3986,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 381,
											"end": 486,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 381,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 464,
											"end": 465,
											"name": "DUP3"
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP3"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "GT"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "ISZERO"
										},
										{
											"begin": 452,
											"end": 466,
											"name": "ISZERO"
										},
										{
											"begin": 452,
											"end": 466,
											"name": "ISZERO"
										},
										{
											"begin": 452,
											"end": 466,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 452,
											"end": 466,
											"name": "JUMPI"
										},
										{
											"begin": 452,
											"end": 466,
											"name": "INVALID"
										},
										{
											"begin": 452,
											"end": 466,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 452,
											"end": 466,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP4"
										},
										{
											"begin": 477,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 470,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 470,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 381,
											"end": 486,
											"name": "SWAP3"
										},
										{
											"begin": 381,
											"end": 486,
											"name": "SWAP2"
										},
										{
											"begin": 381,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 381,
											"end": 486,
											"name": "POP"
										},
										{
											"begin": 381,
											"end": 486,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "JUMPDEST"
										},
										{
											"begin": 547,
											"end": 554,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 560,
											"end": 569,
											"name": "DUP1"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "DUP3"
										},
										{
											"begin": 572,
											"end": 573,
											"name": "DUP5"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "ADD"
										},
										{
											"begin": 560,
											"end": 577,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 577,
											"name": "POP"
										},
										{
											"begin": 593,
											"end": 594,
											"name": "DUP4"
										},
										{
											"begin": 588,
											"end": 589,
											"name": "DUP2"
										},
										{
											"begin": 588,
											"end": 594,
											"name": "LT"
										},
										{
											"begin": 588,
											"end": 594,
											"name": "ISZERO"
										},
										{
											"begin": 581,
											"end": 595,
											"name": "ISZERO"
										},
										{
											"begin": 581,
											"end": 595,
											"name": "ISZERO"
										},
										{
											"begin": 581,
											"end": 595,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 581,
											"end": 595,
											"name": "JUMPI"
										},
										{
											"begin": 581,
											"end": 595,
											"name": "INVALID"
										},
										{
											"begin": 581,
											"end": 595,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 581,
											"end": 595,
											"name": "JUMPDEST"
										},
										{
											"begin": 606,
											"end": 607,
											"name": "DUP1"
										},
										{
											"begin": 599,
											"end": 607,
											"name": "SWAP2"
										},
										{
											"begin": 599,
											"end": 607,
											"name": "POP"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "SWAP3"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "SWAP2"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 489,
											"end": 611,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"finishMinting()": "7d64bcb4",
							"increaseApproval(address,uint256)": "d73dd623",
							"mint(address,uint256)": "40c10f19",
							"mintingFinished()": "05d2035b",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"SetOwner\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.   * Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"finishMinting()\":{\"details\":\"Function to stop minting new tokens.\",\"return\":\"True if the operation was successful.\"},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender.   * approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"transfer token for a specified address\",\"params\":{\"_to\":\"The address to transfer to.\",\"_value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"_from\":\"address The address which you want to send tokens from\",\"_to\":\"address The address which you want to transfer to\",\"_value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"Standard ERC20 token\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/token/StrangeUSDT.sol\":\"StrangeUSDT\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/Owned.sol\":{\"keccak256\":\"0xe581564b579e296a5a9faa087fddccd001c831f3189cffaeeb725803f5f2dbaa\",\"urls\":[\"bzzr://32f898c33c3db67a6a35c83821124d087c51afc832e71b1cd92917f3f1c42383\"]},\"contracts/token/SafeMath.sol\":{\"keccak256\":\"0x8e1254f51ec01c97ecf7f715db2b8b9ed88b26cd2a164e3d271824c4a9142b29\",\"urls\":[\"bzzr://d31544e66309fecf6eeaa8f6dda1b3422bf93bef1344d2a8cbbd69224358eeed\"]},\"contracts/token/StrangeUSDT.sol\":{\"keccak256\":\"0x999ddfa2f1718164e320d2cc1ccd1c251652f4a64ddb38a87c574fbcadea33c6\",\"urls\":[\"bzzr://eb4a37733a3f01f1d4cf398f737f9320c5ce179fe860db549818edf4b94203e5\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/token/Owned.sol": {
				"ast": {
					"absolutePath": "contracts/token/Owned.sol",
					"exportedSymbols": {
						"Owned": [
							47
						]
					},
					"id": 48,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 47,
							"linearizedBaseContracts": [
								47
							],
							"name": "Owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 47,
									"src": "46:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "46:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "SetOwner",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "88:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "88:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "119:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "87:57:0"
									},
									"src": "73:72:0"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "170:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 12,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "188:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "188:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 14,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "202:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "188:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629,
															630
														],
														"referencedDeclaration": 629,
														"src": "180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "180:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "180:28:0"
											},
											{
												"id": 18,
												"nodeType": "PlaceholderStatement",
												"src": "218:1:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:0:0"
									},
									"src": "151:75:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "253:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "263:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 24,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "271:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "271:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "263:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "263:18:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:0:0"
									},
									"scope": 47,
									"src": "232:56:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "347:73:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 37,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "378:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 36,
														"name": "SetOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "362:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "EmitStatement",
												"src": "357:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 41,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "397:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 42,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "405:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "397:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "397:16:0"
											}
										]
									},
									"documentation": null,
									"id": 46,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 34,
											"modifierName": {
												"argumentTypes": null,
												"id": 33,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 20,
												"src": "337:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "337:9:0"
										}
									],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "312:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "311:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "347:0:0"
									},
									"scope": 47,
									"src": "294:126:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 48,
							"src": "25:397:0"
						}
					],
					"src": "0:422:0"
				},
				"id": 0
			},
			"contracts/token/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/token/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							142
						]
					},
					"id": 143,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 49,
							"literals": [
								"solidity",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
							"fullyImplemented": true,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "202:69:1",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "206:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "206:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "218:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 61,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "222:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "218:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "206:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 65,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "234:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 66,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "239:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "234:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 68,
																		"name": "c",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 59,
																		"src": "244:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 69,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "248:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "244:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 71,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "253:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "244:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "234:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 64,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "227:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "227:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "227:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 76,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "266:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 77,
												"nodeType": "Return",
												"src": "259:8:1"
											}
										]
									},
									"documentation": null,
									"id": 79,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "148:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "148:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "159:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "159:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "147:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "193:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "192:9:1"
									},
									"scope": 142,
									"src": "135:136:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "341:37:1",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "345:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 88,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "345:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 93,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "357:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 91,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "361:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "357:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "345:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 94,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 89,
													"src": "373:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 87,
												"id": 95,
												"nodeType": "Return",
												"src": "366:8:1"
											}
										]
									},
									"documentation": null,
									"id": 97,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "286:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "331:9:1"
									},
									"scope": 142,
									"src": "274:104:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "448:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 107,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "459:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "464:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "452:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "452:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "452:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "477:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "481:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "477:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 105,
												"id": 115,
												"nodeType": "Return",
												"src": "470:12:1"
											}
										]
									},
									"documentation": null,
									"id": 117,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "394:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "405:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "393:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "439:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "438:9:1"
									},
									"scope": 142,
									"src": "381:105:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "556:55:1",
										"statements": [
											{
												"assignments": [
													127
												],
												"declarations": [
													{
														"constant": false,
														"id": 127,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 141,
														"src": "560:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 126,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "560:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 128,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "572:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "576:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "572:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "560:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "588:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 134,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "593:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "588:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 132,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "581:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "581:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "581:14:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 138,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "606:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 125,
												"id": 139,
												"nodeType": "Return",
												"src": "599:8:1"
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "502:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "513:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:22:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "547:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "546:9:1"
									},
									"scope": 142,
									"src": "489:122:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 143,
							"src": "115:498:1"
						}
					],
					"src": "0:613:1"
				},
				"id": 1
			},
			"contracts/token/StrangeUSDT.sol": {
				"ast": {
					"absolutePath": "contracts/token/StrangeUSDT.sol",
					"exportedSymbols": {
						"StrangeUSDT": [
							611
						]
					},
					"id": 612,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "contracts/token/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 145,
							"nodeType": "ImportDirective",
							"scope": 612,
							"sourceUnit": 143,
							"src": "26:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/Owned.sol",
							"file": "./Owned.sol",
							"id": 146,
							"nodeType": "ImportDirective",
							"scope": 612,
							"sourceUnit": 48,
							"src": "51:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 147,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 47,
										"src": "365:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$47",
											"typeString": "contract Owned"
										}
									},
									"id": 148,
									"nodeType": "InheritanceSpecifier",
									"src": "365:5:2"
								}
							],
							"contractDependencies": [
								47
							],
							"contractKind": "contract",
							"documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
							"fullyImplemented": true,
							"id": 611,
							"linearizedBaseContracts": [
								611,
								47
							],
							"name": "StrangeUSDT",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 151,
									"libraryName": {
										"contractScope": null,
										"id": 149,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 142,
										"src": "382:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$142",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "376:27:2",
									"typeName": {
										"id": 150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "395:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 159,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "422:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "444:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "464:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "421:57:2"
									},
									"src": "407:72:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 167,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "497:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "497:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "520:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "545:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "496:63:2"
									},
									"src": "482:78:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 173,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "574:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "594:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "573:36:2"
									},
									"src": "563:47:2"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 175,
									"name": "MintFinished",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:2"
									},
									"src": "613:21:2"
								},
								{
									"constant": false,
									"id": 181,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "638:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "647:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "638:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 179,
											"keyType": {
												"id": 177,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "658:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 178,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 185,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "708:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "716:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "708:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 183,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "727:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 187,
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 190,
									"name": "mintingFinished",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "773:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 188,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "773:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "803:5:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 193,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "812:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 191,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "812:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "537472616e67652055534454",
										"id": 192,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "844:14:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_50033565e84bd4c171b3f7dcdb8c8c4a2617dd4e460cb879d21d30a34ce0f1bf",
											"typeString": "literal_string \"Strange USDT\""
										},
										"value": "Strange USDT"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 196,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 611,
									"src": "862:27:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 194,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "862:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "887:2:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "943:99:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 203,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "949:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 206,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "981:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 204,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "964:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "964:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "964:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "949:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "949:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 210,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "995:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 212,
														"indexExpression": {
															"argumentTypes": null,
															"id": 211,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "1004:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "995:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 217,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1029:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1011:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 215,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 214,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "1020:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1011:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "1011:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1011:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "995:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "995:42:2"
											}
										]
									},
									"documentation": null,
									"id": 222,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "906:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "919:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "905:30:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:2"
									},
									"scope": 611,
									"src": "894:148:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1155:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 227,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 187,
													"src": "1168:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 228,
												"nodeType": "Return",
												"src": "1161:19:2"
											}
										]
									},
									"documentation": "@dev total number of tokens in existence",
									"id": 230,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1146:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1145:9:2"
									},
									"scope": 611,
									"src": "1102:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 291,
										"nodeType": "Block",
										"src": "1408:301:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 240,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1422:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1437:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1429:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1429:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f6e6c7920616c6c6f772073656e6420746f206f746865722e",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1440:27:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03ac2025879fda5ad1e0685c40d94fedc615982c6127aa2f845bd3d6f601c166",
																"typeString": "literal_string \"Only allow send to other.\""
															},
															"value": "Only allow send to other."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03ac2025879fda5ad1e0685c40d94fedc615982c6127aa2f845bd3d6f601c166",
																"typeString": "literal_string \"Only allow send to other.\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629,
															630
														],
														"referencedDeclaration": 630,
														"src": "1414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1414:54:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 249,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1482:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 250,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1492:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 253,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 251,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "1501:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1501:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1492:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1482:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e742066756e64",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1514:19:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_deb7d445165b9b7f8c05f1382ef40a5685d20c7246180b1d67b4c7eb28b2c697",
																"typeString": "literal_string \"Insufficient fund\""
															},
															"value": "Insufficient fund"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_deb7d445165b9b7f8c05f1382ef40a5685d20c7246180b1d67b4c7eb28b2c697",
																"typeString": "literal_string \"Insufficient fund\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629,
															630
														],
														"referencedDeclaration": 630,
														"src": "1474:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1474:60:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 258,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1541:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 261,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 259,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "1550:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1550:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1541:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 267,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1589:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 262,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1564:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 265,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 263,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "1573:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1573:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1564:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 117,
															"src": "1564:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1564:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1541:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "1541:55:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 271,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1602:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 273,
														"indexExpression": {
															"argumentTypes": null,
															"id": 272,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1611:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1602:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 278,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "1636:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 274,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1618:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 276,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 275,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "1627:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1618:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "1618:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1618:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1602:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "1602:41:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 283,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "1663:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1663:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1675:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 286,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "1680:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 282,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "1654:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "EmitStatement",
												"src": "1649:38:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1700:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 238,
												"id": 290,
												"nodeType": "Return",
												"src": "1693:11:2"
											}
										]
									},
									"documentation": "@dev transfer token for a specified address\n@param _to The address to transfer to.\n@param _value The amount to be transferred.",
									"id": 292,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1357:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1370:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1356:29:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1402:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1401:6:2"
									},
									"scope": 611,
									"src": "1339:370:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "1976:34:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 299,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "1989:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 301,
													"indexExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "1998:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1989:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 298,
												"id": 302,
												"nodeType": "Return",
												"src": "1982:23:2"
											}
										]
									},
									"documentation": "@dev Gets the balance of the specified address.\n@param _owner The address to query the the balance of.\n@return An uint256 representing the amount owned by the passed address.",
									"id": 304,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1930:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1929:16:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "1967:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1966:9:2"
									},
									"scope": 611,
									"src": "1911:99:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "2374:356:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "2388:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2403:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2395:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2395:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2388:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629,
															630
														],
														"referencedDeclaration": 629,
														"src": "2380:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2380:26:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 324,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "2420:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 325,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2430:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 327,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 326,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "2439:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2430:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2420:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 323,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629,
															630
														],
														"referencedDeclaration": 629,
														"src": "2412:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2412:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "2412:34:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 332,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "2460:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 333,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "2470:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 335,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 334,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "2478:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2470:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 338,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 336,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "2485:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2485:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2470:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2460:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629,
															630
														],
														"referencedDeclaration": 629,
														"src": "2452:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2452:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2452:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 342,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2504:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 344,
														"indexExpression": {
															"argumentTypes": null,
															"id": 343,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "2513:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2504:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 349,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "2542:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 345,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2522:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 347,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 346,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "2531:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2522:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 117,
															"src": "2522:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2522:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2504:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "2504:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 353,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2555:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 355,
														"indexExpression": {
															"argumentTypes": null,
															"id": 354,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2564:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2555:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 360,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "2589:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 356,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "2571:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 358,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 357,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "2580:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2571:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "2571:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2571:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2555:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "2555:41:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 364,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "2602:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 368,
															"indexExpression": {
																"argumentTypes": null,
																"id": 365,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "2610:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2602:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 369,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 366,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "2617:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2617:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2602:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 377,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "2662:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 370,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "2631:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 372,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 371,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "2639:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2631:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 375,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 373,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "2646:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2646:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2631:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 117,
															"src": "2631:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2631:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2602:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "2602:67:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 382,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "2689:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 383,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2696:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 384,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "2701:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2680:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "EmitStatement",
												"src": "2675:33:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2721:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 314,
												"id": 388,
												"nodeType": "Return",
												"src": "2714:11:2"
											}
										]
									},
									"documentation": "@dev Transfer tokens from one address to another\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint256 the amount of tokens to be transferred",
									"id": 390,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2308:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2323:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2336:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2307:44:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2368:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2368:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2367:6:2"
									},
									"scope": 611,
									"src": "2286:444:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3426:115:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 399,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "3432:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 403,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 400,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "3440:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3440:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3432:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 404,
														"indexExpression": {
															"argumentTypes": null,
															"id": 402,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3452:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3432:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 405,
														"name": "_value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "3464:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3432:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "3432:38:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 409,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "3490:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3490:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 411,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3502:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 412,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "3512:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 408,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3481:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "EmitStatement",
												"src": "3476:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3532:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 398,
												"id": 416,
												"nodeType": "Return",
												"src": "3525:11:2"
											}
										]
									},
									"documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n   * Beware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.",
									"id": 418,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3370:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3370:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3388:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3388:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3369:34:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3420:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3420:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3419:6:2"
									},
									"scope": 611,
									"src": "3353:188:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "3943:43:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 427,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "3956:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 429,
														"indexExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "3964:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3956:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 431,
													"indexExpression": {
														"argumentTypes": null,
														"id": 430,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "3972:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3956:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 432,
												"nodeType": "Return",
												"src": "3949:32:2"
											}
										]
									},
									"documentation": "@dev Function to check the amount of tokens that an owner allowed to a spender.\n@param _owner address The address which owns the funds.\n@param _spender address The address which will spend the funds.\n@return A uint256 specifying the amount of tokens still available for the spender.",
									"id": 434,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3879:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3895:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3895:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3878:34:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "3934:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3933:9:2"
									},
									"scope": 611,
									"src": "3860:126:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "4527:178:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 443,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "4533:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 447,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 444,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "4541:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4541:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4533:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 448,
														"indexExpression": {
															"argumentTypes": null,
															"id": 446,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "4553:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4533:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 456,
																"name": "_addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 438,
																"src": "4599:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 449,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "4565:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 452,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 450,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "4573:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4573:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4565:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 454,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 453,
																	"name": "_spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 436,
																	"src": "4585:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4565:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "4565:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4565:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4533:78:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "4533:78:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "4631:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4631:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "4643:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 464,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "4653:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 467,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 465,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "4661:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4661:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4653:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 469,
															"indexExpression": {
																"argumentTypes": null,
																"id": 468,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "4673:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4653:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "4622:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4622:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "EmitStatement",
												"src": "4617:66:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4696:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 442,
												"id": 473,
												"nodeType": "Return",
												"src": "4689:11:2"
											}
										]
									},
									"documentation": "@dev Increase the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To increment\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _addedValue The amount of tokens to increase the allowance by.",
									"id": 475,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "4469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"name": "_addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "4487:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4468:36:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "4521:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4521:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4520:6:2"
									},
									"scope": 611,
									"src": "4443:262:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "5256:314:2",
										"statements": [
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"name": "oldValue",
														"nodeType": "VariableDeclaration",
														"scope": 535,
														"src": "5262:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 484,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5262:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 492,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 486,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "5278:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 489,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 487,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "5286:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5286:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5278:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 491,
													"indexExpression": {
														"argumentTypes": null,
														"id": 490,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "5298:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5278:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5262:45:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 493,
														"name": "_subtractedValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "5317:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 494,
														"name": "oldValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5336:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5317:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 518,
													"nodeType": "Block",
													"src": "5400:77:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 506,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "5408:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 510,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 507,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "5416:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "5416:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5408:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 511,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 509,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "5428:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5408:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 514,
																			"name": "_subtractedValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "5453:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 512,
																			"name": "oldValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 485,
																			"src": "5440:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 117,
																		"src": "5440:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5440:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5408:62:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "5408:62:2"
														}
													]
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "5313:164:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5346:48:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 496,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "5354:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 500,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 497,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "5362:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "5362:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5354:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 501,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 499,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "5374:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5354:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5386:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5354:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "5354:33:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 521,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "5496:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5496:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 523,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "5508:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 524,
																	"name": "allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "5518:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 527,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 525,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "5526:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5526:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5518:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 529,
															"indexExpression": {
																"argumentTypes": null,
																"id": 528,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "5538:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5518:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 520,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "5487:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "EmitStatement",
												"src": "5482:66:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5561:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 483,
												"id": 533,
												"nodeType": "Return",
												"src": "5554:11:2"
											}
										]
									},
									"documentation": "@dev Decrease the amount of tokens that an owner allowed to a spender.\n   * approve should be called when allowed[_spender] == 0. To decrement\nallowed value is better to use this function to avoid 2 calls (and wait until\nthe first transaction is mined)\nFrom MonolithDAO Token.sol\n@param _spender The address which will spend the funds.\n@param _subtractedValue The amount of tokens to decrease the allowance by.",
									"id": 535,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseApproval",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5193:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5193:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"name": "_subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5211:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5211:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5192:41:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "5250:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5250:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5249:6:2"
									},
									"scope": 611,
									"src": "5167:403:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "5596:43:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5610:16:2",
															"subExpression": {
																"argumentTypes": null,
																"id": 538,
																"name": "mintingFinished",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "5611:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															629,
															630
														],
														"referencedDeclaration": 629,
														"src": "5602:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5602:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "5602:25:2"
											},
											{
												"id": 542,
												"nodeType": "PlaceholderStatement",
												"src": "5633:1:2"
											}
										]
									},
									"documentation": null,
									"id": 544,
									"name": "canMint",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5593:2:2"
									},
									"src": "5577:62:2",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "5959:190:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 557,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "5965:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 560,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "5997:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 558,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "5980:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "5980:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5980:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5965:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "5965:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 564,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "6011:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 566,
														"indexExpression": {
															"argumentTypes": null,
															"id": 565,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "6020:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6011:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 571,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "6045:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 567,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "6027:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 569,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 568,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6036:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6027:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 141,
															"src": "6027:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6027:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6011:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "6011:42:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 576,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "6069:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 577,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "6074:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "6064:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6064:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "EmitStatement",
												"src": "6059:23:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6110:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6102:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6102:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 584,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "6114:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 585,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "6119:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "6093:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "EmitStatement",
												"src": "6088:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6140:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 556,
												"id": 589,
												"nodeType": "Return",
												"src": "6133:11:2"
											}
										]
									},
									"documentation": "@dev Function to mint tokens\n@param _to The address that will receive the minted tokens.\n@param _amount The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
									"id": 591,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 551,
											"modifierName": {
												"argumentTypes": null,
												"id": 550,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 20,
												"src": "5919:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5919:9:2"
										},
										{
											"arguments": null,
											"id": 553,
											"modifierName": {
												"argumentTypes": null,
												"id": 552,
												"name": "canMint",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 544,
												"src": "5929:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5929:7:2"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5889:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5902:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5902:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5888:30:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "5953:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5953:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5952:6:2"
									},
									"scope": 611,
									"src": "5875:274:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "6328:75:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 600,
														"name": "mintingFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "6334:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6352:4:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6334:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "6334:22:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 604,
														"name": "MintFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6367:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6367:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "EmitStatement",
												"src": "6362:19:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6394:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 599,
												"id": 608,
												"nodeType": "Return",
												"src": "6387:11:2"
											}
										]
									},
									"documentation": "@dev Function to stop minting new tokens.\n@return True if the operation was successful.",
									"id": 610,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 594,
											"modifierName": {
												"argumentTypes": null,
												"id": 593,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 20,
												"src": "6288:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6288:9:2"
										},
										{
											"arguments": null,
											"id": 596,
											"modifierName": {
												"argumentTypes": null,
												"id": 595,
												"name": "canMint",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 544,
												"src": "6298:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6298:7:2"
										}
									],
									"name": "finishMinting",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6285:2:2"
									},
									"payable": false,
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "6322:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6322:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6321:6:2"
									},
									"scope": 611,
									"src": "6263:140:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 612,
							"src": "341:6065:2"
						}
					],
					"src": "0:6406:2"
				},
				"id": 2
			}
		}
	}
}